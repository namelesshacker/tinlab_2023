<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
clock globale_tijd;
clock x;
//sluis data
const int N = 3;         // # ships
chan        appr[N], move[N],stop[N], leave[N], wait[N];
urgent chan go[N];
// waterniveau in in meter van 0 tot 10
typedef int[3,10] waterniveau;
//
typedef int[0,N-1] id_t;
int Counter =0;
//sluis deuren kiezen
bool linksom;
bool rechtsom;
int loper;
chan lower_gate;
chan upper_gate;
//sluis deuren openen
chan gate_open;
chan gate_closed;
// stoplicht
chan binnen_laag;
chan binnen_hoog;
chan buiten_laag;
chan buiten_hoog;
//sluis
chan groen;
chan rood;
//binnenstoplicht
chan binnenstoplicht_groen;
chan binnenstoplicht_rood;
// buitenstoplicht
chan buitenstoplicht_groen;
chan buitenstoplicht_rood;
// waterlevel bijsturen
chan Toevoeren;
chan Afvoeren;
chan pompen;
//ship
chan move_ship;
bool shipping_allowed=false;
bool invaren_allowed=false;
bool uitvaren_allowed=false;
//signaleren
chan signal_aanmelden_aankomst;
bool signal_aanmelden=false;
bool signal_registreer=false;</declaration><template><name x="8" y="8">Schip</name><parameter>const id_t id</parameter><declaration>// Place global declarations here.
clock x;</declaration><location id="id0" x="-128" y="-64"><name x="-138" y="-94">Uitgevaren</name></location><location id="id1" x="-128" y="-160"><name x="-138" y="-190">Uitvarende</name></location><location id="id2" x="0" y="-224"><name x="-10" y="-254">Gestopt</name></location><location id="id3" x="192" y="-232"><name x="182" y="-262">Stoppende</name></location><location id="id4" x="288" y="-224"><name x="278" y="-254">Ingevaren</name></location><location id="id5" x="288" y="-128"><name x="278" y="-158">Invarende</name></location><location id="id6" x="288" y="-32"><name x="278" y="-62">Wachtende</name></location><location id="id7" x="192" y="-32"><name x="182" y="-62">Aanvarende</name></location><location id="id8" x="0" y="-32"><name x="-10" y="-62">Init</name></location><init ref="id8"/></template><template><name>Controller</name><declaration>id_t entrance_list[N+1];
id_t waiting_list[N+1];
int[0,N] len;


void schedule(id_t element){}


// Put an element at the end of the queue
void enqueue(id_t element)
{
        entrance_list[len++] = element;
}

// Remove the front element of the queue
void dequeue()
{
        int i = 0;
        len -= 1;
        while (i &lt; len)
        {
                entrance_list[i] = entrance_list[i + 1];
                i++;
        }
        entrance_list[i] = 0;
}

// Returns the front element of the queue
id_t front()
{
   return entrance_list[0];
}

// Returns the last element of the queue
id_t tail()
{
   return entrance_list[len - 1];
}

// if enqueue is full send to waiting queue
// remove first element of waiting queue en send to enqueue</declaration><location id="id9" x="64" y="0"><name x="54" y="-30">openen_stoplicht1</name></location><location id="id10" x="-184" y="0"><name x="-194" y="-30">openen_stoplicht2</name></location><location id="id11" x="-544" y="0"><name x="-554" y="-30">Uitvaart_toestemming_geven</name></location><location id="id12" x="-544" y="-192"><name x="-554" y="-222">Nivelleer_uitzetten</name></location><location id="id13" x="-384" y="-192"><name x="-394" y="-222">Nivelleerproces_aanzetten</name></location><location id="id14" x="-192" y="-192"><name x="-202" y="-222">Nivelleermachine_controleren</name></location><location id="id15" x="0" y="-192"><name x="-10" y="-222">Toengng_intrekken</name></location><location id="id16" x="384" y="-192"><name x="374" y="-222">Wachtrij_controlleren</name></location><location id="id17" x="128" y="-192"><name x="118" y="-222">Sluiskolk_controleren</name></location><location id="id18" x="384" y="0"><name x="374" y="-30">Schepen_toestemming_geven</name></location><location id="id19" x="192" y="0"><name x="182" y="-30">Sluiskolk_beschikbaar_stellen</name></location><location id="id20" x="0" y="0"><name x="-10" y="-30">Init</name></location><init ref="id20"/></template><template><name>Nivelleer</name><declaration>const int max_waterlevel = 7;  
const int min_waterlevel = 3;
clock x;
bool pompIsAan=false;
bool pompIsUit=true;


const int water_laag=3;
const int water_hoog=10;
const int water_median=(water_hoog+water_laag)/2;
int[water_laag,water_hoog] water=water_median;
clock pomp_clock;
// waterniveau van de sensor voor de sluis is gelijk aan level
waterniveau depth;
</declaration><location id="id21" x="-128" y="-72"><name x="-138" y="-102">Proces_nivelleren_afgesloten</name></location><location id="id22" x="0" y="-128"><name x="-10" y="-158">Proces_nivelleren_afsluitende</name></location><location id="id23" x="160" y="-128"><name x="150" y="-158">Nivellerende</name></location><location id="id24" x="160" y="0"><name x="150" y="-30">aan</name></location><location id="id25" x="0" y="0"><name x="-10" y="-30">Uit</name></location><init ref="id25"/></template><template><name>Stoplicht</name><location id="id26" x="192" y="0"><name x="182" y="-30">Aan</name></location><location id="id27" x="0" y="0"><name x="-10" y="-30">Uit</name></location><init ref="id27"/></template><template><name>Sluisdeur</name><declaration>clock x;

const int hoogte_sluisdeur=10;</declaration><location id="id28" x="0" y="-160"><name x="-10" y="-190">Sluitende</name></location><location id="id29" x="224" y="-160"><name x="214" y="-190">Open</name></location><location id="id30" x="224" y="0"><name x="214" y="-30">Openend</name></location><location id="id31" x="0" y="0"><name x="-10" y="-30">Dicht</name></location><init ref="id31"/></template><system>system Schip, Sluisdeur,Controller,Nivelleer,Stoplicht;</system></nta>