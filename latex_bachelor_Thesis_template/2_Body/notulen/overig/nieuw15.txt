

About transition
A transition is composed of
a unique source location
a unique target location
a guard, i.e. an enabling condition (g := x ∼ c|g ∧ g, where
∼∈ {<, ≤, =, ≥, >}
a label (that can be used for synchronization)
a subset (potentially empty) of clocks to be reset

a clock valuation is a function v: X $\trightarrow$ $R^+$ \\
v[Y:=0] is the valuation obtained from v by resetting clocks from Y:  \\

\begin{math}
	$v[Y:=0]$=\left\{
	\begin{array}{ll}
		1, & \mbox{0 x $\in$ Y}.\\
		0, & \mbox{otherwise}.
	\end{array}
	\right.
\end{math}
\\

v+d = flow of time (d units) \\
(v +d)(x) = v(x)+d  \\
v $\models$ c means that valuation v satisfies the constraint c

evaluation of a clock constraint (v $\models$ g) \\
\begin{enumerate}
	\item $\vee$ $\models$ g x  < k iff ν(x) < k
	\item $\vee$ $\models$ x ≤ k iff ν(x) ≤ k
	\item $\vee$ $\models$ g1 ∧ g2 iff ν $\models$ g1 and ν $\models$ g2
\end{enumerate} 
\\
\\
\\

(s', v") and (s,v) $\xrightarrow[]{a}$(s', v").

Action transitions correspond to the execution of a transition	 from T. We write (s,v) $\xrightarrow[]{a}$ (s', v'), where a \in $\Sigma$, provided that there is a transition $\langle$ s,a, $\varphi$, $\lambda$, s' $\rangle$ such that v satisfies $\varphi$ and v=[$\lambda$:=0].

a delay transition (s, v1)  $\xrightarrow[]{$$\delta$(d)}$ (s, v_1 + d_1) for some $d_1$ $\geq$ 0, and
an action transition   (s, v1 +d1)  $\xrightarrow[]{a}$ (s', v_1') such that $v_1$ + $d_1$ satisfies $\varphi$ and v'_1 = (v_1 + d_1)[$\lambda $:=0].



 Defnition 3.1 Timed automata
A timed automation is een 6-tuple A $\langle$ $\sigma$ ,S,$S_0$, X, I, T$\rangle$, waarin geldt dat $\sigma$ een eindige alfabet voorsteld; S is een eindig srt van lcoaties (states); $S_0$ $\subseteq$ S is een set van initiele locaties; X is een set van clocks; I : S $\rightarrow$ $\Phi$(x) is de locatie invariant; en T $\subseteq$ S $\times$ $\sigma$ $\times$ $\Phi$(X) $\times$ $2^x$ $\times$ S is een set van transities.
De 5-tuple $\langle$ s, a, $\phi$ , $\lambda$, $s^$ $\rangle$ $\in$ T is een ransitie van locatie s naar locatie s' die correspondeert met actie gelabeld als a, De constraint op de clock $\phi$ speificeert wanneer de transitite wordt uitgevoerd, en $\lambda$ $\subseteq$ X is de set van clocks die worden gereset wanneer de transitie wordt uitgevoerd.

 De semantics van een timed automationA is gedefinieerd door de associatie met een transitiesysteem., T(A). Ten alle tijde geldt, de configuraties van een globale state van het systeem worden gemodelleerd door de gegeven timed automation in een bepaalde locatie, s, van de automation en clock interpretatie, v, welke een reele waarde toekent aan een klok. Dus de configuratie is een paar (s,v) waar s $\in$ S en v : $\rightarrow$ $R^+$. De set van initiele configuraties is gegeven door de set { (s,v) | s $\in$ $\wedge$ $\forall$ x $\in$ X $[v(x) =0]$}. In andere woorden, de set van initiele locaties waarin alle clocs gelijk gezet zijn aan 0.
 \cite{03CHAPTER3}
 
 Operatoren, definities clock zones en regios's zijn we in artikel . \cite{04_giWorkshop2000}
 \cite{pelanekFormal} 
 In het artikel worden de formele definitie en verificatie va   state transitites uitgelegd met de daarbij behorende eindige set van states Q, q0 als initiele state, $\sigma$ is de einndige set van symbole ut de input alfabet, de se van transities vertegenwoordogd door E, de set van states 'F'
 \cite{jiyanpatil07TOC}
 Met deze kennis zou het mogelijk zijn om een Verification and control of real-time systems te kunnen uitvoeren in timed automata
 \cite{latin06}
 \cite{realtimeForms}
 \cite{verification}
 \cite{uppaal}
 De delay en ation transites zijn wel in dit verslag opgenomen. Maar de clock regions, regions automata, en zone automata zijn niet overgenomen in onze studie.

 

 \cite{03CHAPTER3}
 Wel is duidelijk de Formal Syntax and Semantics en de TEMPORAL LOGICS. Maar de vertaling van 
 Network of Timed Automata naar Uppaal query language. A TCTL formula φ is satisfiable iff there is a labeled timed automaton
 Wel is overgenomen de Definition 3.7 (Satisfaction relation) 
 M = $\langle$A, µ$\rangle$ and a state s ∈$\in$S, such that M, s $\models$ φ.
 \cite{isbn9789526031033}
 Timed automata [4] [57] are hereby to model timed systems. These are finite-state automata
 equipped with clocks used to specify constraints on the amount of time that can elapse
 between two events (blz 46). Timed kripke structures (blz63) (blz 69) (blz 78) blz 99.
 \cite{nourollahi20191215}
 \cite{Lecture2}
 Timed Transition Systems (blz 3). Clock Constraints. (blz 4) Timed Automata.  (blz 4). Timed Computation Tree Logic.  (blz 6,7)
 \cite{LIPIcs-TIME-2021-12}
 Properties and Temporal L
 \cite{mctutorial}
 \cite{FULLTEXT02}
 \cite{stanfordRealtime}
 \cite{baierKatoenModelChecking}
 
