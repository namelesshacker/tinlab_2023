<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
// examples v1_12_06_2022 
// examples v1_13_06_2022 

// List one or more processes to be composed into a system.
//system schip,aanvoer,afvoer;
 
//system pomp,pompbediening;   
// for more uppaal documentation https://docs.uppaal.org/language-reference/expressions/

/** Requirementsoverzicht
 * Een sluis heeft deuren voor openenen en sluiten.
 * Een sluis heeft stoplichten met rood en groen waarmee toestemming al dann wel neit wordt gegeven voor schepen voor invaren of uitvaren.
 * Een schip heeft een positie en een doel
 * Een schip kan zich aanmelden
 * De pompbediening handelt de aanvraag van invarende, wachtende en uitvarende schepen af
 * Een schip kan in een wachtrij staan voodat hij een sluis invaart beneden.
 * Een schip kan in een wachtrij staan voodat hij een sluis invaart boven.
 * Een schip kan in een wachtrij staan voordat deze een sluis verlaat.
 * Als een sluis vol is komt een schip automatisch in een wachtrij.
 * Een sluis heeft een pomp(nivelleeersystseem) voor  hoog, midden, laag.
 * Een sluis houdt bij hoeveel schepen invaren.
 * Een sluis houdt bij wat de waterstand is.
 *
 * Scenario
 * Vanuit idle wordt er een schip toegevoegd aan de wachtrij boven of beneden. De sluis blijft in de wacthmodus totdat de wachtrij boven of beneden vol is.
 * Error handling
 * Pomp
 * Een pomp mag niet meer water bijpompen dan het maximum.
 * Een pomp mag niet meer  water wegpompen dan onder het NAP\
 * Stoplicht
 * Er mag niets mis gaan emt de stoplichten anders kunnen er botsingen voorkomen
 * Deur
 * Een deur moet binnen 30 seconden open en dicht anders wordt er een foutmelding gestuurd.
*/


chan start;

clock realtime;
bool entrance_schip,schip_boven=true,schip_beneden=false;
bool direction = false;
bool process_started = false;
bool process_finished = false;
bool on=false, off=false;
//const int deuren = 2;
//typedef int[0,deuren-1] deur;
//bool gate_is_open[deur];
int countCycle=0;


bool initOpenProc,initClosingProc;

bool togglePomp = false;
bool startDown =false;
bool startUp= true;
bool position=0;




bool sluisToggle = false;
bool sluisIsBezig = false;
bool lockOpen = false;
int[-1,6] waterniveau = 0;




//typedef int[0,10] meter;
//meter waterlevel;
int[-1,10] waterlevel=0;


// identifier voor schepen
const int MAX_schepen=2;
typedef int[0,MAX_schepen-1] kenteken;
chan schipklik[kenteken];
chan register[kenteken];
chan unregister[kenteken];
//chan send[0,1],receive[0,1];

chan notified_pomp_direction;


// identifier voor wachtrij
// aantal queues voor wachtrij beneden,  de wachtrij boven en  aantal schepen in de sluis
const int aantal_wachtrijen=3;

const int SIZE=3;
//queue_of_ships stack[SIZE];
//int myarray[3] := {stack[SIZE], stack[SIZE], stack[SIZE]};
int wachtrij_beneden[SIZE];
//int stack[SIZE];
int wachtrij_boven[SIZE];
//int[0, 2] myarray[stack[SIZE]];
//int queues[queue];


const int aantal_queues=1;
typedef int[0, aantal_queues-1] queue;// goed
typedef int[0, aantal_queues-1] id_q; // ook goed
typedef int[0, aantal_wachtrijen-1] que; // ook goed
typedef int[0,aantal_wachtrijen-1] queue_of_ships; // ook goed
int[-1,6] mystack[SIZE]; // size is minimaal -1 en max gelijk aan 6 ?? Is dit een fout in Uppaal waar me rekening mee moeten houden in geval van state explosion???
int queues[que];



// identifier voor deuren
int[0,1] gatenr;
const int aantal_deuren=2;
typedef int[1, aantal_deuren] id_d;
const int deuren = 2;
//typedef int[0,deuren-1] deur;
bool deur_is_open[id_d];
chan deur_openen[id_d];
chan deur_sluiten[id_d];
bool deur_is_gesloten[id_d];
chan open_gate[id_d];
chan close_gate[id_d];
chan deurklik[id_d];


// identifier voor stoplichten
// id=0 invaren beneden
// id=1 uitvaren beneden
// id=2 uitvaren boven
// id=3  invaren boven
const int aantal_stoplichten=2;
typedef int[0,aantal_stoplichten-1] stoplicht;
typedef int[0, aantal_stoplichten-1] id_s;
chan stoplichtklik[id_s];
chan start_stoplicht_uitvaren[id_s];
chan stop_stoplicht_uitvaren[id_s];
chan start_stoplicht_invaren[id_s];
chan stop_stoplicht_invaren[id_s];



// identifier voor sensoren
const int aantal_sensoren=4;
typedef int[0, aantal_sensoren-1] id_sensor;
//typedef int[0,SIZE_STACK-1] stack;
/**

*/

const int pompen = 1;
typedef int[0,pompen-1] pomp_id;
chan pomp_klik;
chan boot_aanwezig;
chan toggle_pomp[pomp_id];



chan send[kenteken], receive[kenteken];

const int positions=2;
typedef int[0,positions-1] locatie;
chan shipTrigger[locatie];

 clock x;
clock systemtime;
clock processtime;

int kostprijs = 1000;

////

const int N = 4;          // Number of tasks.
typedef int[0,N-1] pid_t; // Process IDs.

chan	done, ready, run, stop;
clock 	time;

const int E[pid_t] = { 20, 20, 10, 10 };		// 
const int L[pid_t] = { 40, 20, 10, 10 };		// [ E[i] , L[i] ] Ready interval
const int D[pid_t] = { 40, 20, 10, 10 };		// Deadlines
const int C[pid_t] = {  5,  4,  2,  1 };    	// Computation Times
const int P[pid_t] = {  1,  2,  3,  4 };		// Priorities

// Task queue
pid_t taskQueue[pid_t];
int[0,N] len = N;

void initialize()
{
  // Bubble-sort tasks into the queue.
  bool picked[pid_t];
  for(i : pid_t)
  {
    int max = -1, t = -1;
    for(j : pid_t)
    {
      if (!picked[j] &amp;&amp; P[j] &gt; max)
      {
        max = P[j];
        t = j;
      }
    }
    picked[t] = true;
    taskQueue[i] = t;
  }
}

pid_t head()   { return taskQueue[0]; }
bool isEmpty() { return len == 0; }

void add(pid_t id)
{
  pid_t i, tmp;
  taskQueue[len] = id;
  for(i = len ; i &gt; 0 &amp;&amp; P[taskQueue[i]] &gt; P[taskQueue[i-1]]; --i)
  {
    tmp = taskQueue[i];
    taskQueue[i] = taskQueue[i-1];
    taskQueue[i-1] = tmp;
  }
  len++;
}

void remove()
{
  int i;
  for(i = 0; i+1 &lt; N; ++i) { taskQueue[i] = taskQueue[i+1]; }
  taskQueue[--len] = 0;
}
</declaration>
	<template>
		<name>maincontroller</name>
		<declaration>
/**
 * Requirements
 * Voordat het template de states stoplicht en deur heeft bereikt is de richting van het schip bekend en tegengesteld aan de huidige positie.
 * In de idle stand is het mogeljk dat de clocktijd niet gelijk is aan nul, omdat het systeem alleen op 120 tijdseenheden en 
 * Een pomp is actief als er nul of 1 of 2 schepen in de sluis zitten.
 * De sluis heeft een trigger waarmee een actie kan worden gestart met een preconditie gerelateerd aan 1 van de volgende tenplates:schip,stoplicht,systeemtime,pomp,deur.
 *
 *
*/
clock systemtime;
int  thresholdUp = 0900;
int thresholdDown=1300;





bool waterlockStartPosition()
{

    return false;
}




// een schip kan zich anamelden bij de sluis(control system); een machine; deze voert bewerkingen uit op de omgeving met informatie van de beheerder
// de sluis bedient de waterpomp,sluisdeur,stoplicht,aanvoer en afvoer van schepen

/** stack
 * de lengte van de datastructuur
*/
const int time_step = 2;




/**
 *
*/
int[0,SIZE] head =0;

/** pop
 *
*/
kenteken pop_left()
{
    kenteken temp;
    //temp=stack[--head]; // neem de head voordat we de waarde uitlezen
    //stack[head]=0; // verwijder de waarde
    return temp;
    
}


kenteken pop_center()
{
    kenteken temp;
    //temp=stack[--head]; // neem de head voordat we de waarde uitlezen
    //stack[head]=0; // verwijder de waarde
    return temp;
    
}

kenteken pop_right()
{
    kenteken temp;
    //temp=stack[--head]; // neem de head voordat we de waarde uitlezen
    //stack[head]=0; // verwijder de waarde
    return temp;
    
}


/** push
 *
*/
void push(kenteken p)
{
    //stack[head++]=p;
}


/** isFull
 *
*/
bool isFull()
{
    return (head==SIZE);
}


/** isEmpty
 *
*/
bool isEmpty()
{
 return (head ==0);
}

void reset()
{}</declaration>
		<location id="id0" x="340" y="-374">
			<name x="255" y="-416">startCycle</name>
		</location>
		<location id="id1" x="952" y="-374">
			<name x="977" y="-459">WatermonitoringOn</name>
		</location>
		<location id="id2" x="204" y="-476">
			<name x="194" y="-510">idle</name>
		</location>
		<location id="id3" x="204" y="-374">
			<name x="194" y="-408">onstate</name>
		</location>
		<location id="id4" x="102" y="-374">
			<name x="92" y="-408">offstate</name>
		</location>
		<location id="id5" x="544" y="-230">
		</location>
		<location id="id6" x="646" y="-374">
			<name x="636" y="-408">changing</name>
		</location>
		<location id="id7" x="442" y="-374">
		</location>
		<location id="id8" x="544" y="-374">
			<name x="527" y="-196">DefaultLow</name>
		</location>
		<location id="id9" x="544" y="-510">
			<name x="534" y="-544">DefaultHigh</name>
		</location>
		<location id="id10" x="204" y="-578">
			<name x="194" y="-612">begin</name>
		</location>
		<location id="id11" x="714" y="-374">
			<name x="704" y="-408">openLock</name>
		</location>
		<location id="id12" x="850" y="-374">
			<name x="840" y="-408">free_all</name>
		</location>
		<location id="id13" x="782" y="-374">
			<name x="773" y="-408">closeLock</name>
		</location>
		<location id="id14" x="901" y="-374">
			<name x="891" y="-408">end_cycle</name>
		</location>
		<location id="id15" x="807" y="-187">
			<name x="797" y="-221">running</name>
		</location>
		<location id="id16" x="943" y="-255">
			<name x="933" y="-289">finished</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id16"/>
			<target ref="id13"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id15"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id1"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id14"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id7"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="guard" x="799" y="-510">initClosingProc==true</label>
			<label kind="assignment" x="773" y="-323">process_finished=true, process_started =false</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id13"/>
			<label kind="assignment" x="620" y="-331">process_started=true , lockOpen=true</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id11"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id2"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="guard" x="246" y="-399">position==0</label>
			<nail x="297" y="-374"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<nail x="161" y="-306"/>
			<nail x="204" y="-306"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<nail x="136" y="-306"/>
			<nail x="68" y="-306"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-170" y="-467">systemtime &lt;08&amp;&amp; systemtime &gt;21</label>
			<nail x="102" y="-476"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="204" y="-442">systemtime &gt;08&amp;&amp; systemtime &lt;21</label>
			<nail x="204" y="-442"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="358" y="-680">process_finished==true &amp;&amp; process_started==false&amp;&amp; systemtime&gt;=60</label>
			<label kind="assignment" x="358" y="-646">systemtime=0 &amp; kostprijs--</label>
			<nail x="952" y="-484"/>
			<nail x="952" y="-646"/>
			<nail x="340" y="-646"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id5"/>
			<label kind="guard" x="460" y="-336">countCycle%3!=0</label>
			<label kind="assignment" x="460" y="-323">direction=1</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id8"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id6"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id9"/>
			<label kind="guard" x="460" y="-476">countCycle%3==0</label>
			<label kind="assignment" x="460" y="-442">direction=0</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id15"/>
			<label kind="guard" x="723" y="-102">position==0 &amp;&amp; waterlevel&lt;10</label>
			<label kind="assignment" x="723" y="-68">waterlevel++</label>
			<nail x="773" y="-51"/>
			<nail x="705" y="-85"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id15"/>
			<label kind="guard" x="859" y="-102">position==1</label>
			<label kind="assignment" x="859" y="-68">waterlevel--</label>
			<nail x="841" y="-51"/>
			<nail x="909" y="-85"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="guard" x="995" y="-255">position==0 &amp;&amp; waterlevel==10</label>
			<nail x="960" y="-204"/>
			<nail x="875" y="-162"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="850" y="-332">(position==1 &amp;&amp; waterlevel==0) || (position==0 &amp;&amp; waterlevel==10)</label>
			<nail x="807" y="-204"/>
			<nail x="824" y="-238"/>
			<nail x="892" y="-272"/>
		</transition>
	</template>
	<template>
		<name>requestGenerator</name>
		<location id="id17" x="0" y="0">
		</location>
		<location id="id18" x="-170" y="204">
		</location>
		<location id="id19" x="170" y="204">
		</location>
		<init ref="id17"/>
		<transition>
			<source ref="id18"/>
			<target ref="id17"/>
			<nail x="-170" y="0"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id17"/>
			<nail x="170" y="0"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id19"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id18"/>
		</transition>
	</template>
	<template>
		<name>OpeningProc</name>
		<location id="id20" x="0" y="0">
		</location>
		<location id="id21" x="-170" y="0">
			<name x="-180" y="-34">OpeningHigh</name>
		</location>
		<location id="id22" x="238" y="0">
			<name x="119" y="-42">OpeningLow</name>
		</location>
		<location id="id23" x="-272" y="0">
		</location>
		<location id="id24" x="-272" y="102">
		</location>
		<location id="id25" x="374" y="0">
		</location>
		<location id="id26" x="374" y="102">
		</location>
		<location id="id27" x="-170" y="102">
		</location>
		<location id="id28" x="238" y="102">
		</location>
		<location id="id29" x="476" y="102">
		</location>
		<location id="id30" x="-374" y="102">
		</location>
		<location id="id31" x="0" y="-102">
		</location>
		<init ref="id31"/>
		<transition>
			<source ref="id27"/>
			<target ref="id27"/>
			<label kind="select" x="-152" y="119">shipid:kenteken</label>
			<label kind="synchronisation" x="-152" y="153">register[shipid]!</label>
			<nail x="-170" y="170"/>
			<nail x="-102" y="170"/>
			<nail x="-102" y="102"/>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id28"/>
			<label kind="select" x="170" y="187">shipid:kenteken</label>
			<label kind="synchronisation" x="161" y="221">register[shipid]!</label>
			<nail x="238" y="170"/>
			<nail x="170" y="170"/>
			<nail x="170" y="102"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id31"/>
			<label kind="synchronisation" x="18" y="-119">pomp_klik!</label>
			<label kind="assignment" x="18" y="-102">sluisToggle=true</label>
			<nail x="238" y="-102"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id31"/>
			<label kind="synchronisation" x="-152" y="-119">pomp_klik!</label>
			<label kind="assignment" x="-152" y="-102">sluisToggle=true</label>
			<nail x="-170" y="-102"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id20"/>
			<label kind="guard" x="0" y="-85">initOpenProc==true</label>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id26"/>
			<label kind="synchronisation" x="382" y="102">open_gate[direction]!</label>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="-347" y="102">open_gate[direction]!</label>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id30"/>
			<label kind="select" x="-347" y="17">stoplichtnummer: id_s</label>
			<label kind="guard" x="-347" y="34">systemtime &lt;0900</label>
			<label kind="synchronisation" x="-347" y="51">stoplichtklik[stoplichtnummer]!</label>
			<nail x="-374" y="0"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id29"/>
			<label kind="select" x="510" y="-17">stoplichtnummer: id_s</label>
			<label kind="guard" x="510" y="0">systemtime &lt;1300</label>
			<label kind="synchronisation" x="510" y="17">stoplichtklik[stoplichtnummer]!</label>
			<nail x="476" y="0"/>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id22"/>
			<label kind="select" x="102" y="0">deur_id:id_d</label>
			<label kind="synchronisation" x="85" y="34">deurklik[deur_id]!</label>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id28"/>
			<label kind="select" x="246" y="110">shipid: kenteken</label>
			<label kind="guard" x="238" y="127">position==1 &amp;&amp; systemtime&gt;0900</label>
			<label kind="synchronisation" x="246" y="144">schipklik[shipid]!</label>
			<nail x="348" y="102"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id21"/>
			<label kind="select" x="-136" y="42">deur_id:id_d</label>
			<label kind="synchronisation" x="-136" y="59">deurklik[deur_id]!</label>
			<nail x="-170" y="85"/>
			<nail x="-170" y="17"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id27"/>
			<label kind="select" x="-272" y="153">shipid: kenteken</label>
			<label kind="guard" x="-272" y="195">position==0 &amp;&amp; systemtime&gt;0900</label>
			<label kind="synchronisation" x="-272" y="229">schipklik[shipid]!</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id25"/>
			<label kind="select" x="256" y="-51">deur_id:id_d</label>
			<label kind="synchronisation" x="255" y="-34">deurklik[deur_id]!</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id23"/>
			<label kind="select" x="-254" y="-51">deur_id:id_d</label>
			<label kind="synchronisation" x="-254" y="-17">deurklik[deur_id]!</label>
			<nail x="-178" y="0"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id22"/>
			<label kind="select" x="25" y="17">deurnummer: id_d</label>
			<label kind="guard" x="8" y="17">systemtime &gt;1245&amp;&amp; systemtime &lt;2100</label>
			<nail x="17" y="0"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id21"/>
			<label kind="select" x="-127" y="-59">deurnummer: id_d</label>
			<label kind="guard" x="-152" y="-34">systemtime &gt;0845</label>
		</transition>
	</template>
	<template>
		<name>ClosingProc</name>
		<location id="id32" x="374" y="102">
		</location>
		<location id="id33" x="238" y="0">
			<name x="228" y="-34">ClosingLow</name>
		</location>
		<location id="id34" x="374" y="0">
		</location>
		<location id="id35" x="-272" y="102">
		</location>
		<location id="id36" x="-170" y="0">
			<name x="-180" y="-34">ClosingHigh</name>
		</location>
		<location id="id37" x="-272" y="0">
		</location>
		<location id="id38" x="0" y="0">
		</location>
		<location id="id39" x="-170" y="102">
		</location>
		<location id="id40" x="238" y="102">
		</location>
		<location id="id41" x="-340" y="102">
		</location>
		<location id="id42" x="476" y="102">
		</location>
		<location id="id43" x="0" y="-102">
		</location>
		<init ref="id43"/>
		<transition>
			<source ref="id39"/>
			<target ref="id39"/>
			<label kind="select" x="-152" y="119">shipid:kenteken</label>
			<label kind="synchronisation" x="-152" y="153">unregister[shipid]!</label>
			<nail x="-170" y="170"/>
			<nail x="-102" y="170"/>
			<nail x="-102" y="102"/>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id40"/>
			<label kind="select" x="188" y="119">shipid:kenteken</label>
			<label kind="synchronisation" x="188" y="153">unregister[shipid]!</label>
			<nail x="238" y="170"/>
			<nail x="170" y="170"/>
			<nail x="170" y="102"/>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id43"/>
			<nail x="238" y="-102"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id43"/>
			<nail x="-170" y="-102"/>
		</transition>
		<transition>
			<source ref="id43"/>
			<target ref="id38"/>
			<label kind="guard" x="0" y="-85">initClosingProc==true</label>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="392" y="114">close_gate[direction]!</label>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id42"/>
			<label kind="select" x="552" y="8">stoplichtnummer: id_s</label>
			<label kind="synchronisation" x="544" y="42">stoplichtklik[stoplichtnummer]!</label>
			<nail x="476" y="0"/>
		</transition>
		<transition>
			<source ref="id41"/>
			<target ref="id35"/>
			<label kind="synchronisation" x="-322" y="106">close_gate[direction]!</label>
		</transition>
		<transition>
			<source ref="id37"/>
			<target ref="id41"/>
			<label kind="select" x="-322" y="21">stoplichtnummer: id_s</label>
			<label kind="synchronisation" x="-322" y="55">stoplichtklik[stoplichtnummer]!</label>
			<nail x="-340" y="0"/>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id33"/>
			<label kind="select" x="238" y="0">deurnummer: id_d</label>
			<label kind="synchronisation" x="238" y="34">deurklik[deurnummer]!</label>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id40"/>
			<label kind="synchronisation" x="256" y="85">pomp_klik!</label>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id36"/>
			<label kind="select" x="-170" y="0">deurnummer: id_d</label>
			<label kind="synchronisation" x="-170" y="34">deurklik[deurnummer]!</label>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id39"/>
			<label kind="synchronisation" x="-254" y="85">pomp_klik!</label>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id37"/>
			<label kind="select" x="-272" y="-93">deurnummer: id_d</label>
			<label kind="synchronisation" x="-272" y="-68">deurklik[deurnummer]!</label>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id34"/>
			<label kind="select" x="256" y="-51">deurnummer: id_d</label>
			<label kind="synchronisation" x="256" y="-17">deurklik[deurnummer]!</label>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id33"/>
			<label kind="assignment" x="35" y="0">position=!position,sluisToggle=false</label>
			<nail x="17" y="0"/>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id36"/>
			<label kind="assignment" x="-152" y="0">position=!position,sluisToggle=false</label>
		</transition>
	</template>
	<template>
		<name>waterlevelSensorLow</name>
		<location id="id44" x="0" y="0">
		</location>
		<location id="id45" x="272" y="0">
			<name x="262" y="-34">lowlevelFloat</name>
		</location>
		<location id="id46" x="136" y="0">
		</location>
		<location id="id47" x="204" y="-102">
			<name x="194" y="-136">error</name>
		</location>
		<init ref="id44"/>
		<transition>
			<source ref="id47"/>
			<target ref="id45"/>
			<nail x="272" y="-102"/>
		</transition>
		<transition>
			<source ref="id46"/>
			<target ref="id47"/>
			<label kind="guard" x="59" y="-161">waterniveau&lt;-1 || waterlevel&lt;-1</label>
			<nail x="136" y="-102"/>
		</transition>
		<transition>
			<source ref="id44"/>
			<target ref="id46"/>
			<label kind="guard" x="18" y="-34">sluisToggle==true</label>
		</transition>
		<transition>
			<source ref="id45"/>
			<target ref="id44"/>
			<label kind="synchronisation" x="18" y="85">stop!</label>
			<nail x="272" y="102"/>
			<nail x="0" y="102"/>
		</transition>
	</template>
	<template>
		<name>waterlevelSensorHigh</name>
		<location id="id48" x="0" y="0">
		</location>
		<location id="id49" x="272" y="0">
			<name x="262" y="-34">highlevelFloat</name>
		</location>
		<location id="id50" x="136" y="0">
		</location>
		<location id="id51" x="204" y="-102">
			<name x="194" y="-136">error</name>
		</location>
		<init ref="id48"/>
		<transition>
			<source ref="id51"/>
			<target ref="id49"/>
			<nail x="272" y="-102"/>
		</transition>
		<transition>
			<source ref="id50"/>
			<target ref="id51"/>
			<label kind="guard" x="154" y="-136">waterniveau&gt; 6 ||waterlevel &gt;10</label>
			<nail x="136" y="-102"/>
		</transition>
		<transition>
			<source ref="id48"/>
			<target ref="id50"/>
			<label kind="guard" x="18" y="-34">sluisToggle==true</label>
		</transition>
		<transition>
			<source ref="id49"/>
			<target ref="id48"/>
			<label kind="synchronisation" x="18" y="85">stop!</label>
			<nail x="272" y="102"/>
			<nail x="0" y="102"/>
		</transition>
	</template>
	<template>
		<name>Error</name>
		<location id="id52" x="0" y="0">
			<name x="-10" y="-34">idle</name>
		</location>
		<location id="id53" x="136" y="0">
			<name x="126" y="-34">check</name>
		</location>
		<location id="id54" x="272" y="0">
			<name x="262" y="-34">fixed</name>
		</location>
		<location id="id55" x="272" y="-102">
			<name x="262" y="-136">ready</name>
		</location>
		<init ref="id52"/>
		<transition>
			<source ref="id55"/>
			<target ref="id52"/>
			<nail x="0" y="-102"/>
		</transition>
		<transition>
			<source ref="id54"/>
			<target ref="id55"/>
		</transition>
		<transition>
			<source ref="id53"/>
			<target ref="id52"/>
			<nail x="136" y="102"/>
			<nail x="0" y="102"/>
		</transition>
		<transition>
			<source ref="id53"/>
			<target ref="id54"/>
		</transition>
		<transition>
			<source ref="id52"/>
			<target ref="id53"/>
		</transition>
	</template>
	<template>
		<name>deur</name>
		<parameter>id_d d</parameter>
		<declaration>
/**
 * Requirements
 * Een deur is tijdens een actieve pomp altijd gesloten
 * Een deur kan nooit open staan terwijl het stoplicht voor invaren/uitvaren op rood staat.
 * Een deur wordt altijd getriggerd vanuit de maincontroller en kan dus oneindig wachten totdat de maincontroller een opdracht geeft.
 * Een deur kan nooit in een oneindige tussenstand staan zoals: is bezig met openen of is bezig met sluiten.
 *
 *
*/
// parameter: const gatenr gatenummer
clock x;
int[0,1] currentstate;</declaration>
		<location id="id56" x="0" y="0">
			<name x="-17" y="8">closed</name>
		</location>
		<location id="id57" x="306" y="0">
			<name x="280" y="8">closing</name>
		</location>
		<location id="id58" x="306" y="-204">
			<name x="296" y="-238">open</name>
		</location>
		<location id="id59" x="0" y="-204">
			<name x="-10" y="-238">opening</name>
		</location>
		<init ref="id56"/>
		<transition>
			<source ref="id57"/>
			<target ref="id56"/>
			<label kind="assignment" x="18" y="0">deur_is_open[entrance_schip] := false</label>
			<nail x="289" y="0"/>
			<nail x="280" y="0"/>
		</transition>
		<transition>
			<source ref="id58"/>
			<target ref="id57"/>
			<label kind="synchronisation" x="306" y="-119">deurklik[d]?</label>
		</transition>
		<transition>
			<source ref="id59"/>
			<target ref="id58"/>
			<label kind="guard" x="60" y="-238">currentstate==entrance_schip</label>
			<label kind="assignment" x="60" y="-204">deur_is_open[entrance_schip] := true, x:=0</label>
			<nail x="42" y="-204"/>
		</transition>
		<transition>
			<source ref="id56"/>
			<target ref="id59"/>
			<label kind="synchronisation" x="0" y="-136">deurklik[d]?</label>
			<nail x="0" y="-34"/>
		</transition>
	</template>
	<template>
		<name>schip</name>
		<parameter>kenteken id</parameter>
		<declaration>

/**
 * Requirements
 * Een schip kan maar 1 id/kenteken hebben en dit kenteken komt maar 1 keer in  de cyclus voor, inclusief de beide wachtrijen en de queue van de sluiskolk.
 * Een schip kan in de sluiskolk niet van richting veranderen
 * Een schip kan na het doorlopen van de cycli en uitgevaren zijn van de sluis een willekeurige andere positie en richting hebben aangenomen.
 *
 *
 *
*/
// const kenteken schipid
int positie =0;
bool myDirection = false;
clock x;

</declaration>
		<location id="id60" x="0" y="-102">
			<name x="-10" y="-136">ildle</name>
		</location>
		<location id="id61" x="0" y="51">
			<name x="-10" y="17">varen</name>
		</location>
		<init ref="id60"/>
		<transition>
			<source ref="id61"/>
			<target ref="id60"/>
			<nail x="8" y="51"/>
			<nail x="170" y="51"/>
			<nail x="170" y="-102"/>
		</transition>
		<transition>
			<source ref="id60"/>
			<target ref="id61"/>
			<label kind="select" x="0" y="-76">shipid: kenteken</label>
			<label kind="synchronisation" x="0" y="-42">schipklik[shipid]?</label>
			<label kind="comments" x="-187" y="-76">sync:
send[kenteken]


update:
positie: int[0,1]</label>
		</transition>
	</template>
	<template>
		<name>pomp</name>
		<location id="id62" x="-714" y="34">
			<name x="-724" y="0">pomp_uit</name>
			<label kind="comments" x="-1334" y="127">ipv aan en uit states kan er ook gekozen worden voor de states laag en hoog</label>
		</location>
		<location id="id63" x="-612" y="170">
			<name x="-622" y="136">idle</name>
		</location>
		<location id="id64" x="-553" y="255">
			<name x="-563" y="221">ready</name>
		</location>
		<init ref="id62"/>
		<transition>
			<source ref="id64"/>
			<target ref="id63"/>
			<label kind="guard" x="-602" y="204">sluisToggle==false</label>
			<nail x="-620" y="221"/>
		</transition>
		<transition>
			<source ref="id63"/>
			<target ref="id64"/>
			<label kind="guard" x="-582" y="178">sluisToggle==true</label>
		</transition>
		<transition>
			<source ref="id63"/>
			<target ref="id62"/>
			<label kind="synchronisation" x="-696" y="153">pomp_klik?</label>
			<nail x="-714" y="170"/>
		</transition>
		<transition>
			<source ref="id62"/>
			<target ref="id63"/>
			<label kind="synchronisation" x="-662" y="17">pomp_klik?</label>
			<nail x="-680" y="34"/>
			<nail x="-612" y="34"/>
		</transition>
	</template>
	<template>
		<name>sluis</name>
		<parameter>id_q q</parameter>
		<declaration>
/**
 * Requirements
 * Een wachtrij kan maximaal 2 schepen bevatten.
 * Een aanvarend schip kan maximaal 1 cyclus in de wachtrij staan.
 *
 *
 *
 *
*/

/**
 * Requirements
 * Er kunnen maximaal 2 schepen in de sluis.
 * De kentekens van schepen in de sluis is nooit gelijk aan een kenteken van een schip in een wachtrij.
 *
 *
 *
 *
*/

clock x;
kenteken list[N+1];
int[0,N] len;



// parameter: const stack  q

bool is_full()
{
    return false;
}


void dequeues()
{
    int i = 0;
        len -= 1;
        while (i &lt; len)
        {
                list[i] = list[i + 1];
                i++;
        }
        list[i] = 0;
}


void enqueue(kenteken element)
{
     list[len++] = element;
}
void dequeue(kenteken element)
{
     list[element] = 0;
}
bool is_empty()
{
    return false;
}

bool go_out()
{
    return false;
}


bool lock_empty()
{
    return false;
}

/*
// Returns the front element of the queue
id_t frontElement()
{
     return list[len - 1];
}

// Returns the last element of the queue
id_t tail()
{
   return list[len - 1];
}
*/

chan lock_full;

chan to_lock;
//chan go_out;</declaration>
		<location id="id65" x="0" y="0">
			<name x="-10" y="-34">idle</name>
		</location>
		<location id="id66" x="119" y="0">
			<name x="109" y="-34">add</name>
		</location>
		<location id="id67" x="238" y="0">
			<name x="228" y="-34">release</name>
		</location>
		<init ref="id65"/>
		<transition>
			<source ref="id67"/>
			<target ref="id67"/>
			<label kind="guard" x="273" y="-84">x&lt;2</label>
			<nail x="272" y="-25"/>
			<nail x="340" y="-68"/>
			<nail x="340" y="68"/>
		</transition>
		<transition>
			<source ref="id67"/>
			<target ref="id65"/>
			<nail x="238" y="25"/>
			<nail x="238" y="102"/>
			<nail x="0" y="102"/>
		</transition>
		<transition>
			<source ref="id66"/>
			<target ref="id67"/>
			<label kind="select" x="154" y="-51">shipid: kenteken</label>
			<label kind="synchronisation" x="154" y="-17">unregister[shipid]?</label>
			<label kind="assignment" x="154" y="0">dequeue(shipid)</label>
			<nail x="136" y="0"/>
		</transition>
		<transition>
			<source ref="id65"/>
			<target ref="id66"/>
			<label kind="select" x="52" y="-51">shipid: kenteken</label>
			<label kind="synchronisation" x="52" y="-17">register[shipid]?</label>
			<label kind="assignment" x="52" y="0">enqueue(shipid)</label>
			<nail x="34" y="0"/>
		</transition>
	</template>
	<template>
		<name>stoplight</name>
		<parameter>id_s s</parameter>
		<declaration>
/**
 * Requirements
 * Een stoplicht is tijdens een actieve pomp altijd op rood.
 * Een invaar- en uitvaarstoplicht kunnen niet beiden op groen staan, omdat er dan een botsing kan voorkomen.
 * Een invaar- en uitvaarstoplicht kunnen beiden op rood staan.
 *
 *
 *
*/

// stoplicht 0
// stoplicht 1
// stoplicht 2
// stoplicht 3
clock timer;</declaration>
		<location id="id68" x="0" y="0">
			<name x="-10" y="-34">rood</name>
		</location>
		<location id="id69" x="272" y="0">
			<name x="262" y="-34">groen</name>
		</location>
		<init ref="id68"/>
		<transition>
			<source ref="id68"/>
			<target ref="id69"/>
			<label kind="synchronisation" x="93" y="-42">stoplichtklik[s]?</label>
			<nail x="34" y="0"/>
			<nail x="170" y="0"/>
		</transition>
		<transition>
			<source ref="id69"/>
			<target ref="id68"/>
			<label kind="guard" x="18" y="102">timer&gt;10</label>
			<nail x="272" y="136"/>
			<nail x="0" y="136"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
//Process = Template();
// List one or more processes to be composed into a system.
system maincontroller,deur,pomp,sluis,schip,stoplight;
//system newmain,newmainOpeningProc,request,priorityQueue,priorityQueue,newmainClosingProc,sensorLow,sensorHigh,waterlevelSensorLow,waterlevelSensorHigh,newpomp,newdeur,sluis;</system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] Queue.list[N-1]==0</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
