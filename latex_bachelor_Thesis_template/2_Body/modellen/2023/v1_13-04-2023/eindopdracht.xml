<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
// examples v1_12_06_2022 
// examples v1_13_06_2022 

// List one or more processes to be composed into a system.
//system schip,aanvoer,afvoer;
 
//system pomp,pompbediening;   
// for more uppaal documentation https://docs.uppaal.org/language-reference/expressions/

/** Requirementsoverzicht
 * Een sluis heeft deuren voor openenen en sluiten.
 * Een sluis heeft stoplichten met rood en groen waarmee toestemming al dann wel neit wordt gegeven voor schepen voor invaren of uitvaren.
 * Een schip heeft een positie en een doel
 * Een schip kan zich aanmelden
 * De pompbediening handelt de aanvraag van invarende, wachtende en uitvarende schepen af
 * Een schip kan in een wachtrij staan voodat hij een sluis invaart beneden.
 * Een schip kan in een wachtrij staan voodat hij een sluis invaart boven.
 * Een schip kan in een wachtrij staan voordat deze een sluis verlaat.
 * Als een sluis vol is komt een schip automatisch in een wachtrij.
 * Een sluis heeft een pomp(nivelleeersystseem) voor  hoog, midden, laag.
 * Een sluis houdt bij hoeveel schepen invaren.
 * Een sluis houdt bij wat de waterstand is.
 *
 * 
*/



const int  N_max_schepen=2; //schepen in sluis (max 2)
const int wachtende schepen aan weerszijde (max 2)
const int aanvarende_schepen (max 2)
const int uitvarende_schepen (max 2)
const int depth_schip, depth_schip,length_schip;
const int depth_schip2, width_schip2 en length_schip2;
const int diepte_sluis=10;
const int breedte=5;
const int lengte=50;
const int neerslag= 0.01; // per 10 tijdseenheden
 int waterpeil_sluis,waterpeil_links,waterpeil_rechts;
const int werktijd_pomp=30;
typedef int[0,1] id_p
id_p stack_linkerzijde[SIZE];
id_p stack_rechterzijde[SIZE];
id_p stack_sluis[SIZE];
typedef int[0,10] meter;
meter level;


void links_deurenopen(){}
void rechts_deurenopen(){}

void links_deursluiten(){}
void rechts_deursluiten(){}

void links_stoplicht(){}
void rechts_stoplicht(){}

void pomp_starten(){}
// nivelleren
void pomp_waterbij(){}
void pomp_waterwegpompen(){}
void pomp_uitschakelen(){}


// op basis van informatie gebaseerd op bovenstaande var 
//wordt een beslissing genomen

bool ai_algorithm(id_p p)
{
    // wat is de iniial  state
    // 1) check of stoplicht op rood, 
    // motivatie:  alle invaren schepen worden gestopt
    // vervolgens kun je kijken of er schepen in de sluis zitten
    // en de mogelijkheid is er om de sluisdeuren te openen/sluiten

    // check locatie locatie
    // motivatie aan de hand van de locatie van de sluis kijken of er in een online dataset informatie beschikbaar komt van aanvarende schepen
    
    // welk schip krijgt voorrang? uitvarend of invarend?
    // a) voorbereiden op invarende schepen als !N_max_schepen en aanvarende_schepen=TRUE

    // b) voorbereiden op uitvarende schepen als sluis gelijk is aan  N_max_schepen
    
    
    // neerslag  en waterpeil in de sluis moet gelijk worden gemaakt     
    // Motivatie: waterpeil in de sluis moet gelijk zijn aan waterpijl 
    // invarende schepen in case a
    // waterpeil in de sluis moet gelijk zijn aan waterpijl 
    // uitvarende schepen in case b

    // stoplicht invaren op rood
    // stoplicht uitvaren op rood

    // sluisdeuren sluiten
    // check of sluisdereun dicht zijn

    // nivelleren
    // check of waterlevel gelijk is aan uitvarende zijde

    // sluisdeuren openen
    // stoplicht uitvaren op groen
    // stoplicht invaren op rood    
    // check of schip in sluis
    // geef toestemming uitvaren voor schip in sluis

    //check uitvaartijd
    // check schip in sluis
    // als sluis leeg is
    // a) uitvaarstoplicht op rood
    // invaarstoplicht op groen
    // geef signaal aan wachtende schepen
    // als twee siganel zijn binnengekomen van wachtende schepen aan deze kant
    // dan nog wachten totdat de sensor in de sluis beiden schepen heeft opgemerkt
    
    // als wachtende schepen zijn ingevaren
    // stoplicht voor invaren op rood
    // stoplicht voor uitvaren op rood
    // sluisdeur dicht

    
    
    

    

    // wat is de end-state
}


//initial state
// stoplicht op rood , sluisdeuren dicht om waterstrming te voorkomen en pomp is uit omdat er een signaal moetn worden gegeven voor actie


//end of final state is de state waar de sluis zich in bevind wanneeer er niets meer mag passeren door de sluis
// Vanwege: maintainance, einde van de invaarperiode
// stoplicht op rood , sluisdeuren dicht om waterstrming te voorkomen en pomp is uit omdat er een signaal moetn worden gegeven voor actie

s0 initial state 
update_all
s1 check all
s2 check if ready
s3 start cycle

chan press_stoplicht, aan, uit,press;
chan door_open, door_closed;
bool deur1, deur2, deur3, deur4;
bool entrance_schip1, leave_schip1, entrace_schip2, leave_schip2;


chan adjust_water_level, RestartCycle;
chan Activate1, Activate2, Activate3, Start,Stop;

int c, f,t;




/** product id
 *
*/
typedef int[0,1] id_p;

/**
 *
*/
chan in,out;


/**
 *
*/
id_p pass;


/**
 * postitie van schip beneden (0) of boven(1)
*/
typedef int[0,1] m_pos;

/**
 *
*/
m_pos positie;

/**
 * knop voor de pomp 
*/ 
chan klik,pklik2,pklik3;

/**
 * knop voor de schip 
*/ 
chan schipklik;


/**
 * knop voor de stoplicht 
*/ 
chan stoplichtklik;

/**
 * knop voor de deur 
*/ 
chan deurklik;


/**
 * uitgaan van aanvoer, afvoer, sluis
 * max aantal sluiskolken
*/ 
const int MAX=1;

/**
 * declaratie voor een sluiskolk
*/
typedef int[0,MAX-1] id_l;

/**
 * waterniveau in meter
*/ 
typedef int[0,10] meter;

/**
 *
*/
meter waterlevel;

</declaration>
	<template>
		<name>Template0</name>
		<declaration>


clock x,y;</declaration>
		<location id="id0" x="0" y="0">
			<name x="-10" y="-34">rood</name>
		</location>
		<location id="id1" x="102" y="0">
			<name x="92" y="-34">oranje</name>
		</location>
		<location id="id2" x="212" y="0">
			<name x="202" y="-34">groen</name>
		</location>
		<location id="id3" x="433" y="0">
			<name x="423" y="-34">check_orange</name>
		</location>
		<location id="id4" x="552" y="8">
			<name x="542" y="-26">loop_oranje</name>
		</location>
		<location id="id5" x="892" y="0">
			<name x="882" y="-34">loop_groen</name>
		</location>
		<location id="id6" x="773" y="0">
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="468" y="135">y==21.00</label>
			<nail x="578" y="85"/>
			<nail x="595" y="178"/>
			<nail x="450" y="161"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="791" y="-17">turn_green?</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="guard" x="1020" y="-17">x&lt;5, x&lt;10</label>
			<label kind="synchronisation" x="910" y="-51">finalize!</label>
			<nail x="978" y="-68"/>
			<nail x="969" y="59"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="582" y="-51">x&lt;2,x&lt;5, y&lt;21.00</label>
			<label kind="synchronisation" x="637" y="34">turn_green!</label>
			<nail x="612" y="-42"/>
			<nail x="612" y="85"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="442" y="-68">handle_orange?</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="18" y="76">finalize?</label>
			<label kind="assignment" x="18" y="93">y=y+1</label>
			<nail x="212" y="93"/>
			<nail x="0" y="93"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="8" y="-51">handle_orange!</label>
			<label kind="assignment" x="18" y="0">x=0,y=9</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">sluis</name>
		<declaration>// een schip kan zich anamelden bij de sluis(control system); een machine; deze voert bewerkingen uit op de omgeving met informatie van de beheerder
// de sluis bedient de waterpomp,sluisdeur,stoplicht,aanvoer en afvoer van schepen

/** stack
 * de lengte van de datastructuur
*/
 
const int SIZE=5;

/** stack
 *
*/
id_p stack[SIZE];


/**
 *
*/
int[0,SIZE] head =0;

/** pop
 *
*/
id_p pop()
{
    id_p temp;
    temp=stack[--head]; // neem de head voordat we de waarde uitlezen
    stack[head]=0; // verwijder de waarde
    return temp;
    
}


/** push
 *
*/
void push(id_p p)
{
    stack[head++]=p;
}


/** isFull
 *
*/
bool isFull()
{
    return (head==SIZE);
}


/** isEmpty
 *
*/
bool isEmpty()
{
 return (head ==0);
}</declaration>
		<location id="id7" x="-136" y="0">
			<name x="-146" y="-34">idle</name>
		</location>
		<location id="id8" x="136" y="0">
			<name x="126" y="-34">sluisdeur_open</name>
		</location>
		<location id="id9" x="272" y="0">
			<name x="262" y="-34">stoplicht_groen</name>
		</location>
		<location id="id10" x="272" y="-170">
			<name x="262" y="-204">signal_uitvaren</name>
		</location>
		<location id="id11" x="136" y="-170">
			<name x="126" y="-204">uitvaren_klaar</name>
		</location>
		<location id="id12" x="0" y="-170">
			<name x="-10" y="-204">signal_invaren</name>
		</location>
		<location id="id13" x="-136" y="-170">
			<name x="-146" y="-204">invaren_klaar</name>
		</location>
		<location id="id14" x="-34" y="0">
			<name x="-76" y="-59">waterlevel_neg</name>
		</location>
		<location id="id15" x="34" y="0">
			<name x="24" y="-34">water_pos</name>
		</location>
		<location id="id16" x="-238" y="-170">
			<name x="-314" y="-238">check_aantal_schepen_in_sluis</name>
		</location>
		<location id="id17" x="-374" y="-170">
			<name x="-384" y="-204">stoplicht_rood</name>
		</location>
		<location id="id18" x="-510" y="-170">
			<name x="-520" y="-204">sluisdeur_dicht</name>
		</location>
		<location id="id19" x="-510" y="0">
			<name x="-520" y="-34">waterlevel_handling</name>
		</location>
		<location id="id20" x="-824" y="-425">
			<name x="-834" y="-459">closed</name>
		</location>
		<location id="id21" x="-654" y="-416">
			<name x="-664" y="-450">open</name>
			<label kind="invariant" x="-664" y="-399">communicate_with_Hardware()</label>
		</location>
		<location id="id22" x="-756" y="-306">
			<name x="-766" y="-340">opening</name>
		</location>
		<location id="id23" x="-739" y="-476">
			<name x="-749" y="-510">closing</name>
		</location>
		<location id="id24" x="-952" y="-425">
			<name x="-969" y="-467">active</name>
			<label kind="invariant" x="-962" y="-408">startcyclus()</label>
		</location>
		<location id="id25" x="-1122" y="-425">
			<name x="-1139" y="-467">initial</name>
			<label kind="invariant" x="-1132" y="-408">update_all()</label>
		</location>
		<location id="id26" x="-1156" y="-195">
			<name x="-1166" y="-229">rood</name>
		</location>
		<location id="id27" x="-1045" y="-195">
			<name x="-1055" y="-229">oranje</name>
		</location>
		<location id="id28" x="-892" y="-187">
			<name x="-902" y="-221">groen</name>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id28"/>
			<target ref="id26"/>
			<nail x="-892" y="-204"/>
			<nail x="-884" y="-272"/>
			<nail x="-1147" y="-280"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id28"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id27"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id24"/>
			<nail x="-1096" y="-433"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id20"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id20"/>
			<nail x="-816" y="-433"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id23"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id21"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id22"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id18"/>
			<nail x="-399" y="-170"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id16"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id7"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id19"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<nail x="-17" y="-170"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id11"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id8"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id14"/>
		</transition>
	</template>
	<template>
		<name>controller</name>
		<location id="id29" x="0" y="0">
			<name x="-10" y="-34">idle</name>
		</location>
		<location id="id30" x="-136" y="136">
			<name x="-146" y="102">linkerkant</name>
		</location>
		<location id="id31" x="0" y="136">
			<name x="-10" y="102">check_andere_kant</name>
		</location>
		<location id="id32" x="136" y="136">
			<name x="126" y="102">rechterkant</name>
		</location>
		<location id="id33" x="272" y="442">
			<name x="262" y="408">open_sluisdeur</name>
		</location>
		<location id="id34" x="0" y="442">
			<name x="-10" y="408">stop_waterhandling</name>
		</location>
		<location id="id35" x="0" y="365">
			<name x="-8" y="331">waterlevel_handling</name>
		</location>
		<location id="id36" x="0" y="204">
		</location>
		<location id="id37" x="476" y="238">
			<name x="467" y="187">signal_schepen_sluis</name>
		</location>
		<location id="id38" x="476" y="442">
			<name x="466" y="408">binnenstoplicht</name>
		</location>
		<location id="id39" x="476" y="0">
			<name x="466" y="-34">stoplicht_rood</name>
		</location>
		<init ref="id29"/>
		<transition>
			<source ref="id39"/>
			<target ref="id29"/>
			<nail x="459" y="0"/>
		</transition>
		<transition>
			<source ref="id37"/>
			<target ref="id39"/>
			<label kind="synchronisation" x="476" y="102">schipklik!</label>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id37"/>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id38"/>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id33"/>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id34"/>
			<label kind="synchronisation" x="0" y="403">klik!</label>
			<nail x="0" y="399"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id35"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id36"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id31"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id31"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id32"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id30"/>
		</transition>
	</template>
	<template>
		<name>sluisdeur</name>
		<declaration>// bool &amp;activated, urgent chan &amp;pushed, urgent chan &amp;closed1, urgent chan &amp;closed2


/**
 *
*/
clock d;</declaration>
		<location id="id40" x="0" y="0">
			<name x="-10" y="-34">dicht</name>
		</location>
		<location id="id41" x="170" y="0">
			<name x="160" y="-34">openen</name>
		</location>
		<location id="id42" x="170" y="-136">
			<name x="160" y="-170">open</name>
		</location>
		<location id="id43" x="0" y="-136">
			<name x="-10" y="-170">gesloten</name>
		</location>
		<init ref="id40"/>
		<transition>
			<source ref="id43"/>
			<target ref="id40"/>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id43"/>
			<label kind="synchronisation" x="18" y="-153">door_closed!</label>
			<nail x="119" y="-136"/>
		</transition>
		<transition>
			<source ref="id41"/>
			<target ref="id42"/>
			<nail x="170" y="-25"/>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id41"/>
			<label kind="synchronisation" x="35" y="-17">door_open!</label>
			<nail x="17" y="0"/>
		</transition>
	</template>
	<template>
		<name>schip</name>
		<parameter>const id_p schipid, const schip_positie</parameter>
		<declaration>

clock x;</declaration>
		<location id="id44" x="0" y="0">
			<name x="-10" y="-34">uit</name>
		</location>
		<location id="id45" x="170" y="0">
			<name x="160" y="-34">opstarten</name>
		</location>
		<location id="id46" x="306" y="0">
			<name x="296" y="-34">aan</name>
		</location>
		<location id="id47" x="408" y="0">
		</location>
		<location id="id48" x="408" y="-170">
			<name x="398" y="-204">pauzeren</name>
		</location>
		<location id="id49" x="408" y="170">
			<name x="398" y="136">varen</name>
		</location>
		<init ref="id44"/>
		<transition>
			<source ref="id49"/>
			<target ref="id44"/>
			<nail x="0" y="170"/>
		</transition>
		<transition>
			<source ref="id48"/>
			<target ref="id44"/>
			<label kind="guard" x="18" y="-204">x&gt;=30</label>
			<nail x="0" y="-170"/>
		</transition>
		<transition>
			<source ref="id49"/>
			<target ref="id48"/>
			<nail x="578" y="136"/>
			<nail x="578" y="-136"/>
		</transition>
		<transition>
			<source ref="id48"/>
			<target ref="id49"/>
			<nail x="510" y="-34"/>
			<nail x="510" y="102"/>
		</transition>
		<transition>
			<source ref="id49"/>
			<target ref="id49"/>
			<label kind="synchronisation" x="426" y="187">schipklik?</label>
			<nail x="476" y="238"/>
			<nail x="340" y="229"/>
		</transition>
		<transition>
			<source ref="id47"/>
			<target ref="id49"/>
		</transition>
		<transition>
			<source ref="id47"/>
			<target ref="id48"/>
			<nail x="408" y="-34"/>
		</transition>
		<transition>
			<source ref="id46"/>
			<target ref="id47"/>
			<label kind="select" x="324" y="-51">locatie : m_pos</label>
			<label kind="assignment" x="324" y="0">positie:=locatie</label>
			<label kind="comments" x="324" y="25">x : int[0,1] -&gt; start hoog of laag</label>
		</transition>
		<transition>
			<source ref="id45"/>
			<target ref="id46"/>
		</transition>
		<transition>
			<source ref="id44"/>
			<target ref="id45"/>
			<label kind="select" x="18" y="-51">locatie : m_pos</label>
			<label kind="assignment" x="18" y="0">positie:=locatie</label>
		</transition>
	</template>
	<template>
		<name>afvoer</name>
		<declaration>clock x;


// een product dat de machine weggeeft wordt hier in de variabele zodat ik kan controlere dat wat de machine uitgaat ook correct wordt afgegeven
id_p received;

</declaration>
		<location id="id50" x="0" y="0">
		</location>
		<location id="id51" x="102" y="-76">
			<committed/>
		</location>
		<location id="id52" x="-688" y="-306">
			<name x="-698" y="-340">wachtplek1</name>
		</location>
		<location id="id53" x="-688" y="-255">
		</location>
		<location id="id54" x="-442" y="-323">
		</location>
		<location id="id55" x="-450" y="-238">
		</location>
		<location id="id56" x="-144" y="-314">
		</location>
		<location id="id57" x="-136" y="-263">
		</location>
		<location id="id58" x="93" y="-331">
		</location>
		<location id="id59" x="102" y="-280">
		</location>
		<location id="id60" x="110" y="-340">
		</location>
		<location id="id61" x="-807" y="-314">
		</location>
		<location id="id62" x="-799" y="-272">
		</location>
		<init ref="id50"/>
		<transition>
			<source ref="id62"/>
			<target ref="id53"/>
		</transition>
		<transition>
			<source ref="id61"/>
			<target ref="id52"/>
		</transition>
		<transition>
			<source ref="id59"/>
			<target ref="id57"/>
		</transition>
		<transition>
			<source ref="id60"/>
			<target ref="id56"/>
		</transition>
		<transition>
			<source ref="id58"/>
			<target ref="id56"/>
		</transition>
		<transition>
			<source ref="id51"/>
			<target ref="id50"/>
			<label kind="assignment" x="18" y="-72">received:=pass</label>
			<nail x="93" y="-76"/>
			<nail x="0" y="-68"/>
		</transition>
		<transition>
			<source ref="id50"/>
			<target ref="id51"/>
			<label kind="guard" x="35" y="-38">x&gt;=1</label>
			<label kind="synchronisation" x="35" y="-21">out!</label>
			<label kind="assignment" x="35" y="-4">x:=0</label>
			<nail x="17" y="-8"/>
			<nail x="102" y="0"/>
		</transition>
	</template>
	<template>
		<name>aanvoer</name>
		<declaration>// Place local declarations here.

clock x;</declaration>
		<location id="id63" x="0" y="0">
		</location>
		<init ref="id63"/>
		<transition>
			<source ref="id63"/>
			<target ref="id63"/>
			<label kind="select" x="18" y="-13">p:id_p,positie:schip_positie</label>
			<label kind="guard" x="18" y="4">x&gt;=1</label>
			<label kind="synchronisation" x="18" y="21">in!</label>
			<label kind="assignment" x="18" y="38">x:=0,pass:=p,pos:=positie</label>
			<nail x="93" y="76"/>
			<nail x="102" y="-102"/>
		</transition>
	</template>
	<template>
		<name>pomp</name>
		<parameter>id_l pompnr</parameter>
		<declaration>/**
 * de pomp moet aan de hand van een input paranter weten of hij eerst vullen of wegpompen
*/

/**
 *
*/
void functie()
{
	
}

meter level;

/**
 *
*/
// wacht 5 tijdseenheden
clock x;
/**
 *
*/
// een constraint op een bepaalde variabele
bool isForMe()
{
	if(pompnr &lt; 2 &amp;&amp; waterlevel&lt;6) return true;
	else if(pompnr&gt;1 &amp;&amp; waterlevel&gt;=6) return true;
	else return false;
}

/**
 *
*/
//pomp omlaag
bool isLaag()
{
	if(pompnr &lt; 2 &amp;&amp; waterlevel&lt;6) return true;
	else return false;
}

/**
 *
*/
//pomp omhoog
bool isHoog()
{
    if(pompnr&gt;1 &amp;&amp; waterlevel&gt;=6) return true;
	else return false;
}


</declaration>
		<location id="id64" x="0" y="0">
		</location>
		<location id="id65" x="238" y="0">
			<label kind="invariant" x="228" y="17">isForMe()</label>
		</location>
		<init ref="id64"/>
		<transition>
			<source ref="id64"/>
			<target ref="id65"/>
			<label kind="synchronisation" x="18" y="51">klik?</label>
			<label kind="assignment" x="18" y="68">level:=waterlevel, x:=0</label>
			<nail x="0" y="68"/>
			<nail x="238" y="68"/>
		</transition>
		<transition>
			<source ref="id65"/>
			<target ref="id64"/>
			<label kind="guard" x="18" y="-136">x&gt;=5</label>
			<nail x="238" y="-102"/>
			<nail x="0" y="-102"/>
		</transition>
	</template>
	<template>
		<name>stoplicht</name>
		<location id="id66" x="0" y="0">
		</location>
		<location id="id67" x="102" y="0">
		</location>
		<location id="id68" x="204" y="0">
		</location>
		<init ref="id66"/>
		<transition>
			<source ref="id68"/>
			<target ref="id66"/>
			<nail x="204" y="17"/>
			<nail x="204" y="102"/>
			<nail x="0" y="102"/>
		</transition>
		<transition>
			<source ref="id68"/>
			<target ref="id66"/>
			<label kind="synchronisation" x="18" y="-119">klik!</label>
			<nail x="204" y="-102"/>
			<nail x="0" y="-102"/>
		</transition>
		<transition>
			<source ref="id67"/>
			<target ref="id68"/>
		</transition>
		<transition>
			<source ref="id66"/>
			<target ref="id67"/>
			<label kind="synchronisation" x="18" y="-17">stoplichtklik?</label>
		</transition>
	</template>
	<system>// Place template instantiations here.

    




system schip,aanvoer,afvoer,sluiskant,pomp,sluisdeur,stoplicht,controller;</system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] p</formula>
			<comment>• A - for all paths ( “A” in UPPAAL).
A[] p – p holds invariantly. 
• p is true in all reachable states.
			</comment>
		</query>
		<query>
			<formula>A&lt;&gt; p
			</formula>
			<comment>A&lt;&gt; p – p will inevitable become true, the automaton is
guaranteed to eventually reach a state in which p is true. 
p is true in some state of all paths
			</comment>
		</query>
		<query>
			<formula>F&lt;&gt;
			</formula>
			<comment>• F - some state in a path ( “&lt;&gt;” in UPPAAL).
			</comment>
		</query>
		<query>
			<formula>G&lt;&gt;
			</formula>
			<comment>• G - all states in a path ( “[]” in UPPAAL).
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; p
			</formula>
			<comment>• E&lt;&gt; p – it is possible to reach a state in which p is  satisfied
• p is true in (at least) one reachable state.
			</comment>
		</query>
		<query>
			<formula>E[]p
			</formula>
			<comment>E - exists a path ( “E” in UPPAAL).
E[] p – p is potentially always true. 
• There exists a path in which p is true in all states.
			</comment>
		</query>
		<query>
			<formula>p--&gt;p
			</formula>
			<comment>p --&gt; q – if p becomes true, q will inevitably become true.
 same as A[]( p imply A&lt;&gt; q ) 
• In all paths, if p becomes true, q will inevitably become
true.
			</comment>
		</query>
	</queries>
</nta>
