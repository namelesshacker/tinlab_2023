<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.


chan push;
int i;


chan klik;
const int MAX = 4;
typedef int[0,MAX-1] id_l;
typedef int[0,2] lumen;
lumen bright;


/////////
const int N = 6;         // # trains
typedef int[0,N-1] id_t;

chan        appr[N], stop[N], leave[N];
urgent chan go[N];
</declaration><template><name x="5" y="5">Knop</name><declaration>// Place local declarations here.
</declaration><location id="id0" x="0" y="-32"></location><init ref="id0"/><transition><source ref="id0"/><target ref="id0"/><label kind="guard" x="-60" y="-62">i&lt;5</label><label kind="synchronisation" x="-60" y="-47">push!</label><nail x="64" y="32"/><nail x="64" y="-96"/></transition></template><template><name>Loop</name><location id="id1" x="128" y="0"></location><location id="id2" x="0" y="0"></location><init ref="id2"/><transition><source ref="id1"/><target ref="id2"/><nail x="96" y="-32"/><nail x="32" y="-32"/></transition><transition><source ref="id2"/><target ref="id1"/><label kind="synchronisation" x="4" y="-15">push?</label><label kind="assignment" x="4" y="0">i++</label><nail x="32" y="32"/><nail x="96" y="32"/></transition></template><template><name>Schip</name><parameter>const id_t id</parameter><declaration>
bool left_entrance;
bool center;
bool right_entrance;


clock x;</declaration><location id="id3" x="96" y="256"><name x="86" y="226">Stop</name></location><location id="id4" x="192" y="160"><name x="182" y="130">Start</name><label kind="invariant" x="182" y="175">x&lt;=15</label></location><location id="id5" x="0" y="160"><name x="-10" y="130">Appr</name><label kind="invariant" x="-10" y="175">x&lt;=20</label></location><location id="id6" x="192" y="0"><name x="182" y="-30">Cross</name><label kind="invariant" x="182" y="15">x&lt;=5</label></location><location id="id7" x="0" y="0"><name x="-10" y="-30">Safe</name></location><init ref="id7"/><transition><source ref="id5"/><target ref="id6"/><label kind="guard" x="36" y="50">x&gt;=10</label><label kind="assignment" x="36" y="80">x:=0</label></transition><transition><source ref="id6"/><target ref="id7"/><label kind="guard" x="36" y="-30">x&gt;=3</label><label kind="synchronisation" x="36" y="-15">leave[id]!</label><nail x="96" y="0"/></transition><transition><source ref="id4"/><target ref="id6"/><label kind="guard" x="132" y="50">x&gt;=7</label><label kind="assignment" x="132" y="80">x:=0</label></transition><transition><source ref="id3"/><target ref="id4"/><label kind="synchronisation" x="84" y="193">go[id]?</label><label kind="assignment" x="84" y="208">x:=0</label><nail x="144" y="208"/></transition><transition><source ref="id5"/><target ref="id3"/><label kind="guard" x="-12" y="178">x&lt;=10</label><label kind="synchronisation" x="-12" y="193">stop[id]?</label></transition><transition><source ref="id7"/><target ref="id5"/><label kind="synchronisation" x="-60" y="65">appr[id]!</label><label kind="assignment" x="-60" y="80">x:=0</label></transition></template><template><name>Kade</name><location id="id8" x="0" y="0"></location><init ref="id8"/></template><template><name>Sluisdeur</name><location id="id9" x="0" y="0"></location><init ref="id9"/></template><template><name>Stoplicht</name><parameter>id_l lampnr</parameter><declaration>/*
clock x;

bool signal_ship;

void isForMe(){


}





*/

// Place local declarations here.

void functie()
{
	
}

lumen sterkte;


// wacht 5 tijdseenheden
clock x;

// een constraint op een bepaalde variabele
bool isForMe()
{
//	return false;
	
	if(lampnr &lt; 2 &amp;&amp; bright&lt;6) return true;
	else if(lampnr&gt;1 &amp;&amp; bright&gt;=6) return true;
	else return false;

}


//verschillende tijdseenheden voor even en oneven lampnummers</declaration><location id="id10" x="192" y="0"><name x="182" y="-30">Aan</name></location><location id="id11" x="0" y="0"><name x="-10" y="-30">Uit</name></location><init ref="id11"/><transition><source ref="id10"/><target ref="id11"/><label kind="guard" x="36" y="-30">x&gt;=5</label><nail x="160" y="-32"/><nail x="32" y="-32"/></transition><transition><source ref="id11"/><target ref="id10"/><label kind="synchronisation" x="36" y="-15">klik?</label><label kind="assignment" x="36" y="0">sterkte:=bright, x:=0</label><nail x="32" y="32"/><nail x="160" y="32"/></transition></template><template><name>Nivelleer</name><location id="id12" x="0" y="0"></location><init ref="id12"/></template><template><name>Gate</name><declaration>id_t list[N+1];
int[0,N] len;

// Put an element at the end of the queue
void enqueue(id_t element)
{
        list[len++] = element;
}

// Remove the front element of the queue
void dequeue()
{
        int i = 0;
        len -= 1;
        while (i &lt; len)
        {
                list[i] = list[i + 1];
                i++;
        }
        list[i] = 0;
}

// Returns the front element of the queue
id_t front()
{
   return list[0];
}

// Returns the last element of the queue
id_t tail()
{
   return list[len - 1];
}</declaration><location id="id13" x="0" y="320"><name x="-10" y="290">Stopping</name><committed/></location><location id="id14" x="0" y="224"><name x="-10" y="194">Occ</name></location><location id="id15" x="0" y="128"></location><location id="id16" x="0" y="0"><name x="-10" y="-30">Free</name><committed/></location><init ref="id16"/><transition><source ref="id13"/><target ref="id14"/><label kind="synchronisation" x="40" y="264">stop[tail()]!</label><nail x="32" y="288"/><nail x="32" y="256"/></transition><transition><source ref="id14"/><target ref="id16"/><label kind="select" x="152" y="64">e:id_t</label><label kind="guard" x="152" y="79">e==front()</label><label kind="synchronisation" x="152" y="94">leave[e]?</label><label kind="assignment" x="152" y="109">dequeue()</label><nail x="128" y="224"/><nail x="128" y="0"/></transition><transition><source ref="id16"/><target ref="id14"/><label kind="guard" x="-208" y="81">len &gt; 0</label><label kind="synchronisation" x="-208" y="96">go[front()]!</label><nail x="-128" y="0"/><nail x="-128" y="224"/></transition><transition><source ref="id14"/><target ref="id13"/><label kind="select" x="-60" y="227">e:id_t</label><label kind="synchronisation" x="-60" y="257">appr[e]?</label><label kind="assignment" x="-60" y="272">enqueue(e)</label></transition><transition><source ref="id15"/><target ref="id14"/><label kind="select" x="-60" y="131">e:id_t</label><label kind="synchronisation" x="-60" y="161">appr[e]?</label><label kind="assignment" x="-60" y="176">enqueue(e)</label></transition><transition><source ref="id16"/><target ref="id15"/><label kind="guard" x="-60" y="34">len==0</label></transition></template><template><name>User</name><location id="id17" x="0" y="0"></location><init ref="id17"/></template><template><name>StoplichtBediening</name><declaration>clock x;</declaration><location id="id18" x="0" y="0"></location><init ref="id18"/><transition><source ref="id18"/><target ref="id18"/><label kind="select" x="-60" y="-45">temp:lumen</label><label kind="guard" x="-60" y="-30">x&gt;=1</label><label kind="synchronisation" x="-60" y="-15">klik!</label><label kind="assignment" x="-60" y="0">x:=0, bright:=temp</label><nail x="64" y="64"/><nail x="64" y="-64"/></transition></template><template><name>Gate2</name><location id="id19" x="32" y="352"></location><location id="id20" x="-32" y="352"></location><location id="id21" x="-96" y="288"></location><location id="id22" x="0" y="288"></location><location id="id23" x="0" y="192"></location><location id="id24" x="0" y="96"></location><location id="id25" x="96" y="96"></location><location id="id26" x="-96" y="0"></location><location id="id27" x="0" y="0"></location><init ref="id27"/><transition><source ref="id23"/><target ref="id22"/></transition><transition><source ref="id24"/><target ref="id23"/></transition><transition><source ref="id27"/><target ref="id24"/></transition><transition><source ref="id25"/><target ref="id27"/><nail x="96" y="0"/></transition><transition><source ref="id22"/><target ref="id25"/><nail x="96" y="288"/></transition><transition><source ref="id19"/><target ref="id22"/></transition><transition><source ref="id20"/><target ref="id19"/></transition><transition><source ref="id22"/><target ref="id20"/></transition><transition><source ref="id21"/><target ref="id22"/></transition><transition><source ref="id26"/><target ref="id21"/></transition><transition><source ref="id27"/><target ref="id26"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Knop, Loop;</system></nta>