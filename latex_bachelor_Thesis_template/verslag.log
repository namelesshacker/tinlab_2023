This is pdfTeX, Version 3.141592653-2.6-1.40.24 (MiKTeX 22.10) (preloaded format=pdflatex 2023.1.8)  4 JUN 2023 23:31
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**./verslag.tex
(verslag.tex
LaTeX2e <2022-06-01> patch level 5
L3 programming layer <2022-09-28>
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/base\article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/base\size10.clo
File: size10.clo 2021/10/04 v1.4n Standard LaTeX file (size option)
)
\c@part=\count185
\c@section=\count186
\c@subsection=\count187
\c@subsubsection=\count188
\c@paragraph=\count189
\c@subparagraph=\count190
\c@figure=\count191
\c@table=\count192
\abovecaptionskip=\skip47
\belowcaptionskip=\skip48
\bibindent=\dimen138
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/graphics\graphicx.sty
Package: graphicx 2021/09/16 v1.2d Enhanced LaTeX Graphics (DPC,SPQR)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/graphics\keyval.sty
Package: keyval 2022/05/29 v1.15 key=value parser (DPC)
\KV@toks@=\toks16
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/graphics\graphics.sty
Package: graphics 2022/03/10 v1.4e Standard LaTeX Graphics (DPC,SPQR)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/graphics\trig.sty
Package: trig 2021/08/11 v1.11 sin cos tan (DPC)
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/graphics-cfg\graphics.c
fg
File: graphics.cfg 2016/06/04 v1.11 sample graphics configuration
)
Package graphics Info: Driver file: pdftex.def on input line 107.

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/graphics-def\pdftex.def
File: pdftex.def 2022/09/22 v1.2b Graphics/color driver for pdftex
\stockwidth=\dimen139
\stockheight=\dimen140
))
\Gin@req@height=\dimen141
\Gin@req@width=\dimen142
) (C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/babel\babel.sty
Package: babel 2022/10/04 3.81 The Babel package
\babel@savecnt=\count193
\U@D=\dimen143
\l@unhyphenated=\language79

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/babel\txtbabel.def)
\bbl@readstream=\read2
\bbl@dirlevel=\count194

*************************************
* Local config file bblopts.cfg used
*
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/arabi\bblopts.cfg
File: bblopts.cfg 2005/09/08 v0.1 add Arabic and Farsi to "declared" options of
 babel
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/babel-dutch\dutch.ldf
Language: dutch 2021/08/29 v3.8l Dutch support from the babel system
Package babel Info: Making " an active character on input line 127.
))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/babel/locale/nl\babel
-dutch.tex
Package babel Info: Importing font and identification data for dutch
(babel)             from babel-nl.ini. Reported on input line 11.
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/algorithms\algorithmic.
sty
Package: algorithmic 2009/08/24 v0.1 Document Style `algorithmic'
 (C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/base\ifthen.sty
Package: ifthen 2022/04/13 v1.1d Standard LaTeX ifthen package (DPC)
)
\c@ALC@unique=\count195
\c@ALC@line=\count196
\c@ALC@rem=\count197
\c@ALC@depth=\count198
\ALC@tlm=\skip49
\algorithmicindent=\skip50
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/listings\listings.sty
\lst@mode=\count199
\lst@gtempboxa=\box51
\lst@token=\toks17
\lst@length=\count266
\lst@currlwidth=\dimen144
\lst@column=\count267
\lst@pos=\count268
\lst@lostspace=\dimen145
\lst@width=\dimen146
\lst@newlines=\count269
\lst@lineno=\count270
\lst@maxwidth=\dimen147

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/listings\lstmisc.sty
File: lstmisc.sty 2020/03/24 1.8d (Carsten Heinz)
\c@lstnumber=\count271
\lst@skipnumbers=\count272
\lst@framebox=\box52
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/listings\listings.cfg
File: listings.cfg 2020/03/24 1.8d listings configuration
))
Package: listings 2020/03/24 1.8d (Carsten Heinz)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/xcolor\xcolor.sty
Package: xcolor 2022/06/12 v2.14 LaTeX color extensions (UK)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/graphics-cfg\color.cfg
File: color.cfg 2016/01/02 v1.6 sample color configuration
)
Package xcolor Info: Driver file: pdftex.def on input line 227.
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/colortbl\colortbl.sty
Package: colortbl 2022/06/20 v1.0f Color table columns (DPC)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tools\array.sty
Package: array 2022/03/10 v2.5f Tabular extension package (FMi)
\col@sep=\dimen148
\ar@mcellbox=\box53
\extrarowheight=\dimen149
\NC@list=\toks18
\extratabsurround=\skip51
\backup@length=\skip52
\ar@cellbox=\box54
)
\everycr=\toks19
\minrowclearance=\skip53
\rownum=\count273
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/graphics\mathcolor.ltx)
Package xcolor Info: Model `cmy' substituted by `cmy0' on input line 1353.
Package xcolor Info: Model `hsb' substituted by `rgb' on input line 1357.
Package xcolor Info: Model `RGB' extended on input line 1369.
Package xcolor Info: Model `HTML' substituted by `rgb' on input line 1371.
Package xcolor Info: Model `Hsb' substituted by `hsb' on input line 1372.
Package xcolor Info: Model `tHsb' substituted by `hsb' on input line 1373.
Package xcolor Info: Model `HSB' substituted by `hsb' on input line 1374.
Package xcolor Info: Model `Gray' substituted by `gray' on input line 1375.
Package xcolor Info: Model `wave' substituted by `hsb' on input line 1376.
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/xcolor\svgnam.def
File: svgnam.def 2022/06/12 v2.14 Predefined colors according to SVG 1.1 (UK)
))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/base\inputenc.sty
Package: inputenc 2021/02/14 v1.3d Input encoding file
\inpenc@prehook=\toks20
\inpenc@posthook=\toks21
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/base\fontenc.sty
Package: fontenc 2021/04/29 v2.0v Standard LaTeX package
)

! LaTeX Error: Option clash for package babel.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.17 \usepackage
                [automark,headsepline,plainheadsepline, plainfootsepline, fo...

The package babel has already been loaded with options:
  [dutch]
There has now been an attempt to load it with options
  [ngerman]
Adding the global options:
  dutch,ngerman
to your \documentclass declaration may fix this.
Try typing  <return>  to proceed.


(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/koma-script\scrlayer-sc
rpage.sty
Package: scrlayer-scrpage 2022/10/12 v3.38 KOMA-Script package (end user interf
ace for scrlayer)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/koma-script\scrlayer.st
y
Package: scrlayer 2022/10/12 v3.38 KOMA-Script package (defining layers and pag
e styles)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/koma-script\scrkbase.st
y
Package: scrkbase 2022/10/12 v3.38 KOMA-Script package (KOMA-Script-dependent b
asics and keyval usage)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/koma-script\scrbase.sty
Package: scrbase 2022/10/12 v3.38 KOMA-Script package (KOMA-Script-independent 
basics and keyval usage)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/koma-script\scrlfile.st
y
Package: scrlfile 2022/10/12 v3.38 KOMA-Script package (file load hooks)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/koma-script\scrlfile-ho
ok.sty
Package: scrlfile-hook 2022/10/12 v3.38 KOMA-Script package (using LaTeX hooks)


(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/koma-script\scrlogo.sty
Package: scrlogo 2022/10/12 v3.38 KOMA-Script package (logo)
)))
Applying: [2021/05/01] Usage of raw or classic option list on input line 252.
Already applied: [0000/00/00] Usage of raw or classic option list on input line
 368.
))
\footheight=\skip54
Package scrlayer Info: patching LaTeX kernel macro \pagestyle on input line 217
6.
))
1: subsection
1: section
1: section
1: subsection
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/multirow\multirow.sty
Package: multirow 2021/03/15 v2.8 Span multiple rows of a table
\multirow@colwidth=\skip55
\multirow@cntb=\count274
\multirow@dima=\skip56
\bigstrutjot=\dimen150
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/makecell\makecell.sty
Package: makecell 2009/08/03 V0.1e Managing of Tab Column Heads and Cells
\rotheadsize=\dimen151
\c@nlinenum=\count275
\TeXr@lab=\toks22
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/cellspace\cellspace.sty
Package: cellspace 2022/01/04 v1.9.0 Spacing table cells (JN)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tools\calc.sty
Package: calc 2017/05/25 v4.3 Infix arithmetic (KKT,FJ)
\calc@Acount=\count276
\calc@Bcount=\count277
\calc@Adimen=\dimen152
\calc@Bdimen=\dimen153
\calc@Askip=\skip57
\calc@Bskip=\skip58
LaTeX Info: Redefining \setlength on input line 80.
LaTeX Info: Redefining \addtolength on input line 81.
\calc@Ccount=\count278
\calc@Cskip=\skip59
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/xkeyval\xkeyval.sty
Package: xkeyval 2022/06/16 v2.9 package option processing (HA)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/xkeyval\xkeyval.tex
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/xkeyval\xkvutils.tex
\XKV@toks=\toks23
\XKV@tempa@toks=\toks24
)
\XKV@depth=\count279
File: xkeyval.tex 2014/12/03 v2.7a key=value parser (HA)
))
\cellspacetoplimit=\dimen154
\cellspacebottomlimit=\dimen155
\cellspace@firstht=\dimen156
\cellspace@lastdp=\dimen157
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/multirow\bigstrut.sty
Package: bigstrut 2021/03/15 v2.8 Provide larger struts in tabulars
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/ragged2e\ragged2e.sty
Package: ragged2e 2021/12/15 v3.1 ragged2e Package
\CenteringLeftskip=\skip60
\RaggedLeftLeftskip=\skip61
\RaggedRightLeftskip=\skip62
\CenteringRightskip=\skip63
\RaggedLeftRightskip=\skip64
\RaggedRightRightskip=\skip65
\CenteringParfillskip=\skip66
\RaggedLeftParfillskip=\skip67
\RaggedRightParfillskip=\skip68
\JustifyingParfillskip=\skip69
\CenteringParindent=\skip70
\RaggedLeftParindent=\skip71
\RaggedRightParindent=\skip72
\JustifyingParindent=\skip73
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/ltablex\ltablex.sty
Package: ltablex 2014/08/13 v1.1 Modified tabularx

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tools\longtable.sty
Package: longtable 2021-09-01 v4.17 Multi-page Table package (DPC)
\LTleft=\skip74
\LTright=\skip75
\LTpre=\skip76
\LTpost=\skip77
\LTchunksize=\count280
\LTcapwidth=\dimen158
\LT@head=\box55
\LT@firsthead=\box56
\LT@foot=\box57
\LT@lastfoot=\box58
\LT@gbox=\box59
\LT@cols=\count281
\LT@rows=\count282
\c@LT@tables=\count283
\c@LT@chunks=\count284
\LT@p@ftn=\toks25
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tools\tabularx.sty
Package: tabularx 2020/01/15 v2.11c `tabularx' package (DPC)
\TX@col@width=\dimen159
\TX@old@table=\dimen160
\TX@old@col=\dimen161
\TX@target=\dimen162
\TX@delta=\dimen163
\TX@cols=\count285
\TX@ftn=\toks26
))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/booktabs\booktabs.sty
Package: booktabs 2020/01/12 v1.61803398 Publication quality tables
\heavyrulewidth=\dimen164
\lightrulewidth=\dimen165
\cmidrulewidth=\dimen166
\belowrulesep=\dimen167
\belowbottomsep=\dimen168
\aboverulesep=\dimen169
\abovetopsep=\dimen170
\cmidrulesep=\dimen171
\cmidrulekern=\dimen172
\defaultaddspace=\dimen173
\@cmidla=\count286
\@cmidlb=\count287
\@aboverulesep=\dimen174
\@belowrulesep=\dimen175
\@thisruleclass=\count288
\@lastruleclass=\count289
\@thisrulewidth=\dimen176
)
\lastcolwd=\skip78

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/geometry\geometry.sty
Package: geometry 2020/01/02 v5.9 Page Geometry

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/iftex\ifvtex.sty
Package: ifvtex 2019/10/25 v1.7 ifvtex legacy package. Use iftex instead.

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/iftex\iftex.sty
Package: iftex 2022/02/03 v1.0f TeX engine tests
))
\Gm@cnth=\count290
\Gm@cntv=\count291
\c@Gm@tempcnt=\count292
\Gm@bindingoffset=\dimen177
\Gm@wd@mp=\dimen178
\Gm@odd@mp=\dimen179
\Gm@even@mp=\dimen180
\Gm@layoutwidth=\dimen181
\Gm@layoutheight=\dimen182
\Gm@layouthoffset=\dimen183
\Gm@layoutvoffset=\dimen184
\Gm@dimlist=\toks27

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/geometry\geometry.cfg))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/psnfss\times.sty
Package: times 2020/03/25 PSNFSS-v9.3 (SPQR) 
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcolorbox.sty
Package: tcolorbox 2022/06/24 version 5.1.1 text color boxes
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/pgf/basiclayer\pgf.sty
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/pgf/utilities\pgfrcs.st
y
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/utilities\pgfutil
-common.tex
\pgfutil@everybye=\toks28
\pgfutil@tempdima=\dimen185
\pgfutil@tempdimb=\dimen186

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/utilities\pgfutil
-common-lists.tex))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/utilities\pgfutil
-latex.def
\pgfutil@abb=\box60
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/utilities\pgfrcs.
code.tex
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf\pgf.revision.tex)
Package: pgfrcs 2021/05/15 v3.1.9a (3.1.9a)
))
Package: pgf 2021/05/15 v3.1.9a (3.1.9a)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/pgf/basiclayer\pgfcore.
sty
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/pgf/systemlayer\pgfsys.
sty
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/systemlayer\pgfsy
s.code.tex
Package: pgfsys 2021/05/15 v3.1.9a (3.1.9a)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/utilities\pgfkeys
.code.tex
\pgfkeys@pathtoks=\toks29
\pgfkeys@temptoks=\toks30

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/utilities\pgfkeys
filtered.code.tex
\pgfkeys@tmptoks=\toks31
))
\pgf@x=\dimen187
\pgf@y=\dimen188
\pgf@xa=\dimen189
\pgf@ya=\dimen190
\pgf@xb=\dimen191
\pgf@yb=\dimen192
\pgf@xc=\dimen193
\pgf@yc=\dimen194
\pgf@xd=\dimen195
\pgf@yd=\dimen196
\w@pgf@writea=\write3
\r@pgf@reada=\read3
\c@pgf@counta=\count293
\c@pgf@countb=\count294
\c@pgf@countc=\count295
\c@pgf@countd=\count296
\t@pgf@toka=\toks32
\t@pgf@tokb=\toks33
\t@pgf@tokc=\toks34
\pgf@sys@id@count=\count297

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/systemlayer\pgf.c
fg
File: pgf.cfg 2021/05/15 v3.1.9a (3.1.9a)
)
Driver file for pgf: pgfsys-pdftex.def

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/systemlayer\pgfsy
s-pdftex.def
File: pgfsys-pdftex.def 2021/05/15 v3.1.9a (3.1.9a)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/systemlayer\pgfsy
s-common-pdf.def
File: pgfsys-common-pdf.def 2021/05/15 v3.1.9a (3.1.9a)
)))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/systemlayer\pgfsy
ssoftpath.code.tex
File: pgfsyssoftpath.code.tex 2021/05/15 v3.1.9a (3.1.9a)
\pgfsyssoftpath@smallbuffer@items=\count298
\pgfsyssoftpath@bigbuffer@items=\count299
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/systemlayer\pgfsy
sprotocol.code.tex
File: pgfsysprotocol.code.tex 2021/05/15 v3.1.9a (3.1.9a)
))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
e.code.tex
Package: pgfcore 2021/05/15 v3.1.9a (3.1.9a)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmath.code
.tex
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmathcalc.
code.tex
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmathutil.
code.tex)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmathparse
r.code.tex
\pgfmath@dimen=\dimen197
\pgfmath@count=\count300
\pgfmath@box=\box61
\pgfmath@toks=\toks35
\pgfmath@stack@operand=\toks36
\pgfmath@stack@operation=\toks37
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmathfunct
ions.code.tex
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmathfunct
ions.basic.code.tex)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmathfunct
ions.trigonometric.code.tex)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmathfunct
ions.random.code.tex)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmathfunct
ions.comparison.code.tex)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmathfunct
ions.base.code.tex)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmathfunct
ions.round.code.tex)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmathfunct
ions.misc.code.tex)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmathfunct
ions.integerarithmetics.code.tex)))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmathfloat
.code.tex
\c@pgfmathroundto@lastzeros=\count301
))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfint.code.
tex)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
epoints.code.tex
File: pgfcorepoints.code.tex 2021/05/15 v3.1.9a (3.1.9a)
\pgf@picminx=\dimen198
\pgf@picmaxx=\dimen199
\pgf@picminy=\dimen256
\pgf@picmaxy=\dimen257
\pgf@pathminx=\dimen258
\pgf@pathmaxx=\dimen259
\pgf@pathminy=\dimen260
\pgf@pathmaxy=\dimen261
\pgf@xx=\dimen262
\pgf@xy=\dimen263
\pgf@yx=\dimen264
\pgf@yy=\dimen265
\pgf@zx=\dimen266
\pgf@zy=\dimen267
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
epathconstruct.code.tex
File: pgfcorepathconstruct.code.tex 2021/05/15 v3.1.9a (3.1.9a)
\pgf@path@lastx=\dimen268
\pgf@path@lasty=\dimen269
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
epathusage.code.tex
File: pgfcorepathusage.code.tex 2021/05/15 v3.1.9a (3.1.9a)
\pgf@shorten@end@additional=\dimen270
\pgf@shorten@start@additional=\dimen271
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
escopes.code.tex
File: pgfcorescopes.code.tex 2021/05/15 v3.1.9a (3.1.9a)
\pgfpic=\box62
\pgf@hbox=\box63
\pgf@layerbox@main=\box64
\pgf@picture@serial@count=\count302
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
egraphicstate.code.tex
File: pgfcoregraphicstate.code.tex 2021/05/15 v3.1.9a (3.1.9a)
\pgflinewidth=\dimen272
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
etransformations.code.tex
File: pgfcoretransformations.code.tex 2021/05/15 v3.1.9a (3.1.9a)
\pgf@pt@x=\dimen273
\pgf@pt@y=\dimen274
\pgf@pt@temp=\dimen275
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
equick.code.tex
File: pgfcorequick.code.tex 2021/05/15 v3.1.9a (3.1.9a)
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
eobjects.code.tex
File: pgfcoreobjects.code.tex 2021/05/15 v3.1.9a (3.1.9a)
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
epathprocessing.code.tex
File: pgfcorepathprocessing.code.tex 2021/05/15 v3.1.9a (3.1.9a)
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
earrows.code.tex
File: pgfcorearrows.code.tex 2021/05/15 v3.1.9a (3.1.9a)
\pgfarrowsep=\dimen276
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
eshade.code.tex
File: pgfcoreshade.code.tex 2021/05/15 v3.1.9a (3.1.9a)
\pgf@max=\dimen277
\pgf@sys@shading@range@num=\count303
\pgf@shadingcount=\count304
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
eimage.code.tex
File: pgfcoreimage.code.tex 2021/05/15 v3.1.9a (3.1.9a)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
eexternal.code.tex
File: pgfcoreexternal.code.tex 2021/05/15 v3.1.9a (3.1.9a)
\pgfexternal@startupbox=\box65
))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
elayers.code.tex
File: pgfcorelayers.code.tex 2021/05/15 v3.1.9a (3.1.9a)
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
etransparency.code.tex
File: pgfcoretransparency.code.tex 2021/05/15 v3.1.9a (3.1.9a)
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
epatterns.code.tex
File: pgfcorepatterns.code.tex 2021/05/15 v3.1.9a (3.1.9a)
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/basiclayer\pgfcor
erdf.code.tex
File: pgfcorerdf.code.tex 2021/05/15 v3.1.9a (3.1.9a)
)))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/modules\pgfmodule
shapes.code.tex
File: pgfmoduleshapes.code.tex 2021/05/15 v3.1.9a (3.1.9a)
\pgfnodeparttextbox=\box66
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/modules\pgfmodule
plot.code.tex
File: pgfmoduleplot.code.tex 2021/05/15 v3.1.9a (3.1.9a)
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/pgf/compatibility\pgfco
mp-version-0-65.sty
Package: pgfcomp-version-0-65 2021/05/15 v3.1.9a (3.1.9a)
\pgf@nodesepstart=\dimen278
\pgf@nodesepend=\dimen279
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/pgf/compatibility\pgfco
mp-version-1-18.sty
Package: pgfcomp-version-1-18 2021/05/15 v3.1.9a (3.1.9a)
))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tools\verbatim.sty
Package: verbatim 2020-07-07 v1.5u LaTeX2e package for verbatim enhancements
\every@verbatim=\toks38
\verbatim@line=\toks39
\verbatim@in@stream=\read4
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/environ\environ.sty
Package: environ 2014/05/04 v0.3 A new way to define environments

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/trimspaces\trimspaces.s
ty
Package: trimspaces 2009/09/17 v1.1 Trim spaces around a token list
)
\@envbody=\toks40
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/etoolbox\etoolbox.sty
Package: etoolbox 2020/10/05 v2.5k e-TeX tools for LaTeX (JAW)
\etb@tempcnta=\count305
)
\tcb@titlebox=\box67
\tcb@upperbox=\box68
\tcb@lowerbox=\box69
\tcb@phantombox=\box70
\c@tcbbreakpart=\count306
\c@tcblayer=\count307
\c@tcolorbox@number=\count308
\tcb@temp=\box71
\tcb@temp=\box72
\tcb@temp=\box73
\tcb@temp=\box74

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcbraster.cod
e.tex
Library (tcolorbox): 'tcbraster.code.tex' version '5.1.1'
\c@tcbrastercolumn=\count309
\c@tcbrasterrow=\count310
\c@tcbrasternum=\count311
\c@tcbraster=\count312
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcbskins.code
.tex
Library (tcolorbox): 'tcbskins.code.tex' version '5.1.1'

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/pgf/frontendlayer\tikz.
sty
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/pgf/utilities\pgffor.st
y
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/pgf/utilities\pgfkeys.s
ty
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/utilities\pgfkeys
.code.tex))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/pgf/math\pgfmath.sty
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmath.code
.tex))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/utilities\pgffor.
code.tex
Package: pgffor 2021/05/15 v3.1.9a (3.1.9a)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/math\pgfmath.code
.tex)
\pgffor@iter=\dimen280
\pgffor@skip=\dimen281
\pgffor@stack=\toks41
\pgffor@toks=\toks42
))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/frontendlayer/tik
z\tikz.code.tex
Package: tikz 2021/05/15 v3.1.9a (3.1.9a)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/libraries\pgflibr
aryplothandlers.code.tex
File: pgflibraryplothandlers.code.tex 2021/05/15 v3.1.9a (3.1.9a)
\pgf@plot@mark@count=\count313
\pgfplotmarksize=\dimen282
)
\tikz@lastx=\dimen283
\tikz@lasty=\dimen284
\tikz@lastxsaved=\dimen285
\tikz@lastysaved=\dimen286
\tikz@lastmovetox=\dimen287
\tikz@lastmovetoy=\dimen288
\tikzleveldistance=\dimen289
\tikzsiblingdistance=\dimen290
\tikz@figbox=\box75
\tikz@figbox@bg=\box76
\tikz@tempbox=\box77
\tikz@tempbox@bg=\box78
\tikztreelevel=\count314
\tikznumberofchildren=\count315
\tikznumberofcurrentchild=\count316
\tikz@fig@count=\count317

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/modules\pgfmodule
matrix.code.tex
File: pgfmodulematrix.code.tex 2021/05/15 v3.1.9a (3.1.9a)
\pgfmatrixcurrentrow=\count318
\pgfmatrixcurrentcolumn=\count319
\pgf@matrix@numberofcolumns=\count320
)
\tikz@expandcount=\count321

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/frontendlayer/tik
z/libraries\tikzlibrarytopaths.code.tex
File: tikzlibrarytopaths.code.tex 2021/05/15 v3.1.9a (3.1.9a)
)))
\tcb@waterbox=\box79

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcbskinsjigsa
w.code.tex
Library (tcolorbox): 'tcbskinsjigsaw.code.tex' version '5.1.1'
))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcbbreakable.
code.tex
Library (tcolorbox): 'tcbbreakable.code.tex' version '5.1.1'
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/pdfcol\pdfcol.sty
Package: pdfcol 2022-09-21 v1.7 Handle new color stacks for pdfTeX (HO)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/ltxcmds\ltxcmds.sty
Package: ltxcmds 2020-05-10 v1.25 LaTeX kernel commands for general use (HO)
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/infwarerr\infwarerr.s
ty
Package: infwarerr 2019/12/03 v1.5 Providing info/warning/error messages (HO)
))
Package pdfcol Info: New color stack `tcb@breakable' = 1 on input line 23.
\tcb@testbox=\box80
\tcb@totalupperbox=\box81
\tcb@totallowerbox=\box82
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcbhooks.code
.tex
Library (tcolorbox): 'tcbhooks.code.tex' version '5.1.1'
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcbtheorems.c
ode.tex
Library (tcolorbox): 'tcbtheorems.code.tex' version '5.1.1'
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/amsmath\amsmath.sty
Package: amsmath 2022/04/08 v2.17n AMS math features
\@mathmargin=\skip79

For additional information on amsmath, use the `?' option.
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/amsmath\amstext.sty
Package: amstext 2021/08/26 v2.01 AMS text

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/amsmath\amsgen.sty
File: amsgen.sty 1999/11/30 v2.0 generic functions
\@emptytoks=\toks43
\ex@=\dimen291
))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/amsmath\amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d Bold Symbols
\pmbraise@=\dimen292
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/amsmath\amsopn.sty
Package: amsopn 2022/04/08 v2.04 operator names
)
\inf@bad=\count322
LaTeX Info: Redefining \frac on input line 234.
\uproot@=\count323
\leftroot@=\count324
LaTeX Info: Redefining \overline on input line 399.
LaTeX Info: Redefining \colon on input line 410.
\classnum@=\count325
\DOTSCASE@=\count326
LaTeX Info: Redefining \ldots on input line 496.
LaTeX Info: Redefining \dots on input line 499.
LaTeX Info: Redefining \cdots on input line 620.
\Mathstrutbox@=\box83
\strutbox@=\box84
LaTeX Info: Redefining \big on input line 722.
LaTeX Info: Redefining \Big on input line 723.
LaTeX Info: Redefining \bigg on input line 724.
LaTeX Info: Redefining \Bigg on input line 725.
\big@size=\dimen293
LaTeX Font Info:    Redeclaring font encoding OML on input line 743.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 744.
\macc@depth=\count327
LaTeX Info: Redefining \bmod on input line 905.
LaTeX Info: Redefining \pmod on input line 910.
LaTeX Info: Redefining \smash on input line 940.
LaTeX Info: Redefining \relbar on input line 970.
LaTeX Info: Redefining \Relbar on input line 971.
\c@MaxMatrixCols=\count328
\dotsspace@=\muskip16
\c@parentequation=\count329
\dspbrk@lvl=\count330
\tag@help=\toks44
\row@=\count331
\column@=\count332
\maxfields@=\count333
\andhelp@=\toks45
\eqnshift@=\dimen294
\alignsep@=\dimen295
\tagshift@=\dimen296
\tagwidth@=\dimen297
\totwidth@=\dimen298
\lineht@=\dimen299
\@envbody=\toks46
\multlinegap=\skip80
\multlinetaggap=\skip81
\mathdisplay@stack=\toks47
LaTeX Info: Redefining \[ on input line 2953.
LaTeX Info: Redefining \] on input line 2954.
))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcbfitting.co
de.tex
Library (tcolorbox): 'tcbfitting.code.tex' version '5.1.1'
\tcbfitdim=\dimen300
\tcb@lowerfitdim=\dimen301
\tcb@upperfitdim=\dimen302
\tcb@cur@hbadness=\count334
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcblistingsut
f8.code.tex
Library (tcolorbox): 'tcblistingsutf8.code.tex' version '5.1.1'

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcblistings.c
ode.tex
Library (tcolorbox): 'tcblistings.code.tex' version '5.1.1'

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcblistingsco
re.code.tex
Library (tcolorbox): 'tcblistingscore.code.tex' version '5.1.1'

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcbprocessing
.code.tex
Library (tcolorbox): 'tcbprocessing.code.tex' version '5.1.1'

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pdftexcmds\pdftexcmds
.sty
Package: pdftexcmds 2020-06-27 v0.33 Utility functions of pdfTeX for LuaTeX (HO
)
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode found.
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tools\shellesc.sty
Package: shellesc 2019/11/08 v1.0c unified shell escape interface for LaTeX
Package shellesc Info: Restricted shell escape enabled on input line 77.
))
\c@tcblisting=\count335
))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/listingsutf8\listingsut
f8.sty
Package: listingsutf8 2019-12-10 v1.5 Allow UTF-8 in listings input (HO)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/stringenc\stringenc.s
ty
Package: stringenc 2019/11/29 v1.12 Convert strings between diff. encodings (HO
)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pdfescape\pdfescape.s
ty
Package: pdfescape 2019/12/09 v1.15 Implements pdfTeX's escape features (HO)
))))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcbexternal.c
ode.tex
Library (tcolorbox): 'tcbexternal.code.tex' version '5.1.1'
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcbmagazine.c
ode.tex
Library (tcolorbox): 'tcbmagazine.code.tex' version '5.1.1'
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcbvignette.c
ode.tex
Library (tcolorbox): 'tcbvignette.code.tex' version '5.1.1'

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/frontendlayer/tik
z/libraries\tikzlibraryfadings.code.tex
File: tikzlibraryfadings.code.tex 2021/05/15 v3.1.9a (3.1.9a)

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/generic/pgf/libraries\pgflibr
aryfadings.code.tex
File: pgflibraryfadings.code.tex 2021/05/15 v3.1.9a (3.1.9a)
)))
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/tcolorbox\tcbposter.cod
e.tex
Library (tcolorbox): 'tcbposter.code.tex' version '5.1.1'
)) (C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/lipsum\lipsum.sty
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/l3packages/l3keys2e\l3k
eys2e.sty
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/l3kernel\expl3.sty
Package: expl3 2022-09-28 L3 programming layer (loader) 

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/l3backend\l3backend-pdf
tex.def
File: l3backend-pdftex.def 2022-09-28 L3 backend support: PDF output (pdfTeX)
\l__color_backend_stack_int=\count336
\l__pdf_internal_box=\box85
))
Package: l3keys2e 2022-06-22 LaTeX2e option processing using LaTeX3 keys
)
Package: lipsum 2021-09-20 v2.7 150 paragraphs of Lorem Ipsum dummy text
\g__lipsum_par_int=\count337
\l__lipsum_a_int=\count338
\l__lipsum_b_int=\count339

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/lipsum\lipsum.ltd.tex))
LaTeX Font Info:    Trying to load font information for T1+ptm on input line 78
.
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/psnfss\t1ptm.fd
File: t1ptm.fd 2001/06/04 font definitions for T1/ptm.
)
(verslag.aux (1_Intro/intro.aux) (2_Body/body.aux)
(4_Conclusions/conclusions.aux) (Appendix/Appendix.aux))
\openout1 = `verslag.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 78.
LaTeX Font Info:    ... okay on input line 78.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 78.
LaTeX Font Info:    ... okay on input line 78.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 78.
LaTeX Font Info:    ... okay on input line 78.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 78.
LaTeX Font Info:    ... okay on input line 78.
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line 78.
LaTeX Font Info:    ... okay on input line 78.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 78.
LaTeX Font Info:    ... okay on input line 78.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 78.
LaTeX Font Info:    ... okay on input line 78.

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/context/base/mkii\supp-pdf.mk
ii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count340
\scratchdimen=\dimen303
\scratchbox=\box86
\nofMPsegments=\count341
\nofMParguments=\count342
\everyMPshowfont=\toks48
\MPscratchCnt=\count343
\MPscratchDim=\dimen304
\MPnumerator=\count344
\makeMPintoPDFobject=\count345
\everyMPtoPDFconversion=\toks49
)
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/epstopdf-pkg\epstopdf-b
ase.sty
Package: epstopdf-base 2020-01-24 v2.11 Base part for package epstopdf
Package epstopdf-base Info: Redefining graphics rule for `.eps' on input line 4
85.

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/00miktex\epstopdf-sys.c
fg
File: epstopdf-sys.cfg 2021/03/18 v2.0 Configuration of epstopdf for MiKTeX
))
\c@lstlisting=\count346

*geometry* driver: auto-detecting
*geometry* detected driver: pdftex
*geometry* verbose mode - [ preamble ] result:
* driver: pdftex
* paper: <default>
* layout: <same size as paper>
* layoutoffset:(h,v)=(0.0pt,0.0pt)
* modes: includehead includefoot 
* h-part:(L,W,R)=(71.13188pt, 472.03123pt, 71.13188pt)
* v-part:(T,H,B)=(56.9055pt, 709.61174pt, 28.45274pt)
* \paperwidth=614.295pt
* \paperheight=794.96999pt
* \textwidth=472.03123pt
* \textheight=642.61174pt
* \oddsidemargin=-1.1381pt
* \evensidemargin=-1.1381pt
* \topmargin=-15.36449pt
* \headheight=12.0pt
* \headsep=25.0pt
* \topskip=10.0pt
* \footskip=30.0pt
* \marginparwidth=65.0pt
* \marginparsep=11.0pt
* \columnsep=10.0pt
* \skip\footins=9.0pt plus 4.0pt minus 2.0pt
* \hoffset=0.0pt
* \voffset=0.0pt
* \mag=1000
* \@twocolumnfalse
* \@twosidefalse
* \@mparswitchfalse
* \@reversemarginfalse
* (1in=72.27pt=25.4mm, 1cm=28.453pt)

LaTeX Font Info:    Trying to load font information for T1+phv on input line 79
.
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/psnfss\t1phv.fd
File: t1phv.fd 2020/03/25 scalable font definitions for T1/phv.
)
<logohr.png, id=40, 255.20343pt x 255.20343pt>
File: logohr.png Graphic file (type png)
<use logohr.png>
Package pdftex.def Info: logohr.png  used on input line 99.
(pdftex.def)             Requested size: 113.81102pt x 113.81244pt.

[1

{C:/Users/gally/AppData/Local/MiKTeX/fonts/map/pdftex/pdftex.map} <./logohr.png
>] (verslag.toc [1] [2]
Overfull \hbox (2.0196pt too wide) detected at line 148
\T1/phv/m/n/10 11.10 
 []


Overfull \hbox (2.0196pt too wide) detected at line 149
\T1/phv/m/n/10 11.11 
 []


Overfull \hbox (2.0196pt too wide) detected at line 150
\T1/phv/m/n/10 11.12 
 []


Overfull \hbox (2.0196pt too wide) detected at line 151
\T1/phv/m/n/10 11.13 
 []


Overfull \hbox (2.0196pt too wide) detected at line 152
\T1/phv/m/n/10 11.14 
 []


Overfull \hbox (2.0196pt too wide) detected at line 153
\T1/phv/m/n/10 11.15 
 []


Overfull \hbox (2.0196pt too wide) detected at line 154
\T1/phv/m/n/10 11.16 
 []


Overfull \hbox (2.0196pt too wide) detected at line 155
\T1/phv/m/n/10 11.17 
 []


Overfull \hbox (2.0196pt too wide) detected at line 156
\T1/phv/m/n/10 11.18 
 []


Overfull \hbox (2.0196pt too wide) detected at line 157
\T1/phv/m/n/10 11.19 
 []


Overfull \hbox (2.0196pt too wide) detected at line 158
\T1/phv/m/n/10 11.20 
 []


Overfull \hbox (2.0196pt too wide) detected at line 159
\T1/phv/m/n/10 11.21 
 []


Overfull \hbox (2.0196pt too wide) detected at line 160
\T1/phv/m/n/10 11.22 
 []


Overfull \hbox (2.0196pt too wide) detected at line 161
\T1/phv/m/n/10 11.23 
 []


Overfull \hbox (2.0196pt too wide) detected at line 162
\T1/phv/m/n/10 11.24 
 []


Overfull \hbox (2.0196pt too wide) detected at line 163
\T1/phv/m/n/10 11.25 
 []


Overfull \hbox (2.0196pt too wide) detected at line 164
\T1/phv/m/n/10 11.26 
 []


Overfull \hbox (2.0196pt too wide) detected at line 165
\T1/phv/m/n/10 11.27 
 []


Overfull \hbox (2.0196pt too wide) detected at line 166
\T1/phv/m/n/10 11.28 
 []


Overfull \hbox (2.0196pt too wide) detected at line 167
\T1/phv/m/n/10 11.29 
 []


Overfull \hbox (2.0196pt too wide) detected at line 168
\T1/phv/m/n/10 11.30 
 []


Overfull \hbox (2.0196pt too wide) detected at line 169
\T1/phv/m/n/10 11.31 
 []


Overfull \hbox (2.0196pt too wide) detected at line 172
\T1/phv/m/n/10 11.32 
 []


Overfull \hbox (2.0196pt too wide) detected at line 173
\T1/phv/m/n/10 11.33 
 []


Overfull \hbox (2.0196pt too wide) detected at line 174
\T1/phv/m/n/10 11.34 
 []


Overfull \hbox (2.0196pt too wide) detected at line 175
\T1/phv/m/n/10 11.35 
 []


Overfull \hbox (2.0196pt too wide) detected at line 176
\T1/phv/m/n/10 11.36 
 []

[3])
\tf@toc=\write4
\openout4 = `verslag.toc'.

 [4]
\openout2 = `1_Intro/intro.aux'.

 (1_Intro/intro.tex
! Undefined control sequence.
l.1 \chapter
            {Inleiding}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

[5

]
! You can't use `macro parameter character #' in horizontal mode.
l.33 ...atistical-Model-Checking-814.html?lang=en#
                                                  :~:text=Statistical%20Mode...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

[6]
! Missing $ inserted.
<inserted text> 
                $
l.41 ...wente.nl/ws/portalfiles/portal/28200786/A_
                                                  statistical_model_checker.pdf
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.44 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (190.54588pt too wide) in paragraph at lines 40--44
[]\T1/phv/m/n/10 https://project.inria.fr/plasma-lab/statistical-model-checking
/ https://ris.utwente.nl/ws/portalfiles/portal/28200786/A$[]\OML/cmm/m/it/10 ta
tistical[]odel[]hecker:pdfhttps \OT1/cmr/m/n/10 :
 []

[7]) [8]
\openout2 = `2_Body/body.aux'.

 (2_Body/body.tex
! Undefined control sequence.
l.6 \chapter
            {Methodologie}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Underfull \hbox (badness 10000) in paragraph at lines 24--24
[]|\T1/ptm/m/n/8 rapport-veiligheid-van-op-afstand-bediende-
 []


Underfull \hbox (badness 10000) in paragraph at lines 28--28
[]|\T1/ptm/m/n/8 richtlijnen-vaarwegen-2017 _tcm21-
 []


Underfull \hbox (badness 10000) in paragraph at lines 41--41
[]|\T1/ptm/m/n/8 Capaciteitsanalyse _van _de _prin-
 []


Underfull \hbox (badness 3000) in paragraph at lines 41--41
\T1/ptm/m/n/8 ses_margrietsluis _in _lem-mer _- _Marc
 []


Overfull \hbox (14.59435pt too wide) in paragraph at lines 49--49
[]|\T1/ptm/m/n/8 https://wiki.woudagemaal.nl/w/index.php/Sluizen| 
 []

! Undefined control sequence.
l.59 \chapter
             {}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

[9




]

LaTeX Warning: Citation `bicker21102016automatiseringsparadox ' on page 10 unde
fined on input line 74.


LaTeX Warning: Citation `vseautoparadox ' on page 10 undefined on input line 75
.


LaTeX Warning: Citation `blogxot21112016slimapparaat ' on page 10 undefined on 
input line 76.

[10] [11] [12]
! You can't use `macro parameter character #' in horizontal mode.
l.235 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.235 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.236 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.236 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.236 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.237 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.237 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.237 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.238 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.242 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.243 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.243 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.243 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.244 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.244 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.244 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.245 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.249 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.250 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.250 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.250 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.251 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.251 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.251 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.252 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.256 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.257 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.257 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.257 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.258 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.258 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.258 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.259 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

[13]
! You can't use `macro parameter character #' in horizontal mode.
l.293 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.293 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.294 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.294 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.294 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.295 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.295 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.295 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.296 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.298 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.299 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.299 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.299 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Misplaced alignment tab character &.
l.306 ...sues: cost, tradeoff beween performance &
                                                   user interfaces
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! You can't use `macro parameter character #' in vertical mode.
l.348 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.348 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.348 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.349 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.362 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.363 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.363 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.363 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.364 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.364 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.364 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.365 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Misplaced alignment tab character &.
l.376 graphical &
                  textual specification
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


Overfull \hbox (16.37802pt too wide) in paragraph at lines 386--392
[]\T1/phv/m/n/10 block[objects, clas-ses, me-thods, mes-sa-ges, in-heri-tance] 
[goals,agents, al-ter-na-tive, events, ac-ti-ons,existence
 []

[14]
! You can't use `macro parameter character #' in vertical mode.
l.427 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.427 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.428 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.428 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.428 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.429 #
        # #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.429 # #
          #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.429 # # #
           
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 #
        # ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # #
          ################
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # #
           ###############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # ##
            ##############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # ###
             #############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # ####
              ############
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # #####
               ###########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # ######
                ##########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # #######
                 #########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # ########
                  ########
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # #########
                   #######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # ##########
                    ######
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # ###########
                     #####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # ############
                      ####
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # #############
                       ###
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # ##############
                        ##
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # ###############
                         #
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.430 # # ################
                          
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

[15]
! Misplaced alignment tab character &.
l.489 ...ty.net/database/record.php?id=19921004-2&
                                                  lang=nl
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.493 ...w.researchgate.net/publication/254815008_
                                                  Rampen_regels_richtlijnen
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


LaTeX Warning: Citation `boogers092002RampenRegelsRichtlijnen' on page 16 undef
ined on input line 494.

! Missing $ inserted.
<inserted text> 
                $
l.495 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (18.82227pt too wide) in paragraph at lines 491--495
\T1/phv/m/n/10 https://www.enschede.nl/inhoud/commissie-oosting https://www.pol
itie.nl/binaries/content/assets/politie/wob/00-
 []


Overfull \hbox (236.46141pt too wide) in paragraph at lines 491--495
\T1/phv/m/n/10 landelijk/vuurwerkramp-enschede/bijlagen-rapport-vuurwerkramp-en
schede.pdf https://www.researchgate.net/publication/254815008$[]\OML/cmm/m/it/1
0 ampen[]egels[]ichtlijnen\OT1/cmr/m/n/10 [[]]$ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.496 ...s://www.youtube.com/watch?v=OMkIsj8FsHw"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.496 ...s://www.youtube.com/watch?v=OMkIsj8FsHw"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (105.29967pt too wide) in paragraph at lines 496--496
[]\T1/phv/m/n/10 @onlineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, title 
= title, date = date, url = "https://www.youtube.com/watch?v=OMkIsj8FsHw 
 []

! You can't use `macro parameter character #' in horizontal mode.
l.497 ...rwerkramp.enschede.nl/publicaties/00005/#
                                                  .YOAlp-gzaUk"},}
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.497 ...hede.nl/publicaties/00005/#.YOAlp-gzaUk"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.497 ...hede.nl/publicaties/00005/#.YOAlp-gzaUk"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (482.56602pt too wide) in paragraph at lines 496--497
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://depot03.archiefweb.eu/archives/archiefw
eb/20210703085353/http://www.vuurwerkramp.enschede.nl/publicaties/00005/.YOAlp-

 []

! Missing $ inserted.
<inserted text> 
                $
l.510 https://catsr.vse.gmu.edu/SYST460/TA1951_
                                               AccidentReport.pdf
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


LaTeX Warning: Citation `catsr25022009Boeing737AmsterdamCrash' on page 16 undef
ined on input line 511.

! Missing $ inserted.
<inserted text> 
                $
l.513 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (222.38522pt too wide) in paragraph at lines 509--513
\T1/phv/m/n/10 lucht-ver-keers-lei-ding/ https://catsr.vse.gmu.edu/SYST460/TA19
51$[]\OML/cmm/m/it/10 ccidentReport:pdf\OT1/cmr/m/n/10 [[]]\OML/cmm/m/it/10 Wat
gingerallemaalmisbijdebovengenoemderampenenongelukken:::::::$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.517 ... {"https://nl.wikipedia.org/wiki/Turkish_
                                                  Airlines-vlucht_1951"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.517 ...a.org/wiki/Turkish_Airlines-vlucht_1951"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.517 ...a.org/wiki/Turkish_Airlines-vlucht_1951"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.517 ...a.org/wiki/Turkish_Airlines-vlucht_1951"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (137.14719pt too wide) in paragraph at lines 516--517
[]\T1/phv/m/n/10 vlucht 1951 @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = ed
i-tor, title = title, date = date, url = "https://nl.wikipedia.org/wiki/Turkish
$[]\OML/cmm/m/it/10 irlines \OMS/cmsy/m/n/10 ^^@
 []

! Missing $ inserted.
<inserted text> 
                $
l.519 ...file:///C:/Users/gally/Downloads/rapport_
                                                  ta_nl_aangepast.pdf"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.519 ...y/Downloads/rapport_ta_nl_aangepast.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.519 ...y/Downloads/rapport_ta_nl_aangepast.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.519 ...y/Downloads/rapport_ta_nl_aangepast.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.523 ....noordhollandsdagblad.nl/cnt/dmf20190221_
                                                  65390940"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.523 ...andsdagblad.nl/cnt/dmf20190221_65390940"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.523 ...andsdagblad.nl/cnt/dmf20190221_65390940"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.523 ...andsdagblad.nl/cnt/dmf20190221_65390940"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (48.81607pt too wide) in paragraph at lines 519--523
\T1/phv/m/n/10 au-thor, AL-Tedi-tor = edi-tor, title = title, date = date, url 
= "https://www.noordhollandsdagblad.nl/cnt/dmf20190221$[]\OT1/cmr/m/n/10 539094
0$ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.536 ...-2009-letsels-en-verdeling-van-gewonden"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.536 ...-2009-letsels-en-verdeling-van-gewonden"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (22.48965pt too wide) in paragraph at lines 523--536
\T1/phv/m/n/10 ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, title = title, date
 = date, url = "https://www.ntvg.nl/artikelen/vliegtuigongeval-
 []

[16]
! Missing $ inserted.
<inserted text> 
                $
l.538 ..."https://nl.wikinews.org/wiki/Technische_
                                                  fout_oorzaak_vliegtuigcras...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.538 ...gtuigcrash_Turkish_Airlines-vlucht_1951"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.538 ...gtuigcrash_Turkish_Airlines-vlucht_1951"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.538 ...gtuigcrash_Turkish_Airlines-vlucht_1951"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (91.2383pt too wide) in paragraph at lines 536--538
\T1/phv/m/n/10 Tedi-tor = edi-tor, title = title, date = date, url = "https://n
l.wikinews.org/wiki/Technische$[]\OML/cmm/m/it/10 out[]orzaak[]liegtuigcrash[]u
rkish[]irlines \OMS/cmsy/m/n/10 ^^@
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.541 ...sh-tk1951-na-amerikaanse-druk-afgezwakt"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.541 ...sh-tk1951-na-amerikaanse-druk-afgezwakt"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (85.77898pt too wide) in paragraph at lines 538--541
\T1/phv/m/n/10 thor, AL-Tedi-tor = edi-tor, title = title, date = date, url = "
https://www.luchtvaartnieuws.nl/nieuws/categorie/72/algemeen/conclusies-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.544 ...nicatie-na-vliegramp-vertoonde-gebreken"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.544 ...nicatie-na-vliegramp-vertoonde-gebreken"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.546 ...polderbaan-crash-turkish-airlines-1951/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.546 ...polderbaan-crash-turkish-airlines-1951/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.547 ...2/nl/Crash-Turkish-Airlines-vlucht-1951"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.547 ...2/nl/Crash-Turkish-Airlines-vlucht-1951"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.548 ...w.flightradar24.com/data/flights/tk1951"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.548 ...w.flightradar24.com/data/flights/tk1951"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (153.46211pt too wide) in paragraph at lines 547--548
[]\T1/phv/m/n/10 , @on-li-ne-f-lightra-dar24, ALTau-thor = au-thor, AL-Tedi-tor
 = edi-tor, title = title, date = date, url = "https://www.flightradar24.com/da
ta/flights/tk1951 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.549 ...ightstats.com/v2/flight-tracker/TK/1951"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.549 ...ightstats.com/v2/flight-tracker/TK/1951"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (113.02287pt too wide) in paragraph at lines 548--549
[]\T1/phv/m/n/10 , @on-li-ne-f-lightstatstrac-ker, ALTau-thor = au-thor, AL-Ted
i-tor = edi-tor, title = title, date = date, url = "https://www.flightstats.com
/v2/flight-
 []

! Missing $ inserted.
<inserted text> 
                $
l.563 ...b.iaea.org/MTCD/publications/PDF/Pub913e_
                                                  web.pdf
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


LaTeX Warning: Citation `INSAVienna1992Chernobyl' on page 17 undefined on input
 line 564.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.565 ...s://www.youtube.com/watch?v=Xw3SFOfbR84"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.565 ...s://www.youtube.com/watch?v=Xw3SFOfbR84"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.565 ...s://www.youtube.com/watch?v=Xw3SFOfbR84"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.565 ...s://www.youtube.com/watch?v=Xw3SFOfbR84"}
                                                  ,}
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.565 ...s://www.youtube.com/watch?v=Xw3SFOfbR84"}
                                                  ,}
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (702.25851pt too wide) in paragraph at lines 562--565
\T1/phv/m/n/10 de re-ac-tor-ker-nen. Met brand en eks-plo-sie tot ge-volg. http
s://www-pub.iaea.org/MTCD/publications/PDF/Pub913e$[]\OML/cmm/m/it/10 eb:pdf\OT
1/cmr/m/n/10 [[]]@\OML/cmm/m/it/10 online[]$ 
 []

! Too many }'s.
<recently read> }
                 
l.565 ...s://www.youtube.com/watch?v=Xw3SFOfbR84"}
                                                  ,}
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Too many }'s.
l.565 ...//www.youtube.com/watch?v=Xw3SFOfbR84"},}
                                                  
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Missing $ inserted.
<inserted text> 
                $
l.566 ...{"https://nl.wikipedia.org/wiki/Kernramp_
                                                  van_Tsjernobyl"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.566 ...ipedia.org/wiki/Kernramp_van_Tsjernobyl"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.566 ...ipedia.org/wiki/Kernramp_van_Tsjernobyl"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.566 ...ipedia.org/wiki/Kernramp_van_Tsjernobyl"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (170.20927pt too wide) in paragraph at lines 565--566
[]\T1/phv/m/n/10 , @on-li-ne-wikiTjer-no-byl, ALTau-thor = au-thor, AL-Tedi-tor
 = edi-tor, title = title, date = date, url = "https://nl.wikipedia.org/wiki/Ke
rnramp$[]\OML/cmm/m/it/10 an[]sjernobyl$ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.567 ...incidenten-en-kernongevallen/tsjernobyl"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.567 ...incidenten-en-kernongevallen/tsjernobyl"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (64.92336pt too wide) in paragraph at lines 566--567
[]\T1/phv/m/n/10 , @on-li-ne-ri-vm-Tjer-no-byl, ALTau-thor = au-thor, AL-Tedi-t
or = edi-tor, title = title, date = date, url = "https://www.rivm.nl/straling-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.568 ...ing/599/Tsjernobyl-als-Nederlandse-ramp"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.568 ...ing/599/Tsjernobyl-als-Nederlandse-ramp"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.570 ...ic.nl/het-leven-in-tsjernobyl-gaat-door"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.570 ...ic.nl/het-leven-in-tsjernobyl-gaat-door"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.576 ...ampen/tsjernobyl-atoomhel-bij-reactor-4"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.576 ...ampen/tsjernobyl-atoomhel-bij-reactor-4"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.577 ...-spookstad-van-tsjernobyl-30-jaar-later"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.577 ...-spookstad-van-tsjernobyl-30-jaar-later"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.581 ...na-tsjernobyl-liggen-branden-op-de-loer"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.581 ...na-tsjernobyl-liggen-branden-op-de-loer"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.582 ...-tsjernobyl-het-dilemma-van-scherbitsky"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.582 ...-tsjernobyl-het-dilemma-van-scherbitsky"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (41.6829pt too wide) in paragraph at lines 581--582
\T1/phv/m/n/10 = "https://www.kivi.nl/afdelingen/risicobeheer-en-techniek/colum
ns/kernramp-tsjernobyl-het-dilemma-van-scherbitsky 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.584 ...6/in-de-ban-van-tsjernobyl-vooruitblik/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.584 ...6/in-de-ban-van-tsjernobyl-vooruitblik/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (13.1596pt too wide) in paragraph at lines 582--584
[]\T1/phv/m/n/10 , Joer-na-lis-tiek, en-ter-tain-ment en de waar-heid @on-li-n-
e-du-m-a-rey04062020verhaalTjernobylWaarheid, ALTau-
 []

[17]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.588 ...n-ontoegankelijke-ruimte-in-tsjernobyl/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.588 ...n-ontoegankelijke-ruimte-in-tsjernobyl/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.592 .../www.kernenergieinnederland.nl/node/308"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.592 .../www.kernenergieinnederland.nl/node/308"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (8.12971pt too wide) in paragraph at lines 591--592
\T1/phv/m/n/10 thor = au-thor, AL-Tedi-tor = edi-tor, title = title, date = dat
e, url = "https://www.kernenergieinnederland.nl/node/308 
 []

! Misplaced alignment tab character &.
l.593 ...www.google.com/maps/d/u/0/viewer?ie=UTF8&
                                                  hl=nl&t=h&msa=0&ll=51.3889...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.593 ...ogle.com/maps/d/u/0/viewer?ie=UTF8&hl=nl&
                                                  t=h&msa=0&ll=51.388923%2C3...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.593 ....com/maps/d/u/0/viewer?ie=UTF8&hl=nl&t=h&
                                                  msa=0&ll=51.388923%2C30.09...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.593 ...aps/d/u/0/viewer?ie=UTF8&hl=nl&t=h&msa=0&
                                                  ll=51.388923%2C30.099792&s...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.595 ...nl/mens-schadelijker-natuur-tsjernobyl/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.595 ...nl/mens-schadelijker-natuur-tsjernobyl/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (83.16939pt too wide) in paragraph at lines 592--595
\T1/phv/m/n/10 de om-ge-ving @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = ed
i-tor, title = title, date = date, url = "https://www.animalstoday.nl/mens-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.600 ....net/kernramp-van-tsjernobyl-1986/8769/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.600 ....net/kernramp-van-tsjernobyl-1986/8769/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.610 ...eid-als-prioriteit/tsjernobyl-de-feiten"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.610 ...eid-als-prioriteit/tsjernobyl-de-feiten"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.614 ...-buitenland/1986-kernongeval-tsjernobyl"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.614 ...-buitenland/1986-kernongeval-tsjernobyl"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (9.2799pt too wide) in paragraph at lines 610--614
\T1/phv/m/n/10 ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, title = title, date
 = date, url = "https://fanc.fgov.be/nl/noodsituaties/zware-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.621 ...f-anvs/2019/02/de-lessen-van-tsjernobyl"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.621 ...f-anvs/2019/02/de-lessen-van-tsjernobyl"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (5.16415pt too wide) in paragraph at lines 614--621
\T1/phv/m/n/10 De jour-na-lis-tieke waar-heid van de koude oor-log De les-sen v
an @on-li-ne-a-rends-wol-ters062019lessenTjernobyl,
 []


Overfull \hbox (23.23965pt too wide) in paragraph at lines 614--621
\T1/phv/m/n/10 ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, title = title, date
 = date, url = "https://magazines.autoriteitnvs.nl/nieuwsbrief-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.628 ...-content/uploads/2020/06/TSJERNOBYL.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.628 ...-content/uploads/2020/06/TSJERNOBYL.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (41.29733pt too wide) in paragraph at lines 621--628
\T1/phv/m/n/10 Tedi-tor = edi-tor, title = title, date = date, url = "https://w
isenederland.nl/wp-content/uploads/2020/06/TSJERNOBYL.pdf 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.638 ...oactieve-spinazie-tsjernobyl-in-holland"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.638 ...oactieve-spinazie-tsjernobyl-in-holland"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.646 ...amboanthos.nl/boek/nacht-in-tsjernobyl/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.646 ...amboanthos.nl/boek/nacht-in-tsjernobyl/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.649 ...antistralingskoepel-tsjernobyl-bijna-af"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.649 ...antistralingskoepel-tsjernobyl-bijna-af"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[18]
! Missing $ inserted.
<inserted text> 
                $
l.685 ...tp://essay.utwente.nl/63353/1/Verschuur,_
                                                  W._-_s0123617_(verslag).pd...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Double subscript.
l.685 ...essay.utwente.nl/63353/1/Verschuur,_W._-_
                                                  s0123617_(verslag).pdf"},}
I treat `x_1_2' essentially like `x_1{}_2'.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.685 .../Verschuur,_W._-_s0123617_(verslag).pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.685 .../Verschuur,_W._-_s0123617_(verslag).pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.685 .../Verschuur,_W._-_s0123617_(verslag).pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.686 ...ps://www.paperlessarchives.com/chernobyl_
                                                  nuclear_accident_doc.html"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.686 ...com/chernobyl_nuclear_accident_doc.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.686 ...com/chernobyl_nuclear_accident_doc.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.686 ...com/chernobyl_nuclear_accident_doc.html"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.687 ...gov/main/publications/external/technical_
                                                  reports/pnnl-13294.pdf"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.687 ...ternal/technical_reports/pnnl-13294.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.687 ...ternal/technical_reports/pnnl-13294.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.687 ...ternal/technical_reports/pnnl-13294.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.688 ...s.ws/scannapuerci/demauroinnovation.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.688 ...s.ws/scannapuerci/demauroinnovation.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.689 ...b.iaea.org/MTCD/publications/PDF/Pub1312_
                                                  web.pdf"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.689 ...g/MTCD/publications/PDF/Pub1312_web.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.689 ...g/MTCD/publications/PDF/Pub1312_web.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.689 ...g/MTCD/publications/PDF/Pub1312_web.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

[19]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.731 ...away/classes/188/winter04/therac-25.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.731 ...away/classes/188/winter04/therac-25.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (207.0184pt too wide) in paragraph at lines 730--731
[]\T1/phv/m/n/10 sheets @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor
, title = title, date = date, url = "https://web.cs.ucdavis.edu/ rogaway/classe
s/188/winter04/therac-
 []

! Missing $ inserted.
<inserted text> 
                $
l.732 .../people.physics.carleton.ca/~drogers/egs_
                                                  windows_collection/tsld008...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.732 ...gers/egs_windows_collection/tsld008.htm"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.732 ...gers/egs_windows_collection/tsld008.htm"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.732 ...gers/egs_windows_collection/tsld008.htm"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (235.17635pt too wide) in paragraph at lines 731--732
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://people.physics.carleton.ca/ drogers/egs
$[]\OML/cmm/m/it/10 indows[]ollection=tsld\OT1/cmr/m/n/10 008\OML/cmm/m/it/10 :
htm$ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.733 ...https://en.wikipedia.org/wiki/Therac-25"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.733 ...https://en.wikipedia.org/wiki/Therac-25"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (51.04153pt too wide) in paragraph at lines 732--733
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://en.wikipedia.org/wiki/Therac-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.734 ...s://www.youtube.com/watch?v=-7gVqBY52MY"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.734 ...s://www.youtube.com/watch?v=-7gVqBY52MY"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (51.44191pt too wide) in paragraph at lines 733--734
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.youtube.com/watch?v=-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.736 ...m/blog/bug-day-race-condition-therac-25"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.736 ...m/blog/bug-day-race-condition-therac-25"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.738 ...allen/courses/cs260/readings/therac.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.738 ...allen/courses/cs260/readings/therac.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.740 ...0/26/killed-by-a-machine-the-therac-25/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.740 ...0/26/killed-by-a-machine-the-therac-25/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.742 ...wrapped.utexas.edu/case-study/therac-25"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.742 ...wrapped.utexas.edu/case-study/therac-25"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (105.181pt too wide) in paragraph at lines 740--742
[]\T1/phv/m/n/10 , ar-ti-kel @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = ed
i-tor, title = title, date = date, url = "https://ethicsunwrapped.utexas.edu/ca
se-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.744 ...wtf.com/articles/the-therac-25-incident"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.744 ...wtf.com/articles/the-therac-25-incident"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.746 ...ne/co/2017/11/mco2017110008/13rRUxAStVR"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.746 ...ne/co/2017/11/mco2017110008/13rRUxAStVR"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (10.20648pt too wide) in paragraph at lines 744--746
\T1/phv/m/n/10 = title, date = date, url = "https://www.computer.org/csdl/magaz
ine/co/2017/11/mco2017110008/13rRUxAStVR 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.748 ...cs240/old/sp2014/readings/therac-25.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.748 ...cs240/old/sp2014/readings/therac-25.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.750 ...,	url = {"http://computingcases.org/case_
                                                  materials/therac/case_hist...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.752 ...e-killer-radiation-machine-8a05e0705d5b"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.752 ...e-killer-radiation-machine-8a05e0705d5b"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.752 ...e-killer-radiation-machine-8a05e0705d5b"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.752 ...e-killer-radiation-machine-8a05e0705d5b"}
                                                  ,}
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.752 ...e-killer-radiation-machine-8a05e0705d5b"}
                                                  ,}
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (1208.95033pt too wide) in paragraph at lines 748--752
[]\T1/phv/m/n/10 , ge-schie-de-nis @on-lineID, ALTau-thor = au-thor, AL-Tedi-to
r = edi-tor, title = title, date = date, url = "http://computingcases.org/case$
[]\OML/cmm/m/it/10 aterials=therac=case[]istory=Caseartikel\OT1/cmr/m/n/10 @\OM
L/cmm/m/it/10 online[]$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.754 ...date},	url = {"http://www.ccnr.org/fatal_
                                                  dose.html"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.754 ...= {"http://www.ccnr.org/fatal_dose.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.754 ...= {"http://www.ccnr.org/fatal_dose.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.754 ...= {"http://www.ccnr.org/fatal_dose.html"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.756 ...tp://sunnyday.mit.edu/papers/therac.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.756 ...tp://sunnyday.mit.edu/papers/therac.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (108.7405pt too wide) in paragraph at lines 754--756
[]\T1/phv/m/n/10 , rap-port @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi
-tor, title = title, date = date, url = "http://sunnyday.mit.edu/papers/therac.
pdf 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.757 ...https://pubmed.ncbi.nlm.nih.gov/101762/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.757 ...https://pubmed.ncbi.nlm.nih.gov/101762/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (72.15114pt too wide) in paragraph at lines 756--757
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://pubmed.ncbi.nlm.nih.gov/101762/ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.759 .../08fa-e6998/sched/readings/therac25.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.759 .../08fa-e6998/sched/readings/therac25.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.760 ...s://ieeexplore.ieee.org/document/274940"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.760 ...s://ieeexplore.ieee.org/document/274940"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (89.4911pt too wide) in paragraph at lines 759--760
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://ieeexplore.ieee.org/document/274940 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.762 ...-engineering-systems-wang-ph-d-cre-acb/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.762 ...-engineering-systems-wang-ph-d-cre-acb/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.764 ...du/~cse470/Public/Handouts/Therac/Therac_
                                                  2.html"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.764 ...70/Public/Handouts/Therac/Therac_2.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.764 ...70/Public/Handouts/Therac/Therac_2.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.764 ...70/Public/Handouts/Therac/Therac_2.html"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.766 ....edu/~cis/cista/445/Lectures/Therac.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.766 ....edu/~cis/cista/445/Lectures/Therac.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[20]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.768 ...y.edu/~jdalbey/SWE/Papers/THERAC25.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.768 ...y.edu/~jdalbey/SWE/Papers/THERAC25.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.770 ...//bohr.wlu.ca/cp164/therac/therac25.htm"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.770 ...//bohr.wlu.ca/cp164/therac/therac25.htm"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (107.02847pt too wide) in paragraph at lines 768--770
\T1/phv/m/n/10 lijk-heid @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-to
r, title = title, date = date, url = "https://bohr.wlu.ca/cp164/therac/therac25
.htm 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.772 ...10/08/08/therac-25-radiation-overdoses/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.772 ...10/08/08/therac-25-radiation-overdoses/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.774 ....orst.edu/ethics/papers/Therac.Huff.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.774 ....orst.edu/ethics/papers/Therac.Huff.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (184.11996pt too wide) in paragraph at lines 772--774
[]\T1/phv/m/n/10 , case study @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = e
di-tor, title = title, date = date, url = "https://dusk.geo.orst.edu/ethics/pap
ers/Therac.Huff.pdf 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.775 ...ry.com/fieldatlas/case-study-therac-25/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.775 ...ry.com/fieldatlas/case-study-therac-25/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (90.31091pt too wide) in paragraph at lines 774--775
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://embeddedartistry.com/fieldatlas/case-
 []

! Missing $ inserted.
<inserted text> 
                $
l.777 ...{"https://www.sebokwiki.org/wiki/Medical_
                                                  Radiation"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.777 ...ww.sebokwiki.org/wiki/Medical_Radiation"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.777 ...ww.sebokwiki.org/wiki/Medical_Radiation"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.777 ...ww.sebokwiki.org/wiki/Medical_Radiation"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (156.24895pt too wide) in paragraph at lines 775--777
[]\T1/phv/m/n/10 , case study @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = e
di-tor, title = title, date = date, url = "https://www.sebokwiki.org/wiki/Medic
al$[]\OML/cmm/m/it/10 adiation$ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.779 ...m/science/article/pii/S1474667017448245"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.779 ...m/science/article/pii/S1474667017448245"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (45.3877pt too wide) in paragraph at lines 777--779
\T1/phv/m/n/10 AL-Tedi-tor = edi-tor, title = title, date = date, url = "https:
//www.sciencedirect.com/science/article/pii/S1474667017448245 
 []

! Missing $ inserted.
<inserted text> 
                $
l.781 ...magsilva.pro.br/apps/wiki/testing/Therac_
                                                  25"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.781 ...ilva.pro.br/apps/wiki/testing/Therac_25"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.781 ...ilva.pro.br/apps/wiki/testing/Therac_25"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.781 ...ilva.pro.br/apps/wiki/testing/Therac_25"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.783 ...tions/pexis/readings/submod3/therac.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.783 ...tions/pexis/readings/submod3/therac.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (13.57169pt too wide) in paragraph at lines 781--783
[]\T1/phv/m/n/10 , rap-port @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi
-tor, title = title, date = date, url = "http://csel.eng.ohio-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.785 ...rope.com/en/encyclopedia/Therac-25.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.785 ...rope.com/en/encyclopedia/Therac-25.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.787 ...ps://pvs-studio.com/en/blog/posts/0438/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.787 ...ps://pvs-studio.com/en/blog/posts/0438/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.788 ...-mitigations/therac-25-case-study-VmQPa"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.788 ...-mitigations/therac-25-case-study-VmQPa"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (78.6312pt too wide) in paragraph at lines 787--788
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.coursera.org/lecture/software-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.789 ...c9c6024cf95aadae8b7edf1160e0e4500410eb9"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.789 ...c9c6024cf95aadae8b7edf1160e0e4500410eb9"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (86.72119pt too wide) in paragraph at lines 788--789
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.semanticscholar.org/paper/The-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.790 ...//news.ycombinator.com/item?id=21679287"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.790 ...//news.ycombinator.com/item?id=21679287"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (108.95107pt too wide) in paragraph at lines 789--790
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://news.ycombinator.com/item?id=21679287 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.792 ...ooks.org/wiki/Professionalism/Therac-25"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.792 ...ooks.org/wiki/Professionalism/Therac-25"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (144.94089pt too wide) in paragraph at lines 790--792
[]\T1/phv/m/n/10 , wiki @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor
, title = title, date = date, url = "https://en.wikibooks.org/wiki/Professional
ism/Therac-
 []

! Misplaced alignment tab character &.
l.794 ...u.edu/viewdoc/download?doi=10.1.1.96.369&
                                                  rep=rep1&type=pdf"},}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.794 ...wdoc/download?doi=10.1.1.96.369&rep=rep1&
                                                  type=pdf"},}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.794 ...oad?doi=10.1.1.96.369&rep=rep1&type=pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.794 ...oad?doi=10.1.1.96.369&rep=rep1&type=pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (298.9186pt too wide) in paragraph at lines 792--794
[]\T1/phv/m/n/10 , ana-lyse @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi
-tor, title = title, date = date, url = "https://citeseerx.ist.psu.edu/viewdoc/
download?doi=10.1.1.96.369rep=rep1type=pdf 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.796 ...estigation-therac-25-accidents-abstract"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.796 ...estigation-therac-25-accidents-abstract"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (132.15088pt too wide) in paragraph at lines 794--796
[]\T1/phv/m/n/10 , sa-men-vat-ting @on-lineID, ALTau-thor = au-thor, AL-Tedi-to
r = edi-tor, title = title, date = date, url = "https://onlineethics.org/cases/
resources-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.798 .../therac-25/id1046978749?i=1000514115050"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.798 .../therac-25/id1046978749?i=1000514115050"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (133.49066pt too wide) in paragraph at lines 796--798
[]\T1/phv/m/n/10 , pod-cast @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi
-tor, title = title, date = date, url = "https://podcasts.apple.com/gb/podcast/
therac-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.800 ...www.cas.mcmaster.ca/~se4d03/therac.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.800 ...www.cas.mcmaster.ca/~se4d03/therac.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.802 ...te.edu/~bieman/CS314/Notes/therac25.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.802 ...te.edu/~bieman/CS314/Notes/therac25.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.804 ...all2010/Literature/Therac25-Leveson.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.804 ...all2010/Literature/Therac25-Leveson.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.821 ...Semester/Week13-2/PPT-Text/Slide13.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.821 ...Semester/Week13-2/PPT-Text/Slide13.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (117.75912pt too wide) in paragraph at lines 821--821
[]\T1/phv/m/n/10 @onlineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, title 
= title, date = date, url = "https://hci.cs.siue.edu/NSF/Files/Semester/Week13-

 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.823 ....com/InstructorBlogs/Blog-Therac-25.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.823 ....com/InstructorBlogs/Blog-Therac-25.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.825 .../www.erenkrantz.com/Geeks/Therac-25/Side_
                                                  bar_5.html"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.825 ...ntz.com/Geeks/Therac-25/Side_bar_5.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.825 ...ntz.com/Geeks/Therac-25/Side_bar_5.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.825 ...ntz.com/Geeks/Therac-25/Side_bar_5.html"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

[21]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.826 ...	url = {"https://bandcamp.com/therac-25"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.826 ...	url = {"https://bandcamp.com/therac-25"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (24.03189pt too wide) in paragraph at lines 825--826
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://bandcamp.com/therac-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.827 .../09/21/blog-post-8-therac-25-accidents/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.827 .../09/21/blog-post-8-therac-25-accidents/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (4.89188pt too wide) in paragraph at lines 826--827
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://sites.nd.edu/brent-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.828 ...tps://europepmc.org/article/med/4035720"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.828 ...tps://europepmc.org/article/med/4035720"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (83.25089pt too wide) in paragraph at lines 827--828
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://europepmc.org/article/med/4035720 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.829 ..."https://itlaw.wikia.org/wiki/Therac-25"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.829 ..."https://itlaw.wikia.org/wiki/Therac-25"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (40.22168pt too wide) in paragraph at lines 828--829
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://itlaw.wikia.org/wiki/Therac-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.830 ...point.com/therac-25-bad-software-kills/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.830 ...point.com/therac-25-bad-software-kills/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (38.77159pt too wide) in paragraph at lines 829--830
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.sitepoint.com/therac-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.831 ...ged-code-i-dont-understand-the-explanat"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.831 ...ged-code-i-dont-understand-the-explanat"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (134.25096pt too wide) in paragraph at lines 830--831
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://sqa.stackexchange.com/questions/9798/as
king-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.832 ...en-342/activities/TheracIndividual.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.832 ...en-342/activities/TheracIndividual.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (13.3619pt too wide) in paragraph at lines 831--832
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "http://www.se.rit.edu/ swen-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.833 ...neering-disasters-deadly-zaps-therac-25"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.833 ...neering-disasters-deadly-zaps-therac-25"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (75.76149pt too wide) in paragraph at lines 832--833
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.designnews.com/automation-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.836 ...te.edu/~bieman/CS314/Notes/therac25.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.836 ...te.edu/~bieman/CS314/Notes/therac25.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.837 ...all2010/Literature/Therac25-Leveson.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.837 ...all2010/Literature/Therac25-Leveson.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (107.71112pt too wide) in paragraph at lines 836--837
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.cs.ucf.edu/ dcm/Teaching/COP4600-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.838 ...estigation-therac-25-accidents-abstract"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.838 ...estigation-therac-25-accidents-abstract"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (71.01152pt too wide) in paragraph at lines 837--838
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://onlineethics.org/cases/resources-
 []

! Misplaced alignment tab character &.
l.839 ...u.edu/viewdoc/download?doi=10.1.1.96.369&
                                                  rep=rep1&type=pdf"},}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.839 ...wdoc/download?doi=10.1.1.96.369&rep=rep1&
                                                  type=pdf"},}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.839 ...oad?doi=10.1.1.96.369&rep=rep1&type=pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.839 ...oad?doi=10.1.1.96.369&rep=rep1&type=pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (262.3389pt too wide) in paragraph at lines 838--839
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://citeseerx.ist.psu.edu/viewdoc/download?
doi=10.1.1.96.369rep=rep1type=pdf 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.840 ...tions/pexis/readings/submod3/therac.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.840 ...tions/pexis/readings/submod3/therac.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.841 ....orst.edu/ethics/papers/Therac.Huff.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.841 ....orst.edu/ethics/papers/Therac.Huff.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (134.86037pt too wide) in paragraph at lines 840--841
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://dusk.geo.orst.edu/ethics/papers/Therac.
Huff.pdf 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.842 ....edu/~cis/cista/445/Lectures/Therac.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.842 ....edu/~cis/cista/445/Lectures/Therac.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (14.72205pt too wide) in paragraph at lines 841--842
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.cs.jhu.edu/ cis/-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.843 .../08fa-e6998/sched/readings/therac25.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.843 .../08fa-e6998/sched/readings/therac25.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (81.99117pt too wide) in paragraph at lines 842--843
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "http://www1.cs.columbia.edu/ junfeng/08fa-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.844 ...tp://sunnyday.mit.edu/papers/therac.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.844 ...tp://sunnyday.mit.edu/papers/therac.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (74.64105pt too wide) in paragraph at lines 843--844
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "http://sunnyday.mit.edu/papers/therac.pdf 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.845 ...cs240/old/sp2014/readings/therac-25.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.845 ...cs240/old/sp2014/readings/therac-25.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (179.7799pt too wide) in paragraph at lines 844--845
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://web.stanford.edu/class/cs240/old/sp2014
/readings/therac-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.863 ...teer-tesla-autopilot-into-oncoming-lane"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.863 ...teer-tesla-autopilot-into-oncoming-lane"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.865 ...tps://www.tesla.com/VehicleSafetyReport"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.865 ...tps://www.tesla.com/VehicleSafetyReport"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.867 ...strong-improvement-autopilot-accidents/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.867 ...strong-improvement-autopilot-accidents/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[22]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.870 ...com/story/tesla-model-x-hack-bluetooth/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.870 ...com/story/tesla-model-x-hack-bluetooth/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.872 ...l-s-model-x-touch-screen-safety-issues/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.872 ...l-s-model-x-touch-screen-safety-issues/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.874 ...l-tesla-model-x-within-minutes/79406553"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.874 ...l-tesla-model-x-within-minutes/79406553"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (23.71645pt too wide) in paragraph at lines 872--874
\T1/phv/m/n/10 title = title, date = date, url = "https://cio.economictimes.ind
iatimes.com/news/digital-security/security-researchers-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.877 ...its-not-pretty-for-fsd/?sh=6905e7d4dc55"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.877 ...its-not-pretty-for-fsd/?sh=6905e7d4dc55"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (37.30931pt too wide) in paragraph at lines 874--877
\T1/phv/m/n/10 au-thor, AL-Tedi-tor = edi-tor, title = title, date = date, url 
= "https://www.forbes.com/sites/bradtempleton/2019/09/06/ntsb-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.879 ...n-unintended-acceleration-driver-error/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.879 ...n-unintended-acceleration-driver-error/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (7.35808pt too wide) in paragraph at lines 877--879
[]\T1/phv/m/n/10 , de in-vloed van de be-stuur-der bij te-sla on-ge-luk @on-li-
n-e-Dic-key08012021SuddenTeslaAcceleration, ALTau-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.881 ...-in-tesla-backup-gateway/d/d-id/1339462"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.881 ...-in-tesla-backup-gateway/d/d-id/1339462"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.883 ...d-attack-crashes-tesla-driver-interface"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.883 ...d-attack-crashes-tesla-driver-interface"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.885 ...las-autopilot-into-switching-lanes.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.885 ...las-autopilot-into-switching-lanes.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.888 .../21154502/tesla-autopilot-fatal-crashes"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.888 .../21154502/tesla-autopilot-fatal-crashes"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.892 ....com/news/a29369387/nhtsa-tesla-safety/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.892 ....com/news/a29369387/nhtsa-tesla-safety/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (60.84938pt too wide) in paragraph at lines 888--892
\T1/phv/m/n/10 ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, title = title, date
 = date, url = "https://www.caranddriver.com/news/a29369387/nhtsa-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.896 ...ials-probe-tesla-battery-cooling-system"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.896 ...ials-probe-tesla-battery-cooling-system"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (16.16296pt too wide) in paragraph at lines 892--896
\T1/phv/m/n/10 "https://www.latimes.com/business/story/2020-07-01/federal-safet
y-officials-probe-tesla-battery-cooling-system 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.898 ...://www.bbc.com/news/technology-51645566"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.898 ...://www.bbc.com/news/technology-51645566"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.901 ...ustomers-personal-data-passwords-report"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.901 ...ustomers-personal-data-passwords-report"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (7.93002pt too wide) in paragraph at lines 898--901
\T1/phv/m/n/10 au-thor, AL-Tedi-tor = edi-tor, title = title, date = date, url 
= "https://www.thedrive.com/news/33272/tesla-discarded-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.903 ...sh-silicon-valley-autopilot-mode-report"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.903 ...sh-silicon-valley-autopilot-mode-report"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.906 ...-case-illustrates-danger-insider-threat"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.906 ...-case-illustrates-danger-insider-threat"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (105.70459pt too wide) in paragraph at lines 903--906
[]\T1/phv/m/n/10 , vei-lig-heids-vraag-stuk: ransom-ware vei-lig-heids-vraag-st
uk: me-de-wer-ker in de fout @on-li-nec-brook06082021TeslaInsideDataThreft,
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.907 ...me-model-3-production-report-1846353323"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.907 ...me-model-3-production-report-1846353323"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.913 ...019-tesla-model-3-survey/autopilot.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.913 ...019-tesla-model-3-survey/autopilot.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[23]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.915 ...i-thwarts-russian-cybersecurity-attack/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.915 ...i-thwarts-russian-cybersecurity-attack/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.917 ...y-was-playing-videogame-ntsb-2020-02-25"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.917 ...y-was-playing-videogame-ntsb-2020-02-25"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (1.97386pt too wide) in paragraph at lines 915--917
\T1/phv/m/n/10 "https://www.marketwatch.com/story/apple-engineer-killed-in-tesl
a-suv-crash-on-silicon-valley-freeway-was-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.918 ...nce-2011-have-been-recovered-2018-08-10"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.918 ...nce-2011-have-been-recovered-2018-08-10"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (3.33475pt too wide) in paragraph at lines 917--918
\T1/phv/m/n/10 date, url = "https://www.marketwatch.com/story/nearly-100-of-tes
las-stolen-in-the-us-since-2011-have-been-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.920 .../2019/03/25/white-hats-hack-tesla-keep/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.920 .../2019/03/25/white-hats-hack-tesla-keep/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.922 ...ecurity-research-in-bug-bounty-program/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.922 ...ecurity-research-in-bug-bounty-program/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.924 ...in-minutes-using-software-flaws-a-15462"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.924 ...in-minutes-using-software-flaws-a-15462"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.926 ...how/news/tesla-ev-appeal-loyalty-study/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.926 ...how/news/tesla-ev-appeal-loyalty-study/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.927 ...://www.bbc.com/news/technology-56156801"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.927 ...://www.bbc.com/news/technology-56156801"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.937 ...d-to-run-cryptocurrency-mining-malware/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.937 ...d-to-run-cryptocurrency-mining-malware/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (30.57271pt too wide) in paragraph at lines 936--937
\T1/phv/m/n/10 "https://arstechnica.com/information-technology/2018/02/tesla-cl
oud-resources-are-hacked-to-run-cryptocurrency-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.938 ...el-y-ev-safety-quality-issues-problems/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.938 ...el-y-ev-safety-quality-issues-problems/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (69.63121pt too wide) in paragraph at lines 937--938
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.motortrend.com/news/tesla-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.939 ...r-tesla-model-s-using-autopilot-system/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.939 ...r-tesla-model-s-using-autopilot-system/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (85.42114pt too wide) in paragraph at lines 938--939
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://securityledger.com/2019/04/hackers-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.940 ...-production-in-california-until-march-7"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.940 ...-production-in-california-until-march-7"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (56.29152pt too wide) in paragraph at lines 939--940
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.pcmag.com/news/report-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.941 ...elf-inspection-after-chinese-regulators"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.941 ...elf-inspection-after-chinese-regulators"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (164.68036pt too wide) in paragraph at lines 940--941
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.scmp.com/business/money/article/312
1173/tesla-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.942 ...covers-Cloud-Related-Exposures-at-Tesla"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.942 ...covers-Cloud-Related-Exposures-at-Tesla"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (218.47018pt too wide) in paragraph at lines 941--942
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.businesswire.com/news/home/20180220
005222/en/RedLock-
 []


Overfull \hbox (47.37357pt too wide) in paragraph at lines 941--942
\T1/phv/m/n/10 Releases-Cloud-Security-Report-Highlighting-Focus-on-Shared-Resp
onsibilities-Uncovers-Cloud-Related-Exposures-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.943 ...nds/highlights-automotive-trends-report"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.943 ...nds/highlights-automotive-trends-report"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (36.26173pt too wide) in paragraph at lines 942--943
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.epa.gov/automotive-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.944 ...-for-finding-security-bugs-Model-3.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.944 ...-for-finding-security-bugs-Model-3.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (218.0301pt too wide) in paragraph at lines 943--944
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.livemint.com/Companies/o2QLbtJc9EQ7
ZcpxqgFbBP/Teslas-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.945 ...porting-unsafe-conditions-lawsuit-says/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.945 ...porting-unsafe-conditions-lawsuit-says/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (99.27325pt too wide) in paragraph at lines 944--945
[]\T1/phv/m/n/10 , @on-li-nee-vans11062018, ALTau-thor = au-thor, AL-Tedi-tor =
 edi-tor, title = title, date = date, url = "https://revealnews.org/blog/tesla-

 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.946 ...reakable-encryption-worse-data-leakage/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.946 ...reakable-encryption-worse-data-leakage/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (74.69115pt too wide) in paragraph at lines 945--946
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://heimdalsecurity.com/blog/security-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.947 ...ch-revealed-in-redlock-security-report/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.947 ...ch-revealed-in-redlock-security-report/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (50.2417pt too wide) in paragraph at lines 946--947
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.eweek.com/cloud/tesla-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.948 ...-driving-autopilot-beta-software-update"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.948 ...-driving-autopilot-beta-software-update"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.949 ...gally/Downloads/applsci-10-02749-v2.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.949 ...gally/Downloads/applsci-10-02749-v2.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (67.65166pt too wide) in paragraph at lines 948--949
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "file:///C:/Users/gally/Downloads/applsci-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.950 ...ne-and-what-we-should-all-learn-from-it"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.950 ...ne-and-what-we-should-all-learn-from-it"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.951 ...nardmarr.com/default.asp?contentID=1251"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.951 ...nardmarr.com/default.asp?contentID=1251"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (126.49042pt too wide) in paragraph at lines 950--951
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://bernardmarr.com/default.asp?contentID=1
251 
 []

[24]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.952 ...could-accelerate-autopilot-development/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.952 ...could-accelerate-autopilot-development/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (79.91127pt too wide) in paragraph at lines 951--952
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://arstechnica.com/cars/2019/10/how-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.953 ...las-deep-learning-at-scale-7eed85b235d3"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.953 ...las-deep-learning-at-scale-7eed85b235d3"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.954 ...gally/Downloads/applsci-10-02749-v2.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.954 ...gally/Downloads/applsci-10-02749-v2.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (67.65166pt too wide) in paragraph at lines 953--954
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "file:///C:/Users/gally/Downloads/applsci-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.956 ...g-artificial-intelligence-and-big-data/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.956 ...g-artificial-intelligence-and-big-data/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.957 ...-artificial-intelligence-its-operations"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.957 ...-artificial-intelligence-its-operations"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.958 ...elligence-and-big-data/?sh=5e396aa24270"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.958 ...elligence-and-big-data/?sh=5e396aa24270"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (16.53297pt too wide) in paragraph at lines 957--958
\T1/phv/m/n/10 = "https://www.forbes.com/sites/bernardmarr/2018/01/08/the-amazi
ng-ways-tesla-is-using-artificial-intelligence-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.959 ...9/self-driving-tesla-car-deep-learning/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.959 ...9/self-driving-tesla-car-deep-learning/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.960 ...og/teslas-new-ai-for-self-driving-cars/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.960 ...og/teslas-new-ai-for-self-driving-cars/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.961 ...g-artificial-intelligence-and-big-data/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.961 ...g-artificial-intelligence-and-big-data/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (41.04175pt too wide) in paragraph at lines 960--961
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.techiexpert.com/how-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.967 ...sla-full-self-driving-launch/index.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.967 ...sla-full-self-driving-launch/index.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.968 ...ilot-crash-michigan-nhtsa-investigation"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.968 ...ilot-crash-michigan-nhtsa-investigation"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.969 ...-lethal-tesla-car-crash-in-texas-378950"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.969 ...-lethal-tesla-car-crash-in-texas-378950"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.970 ...-tesla-crashes-what-s-a-regulator-to-do"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.970 ...-tesla-crashes-what-s-a-regulator-to-do"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (9.66481pt too wide) in paragraph at lines 969--970
\T1/phv/m/n/10 date, url = "https://www.bloomberg.com/news/newsletters/2021-06-
23/hyperdrive-daily-after-30-tesla-crashes-
 []

! Missing $ inserted.
<inserted text> 
                $
l.971 ... = {"https://en.wikipedia.org/wiki/Tesla_
                                                  Autopilot"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.971 ...//en.wikipedia.org/wiki/Tesla_Autopilot"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.971 ...//en.wikipedia.org/wiki/Tesla_Autopilot"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.971 ...//en.wikipedia.org/wiki/Tesla_Autopilot"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (149.9052pt too wide) in paragraph at lines 970--971
[]\T1/phv/m/n/10 , @on-li-ne-wiki-Te-slaAu-to-pi-lot, ALTau-thor = au-thor, AL-
Tedi-tor = edi-tor, title = title, date = date, url = "https://en.wikipedia.org
/wiki/Tesla$[]\OML/cmm/m/it/10 utopilot$ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.972 ...gy-innovation/automated-vehicles-safety"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.972 ...gy-innovation/automated-vehicles-safety"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.973 ...s-reveals-how-autopilot-can-be-tricked/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.973 ...s-reveals-how-autopilot-can-be-tricked/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (26.68523pt too wide) in paragraph at lines 972--973
\T1/phv/m/n/10 date, url = "https://www.caradvice.com.au/947080/elon-musk-respo
nds-to-deadly-texas-tesla-crash-as-consumer-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.974 ...could-have-prevented-fatal-tesla-crash/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.974 ...could-have-prevented-fatal-tesla-crash/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.976 ...nomous-vehicles-as-a-killer-app-for-ai/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.976 ...nomous-vehicles-as-a-killer-app-for-ai/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.977 ...story/2020-02-24/autopilot-data-secrecy"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.977 ...story/2020-02-24/autopilot-data-secrecy"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.978 ...id=9844cae0-aa5a-45a5-988f-7f02fa5709c1"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.978 ...id=9844cae0-aa5a-45a5-988f-7f02fa5709c1"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.979 ...chnology/2020/10/21/tesla-self-driving/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.979 ...chnology/2020/10/21/tesla-self-driving/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.980 ...sh-reminds-us-that-robots-arent-perfect"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.980 ...sh-reminds-us-that-robots-arent-perfect"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.981 ...esla-owner-is-dead-because-of-autopilot"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.981 ...esla-owner-is-dead-because-of-autopilot"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.982 ...ther-ai-development-lesson-b2ce3dbb4444"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.982 ...ther-ai-development-lesson-b2ce3dbb4444"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (15.15497pt too wide) in paragraph at lines 981--982
\T1/phv/m/n/10 = date, url = "https://towardsdatascience.com/another-self-drivi
ng-car-accident-another-ai-development-lesson-
 []

[25]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.983 ...ful-death-if-car-is-driving-itself.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.983 ...ful-death-if-car-is-driving-itself.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.984 ...a-car-mistake-a-truck-with-a-bright-sky"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.984 ...a-car-mistake-a-truck-with-a-bright-sky"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (4.73497pt too wide) in paragraph at lines 983--984
\T1/phv/m/n/10 = date, url = "https://ai.stackexchange.com/questions/1488/why-d
id-a-tesla-car-mistake-a-truck-with-a-bright-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.985 ...-autopilot-and-how-adas-will-save-lives"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.985 ...-autopilot-and-how-adas-will-save-lives"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.986 ...jipitec.eu/issues/jipitec-9-3-2018/4806"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.986 ...jipitec.eu/issues/jipitec-9-3-2018/4806"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.987 ...safety19/presentations/lunch/harkey.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.987 ...safety19/presentations/lunch/harkey.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.988 ...and-amazon-backed-the-wrong-technology/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.988 ...and-amazon-backed-the-wrong-technology/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (26.66191pt too wide) in paragraph at lines 987--988
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://thepressfree.com/have-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.989 ...n-backed-the-wrong-technology-1.4626749"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.989 ...n-backed-the-wrong-technology-1.4626749"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (146.63069pt too wide) in paragraph at lines 988--989
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.irishtimes.com/business/innovation/
robotaxis-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.990 ...it-wrong-in-fatal-crash-20160704-gpxsje"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.990 ...it-wrong-in-fatal-crash-20160704-gpxsje"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (54.34154pt too wide) in paragraph at lines 989--990
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.afr.com/technology/how-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.991 ...study-suggests/articleshow/84618073.cms"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.991 ...study-suggests/articleshow/84618073.cms"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (180.42046pt too wide) in paragraph at lines 990--991
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://economictimes.indiatimes.com/markets/st
ocks/news/what-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.992 ...river-errors-overreliance-on-automation"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.992 ...river-errors-overreliance-on-automation"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (138.29028pt too wide) in paragraph at lines 991--992
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.ehstoday.com/safety/article/2191926
0/ntsb-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.993 ...dia-screwed-up-the-fatal-tesla-accident"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.993 ...dia-screwed-up-the-fatal-tesla-accident"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (95.83112pt too wide) in paragraph at lines 992--993
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.vanityfair.com/news/2016/07/how-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.997 ...sla-crash-deaths-since-2016-2021-06-17/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.997 ...sla-crash-deaths-since-2016-2021-06-17/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.998 ...rs-seat-before-april-texas-crash-489272"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.998 ...rs-seat-before-april-texas-crash-489272"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.999 ...xas-crash-driverless-preliminary-report"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.999 ...xas-crash-driverless-preliminary-report"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1000 ...self-driving-car-driver-assist-system/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1000 ...self-driving-car-driver-assist-system/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1001 ...tion-safety-board-driverless/10619772/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1001 ...tion-safety-board-driverless/10619772/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (46.74358pt too wide) in paragraph at lines 1000--1001
\T1/phv/m/n/10 date = date, url = "https://abc11.com/tesla-crash-battery-fire-n
ational-transportation-safety-board-driverless/10619772/ 
 []

! Misplaced alignment tab character &.
l.1002 ...nto-30-report-2021-6?international=true&
                                                  r=US&IR=T"},}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1002 ...0-report-2021-6?international=true&r=US&
                                                  IR=T"},}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1002 ...rt-2021-6?international=true&r=US&IR=T"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1002 ...rt-2021-6?international=true&r=US&IR=T"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1003 ...-crash-reporting-mandate-will-find-out"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1003 ...-crash-reporting-mandate-will-find-out"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1004 ...s-crash-texas-ntsb-preliminary-report/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1004 ...s-crash-texas-ntsb-preliminary-report/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (29.87169pt too wide) in paragraph at lines 1003--1004
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.teslarati.com/tesla-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1005 .../506498/ntsb-report-tesla-texas-crash/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1005 .../506498/ntsb-report-tesla-texas-crash/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (72.19154pt too wide) in paragraph at lines 1004--1005
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://insideevs.com/news/506498/ntsb-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1006 ...port-new-orders-in-china-free-falling/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1006 ...port-new-orders-in-china-free-falling/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (50.62122pt too wide) in paragraph at lines 1005--1006
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://electrek.co/2021/06/03/tesla-
 []

[26]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1007 ...-releases-report-on-fatal-tesla-crash/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1007 ...-releases-report-on-fatal-tesla-crash/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (52.26157pt too wide) in paragraph at lines 1006--1007
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.newsy.com/stories/ntsb-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1008 ...ril-tesla-crash-says-us-report-2439146"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1008 ...ril-tesla-crash-says-us-report-2439146"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (15.88194pt too wide) in paragraph at lines 1007--1008
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.ndtv.com/world-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1009 ...sh-report-shows-autopilot-not-to-blame"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1009 ...sh-report-shows-autopilot-not-to-blame"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (44.65158pt too wide) in paragraph at lines 1008--1009
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.autocar.co.nz/autocar-
 []

! Missing $ inserted.
<inserted text> 
                $
l.1010 ...performance-waha.sabacloud.com/Saba/Web_
                                                  spf/EU2PRD0152/app/dashboa...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1010 .../Saba/Web_spf/EU2PRD0152/app/dashboard"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1010 .../Saba/Web_spf/EU2PRD0152/app/dashboard"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1010 .../Saba/Web_spf/EU2PRD0152/app/dashboard"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1011 ...-crash-model-s-autopilot-b1845286.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1011 ...-crash-model-s-autopilot-b1845286.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (150.74025pt too wide) in paragraph at lines 1010--1011
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.independent.co.uk/news/world/americ
as/tesla-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1012 ...eadly-crash-feds-say-yay-self-driving/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1012 ...eadly-crash-feds-say-yay-self-driving/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (70.00124pt too wide) in paragraph at lines 1011--1012
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.wired.com/2017/01/probing-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1013 ...ash-List-with-Photos-February-2020.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1013 ...ash-List-with-Photos-February-2020.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1014 ...-autopilot-model-x-crash-investigation"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1014 ...-autopilot-model-x-crash-investigation"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (47.31155pt too wide) in paragraph at lines 1013--1014
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://mashable.com/article/nthsa-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1015 ...-tesla-crashes-three-from-recent-weeks"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1015 ...-tesla-crashes-three-from-recent-weeks"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1016 ...-highway-traffic-safety-administration"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1016 ...-highway-traffic-safety-administration"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (29.3125pt too wide) in paragraph at lines 1015--1016
\T1/phv/m/n/10 url = "https://chicago.suntimes.com/consumer-affairs/2021/6/30/2
2557122/nhtsa-automated-driving-crash-reports-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1017 ...uspect-autopilot-in-fatal-tesla-crash/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1017 ...uspect-autopilot-in-fatal-tesla-crash/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1018 ...teslas-autopilot-in-fatal-c-1803136365"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1018 ...teslas-autopilot-in-fatal-c-1803136365"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1019 ...hy-tesla-autopilot-20170119-story.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1019 ...hy-tesla-autopilot-20170119-story.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1020 ...-on-tesla-crash-that-killed-two-people"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1020 ...-on-tesla-crash-that-killed-two-people"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1021 ...s-before-deadly-tesla-crash-ntsb-finds"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1021 ...s-before-deadly-tesla-crash-ntsb-finds"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (342.76935pt too wide) in paragraph at lines 1020--1021
[]\T1/phv/m/n/10 , @on-li-nes-ha-per07062018, ALTau-thor = au-thor, AL-Tedi-tor
 = edi-tor, title = title, date = date, url = "https://choice.npr.org/index.htm
l?origin=https://www.npr.org/2018/06/07/618081406/no-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1022 ...y-tesla-crash-in-spring-officials-say/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1022 ...y-tesla-crash-in-spring-officials-say/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1023 ...ov/odi/inv/2016/INCLA-PE16007-7876.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1023 ...ov/odi/inv/2016/INCLA-PE16007-7876.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1024 ...utopilot-says-ntsb-report-9609911.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1024 ...utopilot-says-ntsb-report-9609911.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1025 ...al-police-and-nhtsa-probe-tesla-crash/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1025 ...al-police-and-nhtsa-probe-tesla-crash/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (4.69487pt too wide) in paragraph at lines 1024--1025
\T1/phv/m/n/10 date, url = "https://www.autoweek.com/news/green-cars/a36173804/
both-local-police-and-nhtsa-probe-tesla-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1026 ...tware-engineers-fatal-autopilot-crash/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1026 ...tware-engineers-fatal-autopilot-crash/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1027 ...obaltimes.cn/page/202105/1222902.shtml"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1027 ...obaltimes.cn/page/202105/1222902.shtml"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1028 ...-on-deadly-tesla-crash-within-a-month/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1028 ...-on-deadly-tesla-crash-within-a-month/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (7.58463pt too wide) in paragraph at lines 1027--1028
\T1/phv/m/n/10 date, url = "https://www.carscoops.com/2021/04/ntsb-to-release-r
eport-on-deadly-tesla-crash-within-a-month/ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1029 ...n-the-fatal-tesla-autopilot-crash.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1029 ...n-the-fatal-tesla-autopilot-crash.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (5.61401pt too wide) in paragraph at lines 1028--1029
\T1/phv/m/n/10 date, url = "https://slate.com/technology/2017/06/a-new-report-o
n-what-happened-in-the-fatal-tesla-autopilot-
 []

[27]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1030 ...tesla-fatal-california-crash-autopilot"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1030 ...tesla-fatal-california-crash-autopilot"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (13.84618pt too wide) in paragraph at lines 1029--1030
\T1/phv/m/n/10 title, date = date, url = "https://www.theguardian.com/us-news/2
021/may/15/tesla-fatal-california-crash-autopilot 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1031 ...-blame-in-fatal-autopilot-crash-report"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1031 ...-blame-in-fatal-autopilot-crash-report"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (13.51443pt too wide) in paragraph at lines 1030--1031
\T1/phv/m/n/10 date = date, url = "https://www.stuff.co.nz/motoring/news/967972
72/tesla-shares-some-blame-in-fatal-autopilot-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1032 ...r-blames-limitations-of-autopilot-mode"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1032 ...r-blames-limitations-of-autopilot-mode"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (11.07445pt too wide) in paragraph at lines 1031--1032
\T1/phv/m/n/10 = date, url = "https://www.overdriveonline.com/business/article/
14891759/dot-report-on-fatal-2016-tesla-crash-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1033 ...rking-feature-following-crash-reports/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1033 ...rking-feature-following-crash-reports/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1034 ...-reveals-how-autopilot-can-be-tricked/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1034 ...-reveals-how-autopilot-can-be-tricked/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (154.38261pt too wide) in paragraph at lines 1033--1034
[]\T1/phv/m/n/10 , @on-li-ne-dow-ling23042021, ALTau-thor = au-thor, AL-Tedi-to
r = edi-tor, title = title, date = date, url = "https://www.caradvice.com.au/94
7080/elon-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1035 ...fatal-tesla-crash-in-texas-051121.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1035 ...fatal-tesla-crash-in-texas-051121.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (2.44322pt too wide) in paragraph at lines 1034--1035
\T1/phv/m/n/10 url = "https://www.consumeraffairs.com/news/ntsb-releases-report
-on-fatal-tesla-crash-in-texas-051121.html 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1036 ...michigan-state-autopilot-crash-report/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1036 ...michigan-state-autopilot-crash-report/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1037 ...he-details-tesla-crash-in-florida.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1037 ...he-details-tesla-crash-in-florida.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (14.86502pt too wide) in paragraph at lines 1036--1037
\T1/phv/m/n/10 = date, url = "https://tweakers.net/nieuws/126145/onderzoeksraad
-vs-publiceert-technische-details-tesla-crash-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1038 ...ver-s-agony-and-confusion-d-1841720801"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1038 ...ver-s-agony-and-confusion-d-1841720801"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (5.53229pt too wide) in paragraph at lines 1037--1038
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://gizmodo.com/new-
 []

! Misplaced alignment tab character &.
l.1041 ....google.com/search?q=tesla+crash+report&
                                                  rlz=1C1AVUC_enNL953NL953&e...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1041 ...search?q=tesla+crash+report&rlz=1C1AVUC_
                                                  enNL953NL953&ei=p3kNYa6sLI...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1041 ...a+crash+report&rlz=1C1AVUC_enNL953NL953&
                                                  ei=p3kNYa6sLI_UsAeSoZrwDw&...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1041 ..._enNL953NL953&ei=p3kNYa6sLI_UsAeSoZrwDw&
                                                  start=100&sa=N&ved=2ahUKEw...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1041 ...953&ei=p3kNYa6sLI_UsAeSoZrwDw&start=100&
                                                  sa=N&ved=2ahUKEwjum77s_Zzy...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1041 ...i=p3kNYa6sLI_UsAeSoZrwDw&start=100&sa=N&
                                                  ved=2ahUKEwjum77s_ZzyAhUPK...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1041 ...m77s_ZzyAhUPKuwKHZKQBv44WhDw0wN6BAgBEEg&
                                                  biw=1920&bih=933"},}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1041 ...hUPKuwKHZKQBv44WhDw0wN6BAgBEEg&biw=1920&
                                                  bih=933"},}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1041 ...KQBv44WhDw0wN6BAgBEEg&biw=1920&bih=933"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1041 ...KQBv44WhDw0wN6BAgBEEg&biw=1920&bih=933"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1041 ...KQBv44WhDw0wN6BAgBEEg&biw=1920&bih=933"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (278.76302pt too wide) in paragraph at lines 1041--1041
[]\T1/phv/m/n/10 @onlineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, title 
= title, date = date, url = "https://www.google.com/search?q=tesla+crash+report
rlz=1C1AVUC$[]\OML/cmm/m/it/10 nNL\OT1/cmr/m/n/10 953\OML/cmm/m/it/10 NL\OT1/cm
r/m/n/10 953\OML/cmm/m/it/10 ei \OT1/cmr/m/n/10 =
 []


Overfull \hbox (120.40721pt too wide) in paragraph at lines 1041--1041
\OML/cmm/m/it/10 p\OT1/cmr/m/n/10 3\OML/cmm/m/it/10 kNYa\OT1/cmr/m/n/10 6\OML/c
mm/m/it/10 sLI[]sAeSoZrwDwstart \OT1/cmr/m/n/10 = 100\OML/cmm/m/it/10 sa \OT1/c
mr/m/n/10 = \OML/cmm/m/it/10 Nved \OT1/cmr/m/n/10 = 2\OML/cmm/m/it/10 ahUKEwjum
\OT1/cmr/m/n/10 77\OML/cmm/m/it/10 s[]zyAhUPKuwKHZKQBv\OT1/cmr/m/n/10 44\OML/cm
m/m/it/10 WhDw\OT1/cmr/m/n/10 0\OML/cmm/m/it/10 wN\OT1/cmr/m/n/10 6\OML/cmm/m/i
t/10 BAgBEEgbiw \OT1/cmr/m/n/10 =
 []

[28]
! Missing $ inserted.
<inserted text> 
                $
l.1079 ...y.net/investigation/cvr/transcripts/cvr_
                                                  py764.php
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1082 ...com/suriname/290721/slm-ramp-herdacht/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1082 ...com/suriname/290721/slm-ramp-herdacht/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1082 ...com/suriname/290721/slm-ramp-herdacht/"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1082 ...com/suriname/290721/slm-ramp-herdacht/"}
                                                  ,}
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1082 ...com/suriname/290721/slm-ramp-herdacht/"}
                                                  ,}
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (87.11894pt too wide) in paragraph at lines 1079--1082
[]\T1/phv/m/n/10 https://aviation-safety.net/investigation/cvr/transcripts/cvr$
[]\OML/cmm/m/it/10 y\OT1/cmr/m/n/10 764\OML/cmm/m/it/10 :phphttps \OT1/cmr/m/n/
10 : \OML/cmm/m/it/10 ==aviation \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 safety:n
et=database=record:php\OT1/cmr/m/n/10 ?\OML/cmm/m/it/10 id \OT1/cmr/m/n/10 =
 []


Overfull \hbox (371.2102pt too wide) in paragraph at lines 1079--1082
\OT1/cmr/m/n/10 19890607 \OMS/cmsy/m/n/10 ^^@ \OT1/cmr/m/n/10 2\OML/cmm/m/it/10
 Watisergebeurd\OT1/cmr/m/n/10 ?@\OML/cmm/m/it/10 online[]$ 
 []

! Too many }'s.
l.1082 ...m/suriname/290721/slm-ramp-herdacht/"},}
                                                  
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1083 ...waarom-nou-jij-over-de-slm-ramp-in-89/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1083 ...waarom-nou-jij-over-de-slm-ramp-in-89/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (129.9205pt too wide) in paragraph at lines 1082--1083
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://werkgroepcaraibischeletteren.nl/documen
taire-
 []

! Missing $ inserted.
<inserted text> 
                $
l.1084 ...},	url = {"https://www.vpro.nl/speel~WO_
                                                  NTR_15390142~andere-tijden...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1084 ...isstanden-leiden-tot-de-slm-ramp~.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1084 ...isstanden-leiden-tot-de-slm-ramp~.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1084 ...isstanden-leiden-tot-de-slm-ramp~.html"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (123.88136pt too wide) in paragraph at lines 1083--1084
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.vpro.nl/speel WO$[]\OML/cmm/m/it/10
 TR[]\OT1/cmr/m/n/10 5390142 \OML/cmm/m/it/10 andere \OMS/cmsy/m/n/10 ^^@
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1085 ...nederland.nl/nl/kalender/06/1989-06-07"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1085 ...nederland.nl/nl/kalender/06/1989-06-07"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (138.09032pt too wide) in paragraph at lines 1084--1085
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.canonvannederland.nl/nl/kalender/06
/1989-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1086 ...ratie.nl/archief-herdenkingen-slm-ramp"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1086 ...ratie.nl/archief-herdenkingen-slm-ramp"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (50.9515pt too wide) in paragraph at lines 1085--1086
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://vijfeeuwenmigratie.nl/archief-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1087 ...eningsforum.nl/index.php?topic=84702.0"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1087 ...eningsforum.nl/index.php?topic=84702.0"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (160.90007pt too wide) in paragraph at lines 1086--1087
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.hulpverleningsforum.nl/index.php?to
pic=84702.0 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1088 ...-hebben-achter-de-stuurknuppel-gezeten"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1088 ...-hebben-achter-de-stuurknuppel-gezeten"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (128.44034pt too wide) in paragraph at lines 1087--1088
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.nporadio1.nl/fragmenten/focus/f792e
720-
 []


Overfull \hbox (0.89369pt too wide) in paragraph at lines 1087--1088
\T1/phv/m/n/10 bd85-4c18-8a71-b334d9d5de7e/2019-04-17-slm-ramp-een-paar-cowboys
-hebben-achter-de-stuurknuppel-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1089 ...ing-slm-ramp-28-jaar-geleden-suriname/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1089 ...ing-slm-ramp-28-jaar-geleden-suriname/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (158.53983pt too wide) in paragraph at lines 1088--1089
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.waterkant.net/suriname/2017/06/07/h
erdenking-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1090 ...ps://www.espn.nl/video/clip?id=8744942"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1090 ...ps://www.espn.nl/video/clip?id=8744942"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1091 .../www.themediabrothers.nl/tag/slm-ramp/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1091 .../www.themediabrothers.nl/tag/slm-ramp/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (67.6212pt too wide) in paragraph at lines 1090--1091
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "http://www.themediabrothers.nl/tag/slm-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1092 ...LM-ramp-Ik-mis-mijn-broer-nog-elke-dag"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1092 ...LM-ramp-Ik-mis-mijn-broer-nog-elke-dag"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (82.38098pt too wide) in paragraph at lines 1091--1092
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.rijnmond.nl/nieuws/182546/30-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1093 ...1/het-vergeten-verhaal-van-de-slm-ramp"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1093 ...1/het-vergeten-verhaal-van-de-slm-ramp"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1095 ...erdam.nl/stadsarchief/nieuws/slm-ramp/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1095 ...erdam.nl/stadsarchief/nieuws/slm-ramp/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (234.73997pt too wide) in paragraph at lines 1093--1095
\T1/phv/m/n/10 "https://www.bd.nl/sport/de-slm-ramp-en-het-hartverscheurende-ve
rhaal-van-jerry-en-winnie-haatrecht ae4ce105/?referrer=https@onlineamsterdamArc
hiefSLM,
 []


Overfull \hbox (47.81961pt too wide) in paragraph at lines 1093--1095
\T1/phv/m/n/10 ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, title = title, date
 = date, url = "https://www.amsterdam.nl/stadsarchief/nieuws/slm-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1096 ...b-ik-wel-mijn-broer-en-moeder-begraven"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1096 ...b-ik-wel-mijn-broer-en-moeder-begraven"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (24.46283pt too wide) in paragraph at lines 1095--1096
\T1/phv/m/n/10 url = "https://www.rtvoost.nl/nieuws/313496/Nabestaande-SLM-ramp
-Heb-ik-wel-mijn-broer-en-moeder-begraven 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1097 ...-knel-slm-ramp-precies-32-jaar-geleden"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1097 ...-knel-slm-ramp-precies-32-jaar-geleden"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (6.08318pt too wide) in paragraph at lines 1096--1097
\T1/phv/m/n/10 "https://www.bredavandaag.nl/nieuws/algemeen/337919/nac-herdenkt
-andro-knel-slm-ramp-precies-32-jaar-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1098 ...vering/792/Een-aangekondigde-vliegramp"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1098 ...vering/792/Een-aangekondigde-vliegramp"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1099 ...https://nl.wikipedia.org/wiki/SLM-ramp"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1099 ...https://nl.wikipedia.org/wiki/SLM-ramp"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1101 ....net/database/record.php?id=19890607-2"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1101 ....net/database/record.php?id=19890607-2"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1103 ...rts.aviation-safety.net/1989/19890607-2_
                                                  DC86_N1809E.pdf"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1103 ...ty.net/1989/19890607-2_DC86_N1809E.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1103 ...ty.net/1989/19890607-2_DC86_N1809E.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1103 ...ty.net/1989/19890607-2_DC86_N1809E.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1104 ...y.net/investigation/cvr/transcripts/cvr_
                                                  py764.php"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1104 ...tigation/cvr/transcripts/cvr_py764.php"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1104 ...tigation/cvr/transcripts/cvr_py764.php"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1104 ...tigation/cvr/transcripts/cvr_py764.php"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

[29]
! Missing $ inserted.
<inserted text> 
                $
l.1105 ...{"https://en.wikipedia.org/wiki/Surinam_
                                                  Airways_Flight_764"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1105 ...ia.org/wiki/Surinam_Airways_Flight_764"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1105 ...ia.org/wiki/Surinam_Airways_Flight_764"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1105 ...ia.org/wiki/Surinam_Airways_Flight_764"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (196.05537pt too wide) in paragraph at lines 1104--1105
[]\T1/phv/m/n/10 , @on-li-ne-wikiS-RF-light764, ALTau-thor = au-thor, AL-Tedi-t
or = edi-tor, title = title, date = date, url = "https://en.wikipedia.org/wiki/
Surinam$[]\OML/cmm/m/it/10 irways[]light[]\OT1/cmr/m/n/10 64$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.1106 .../https://www.ntsb.gov/ntsb/brief.asp?ev_
                                                  id=34510&key=0"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1106 ...www.ntsb.gov/ntsb/brief.asp?ev_id=34510&
                                                  key=0"},}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1106 ...b.gov/ntsb/brief.asp?ev_id=34510&key=0"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1106 ...b.gov/ntsb/brief.asp?ev_id=34510&key=0"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1106 ...b.gov/ntsb/brief.asp?ev_id=34510&key=0"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (284.99843pt too wide) in paragraph at lines 1105--1106
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://web.archive.org/web/20050113010822/http
s://www.ntsb.gov/ntsb/brief.asp?ev$[]\OML/cmm/m/it/10 d \OT1/cmr/m/n/10 =
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1107 ...ar-geleden-trof-ook-nederlands-voetbal"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1107 ...ar-geleden-trof-ook-nederlands-voetbal"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1108 ...h-slm-bij-zanderij-meer-dan-170-doden/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1108 ...h-slm-bij-zanderij-meer-dan-170-doden/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1109 ...7/vliegramp-suriname-op-7-juni-1989-2/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1109 ...7/vliegramp-suriname-op-7-juni-1989-2/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1111 ...rl = {"http://www.edufd.nl/planecrash/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1111 ...rl = {"http://www.edufd.nl/planecrash/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1113 ...://www.oldjets.net/slm-dc-8-crash.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1113 ...://www.oldjets.net/slm-dc-8-crash.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1115 ...urinam-airways-flight-764-828979c7efe2"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1115 ...urinam-airways-flight-764-828979c7efe2"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1117 ...ticle/5b240d758ee4c5422381cc7cdc98566b"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1117 ...ticle/5b240d758ee4c5422381cc7cdc98566b"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1144 ...://nl.wikipedia.org/wiki/Schipholbrand"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1144 ...://nl.wikipedia.org/wiki/Schipholbrand"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1146 ...://www.youtube.com/watch?v=1i-hfEzxFfk"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1146 ...://www.youtube.com/watch?v=1i-hfEzxFfk"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1149 ...hiphol-oost-nacht-van-26-op-27-oktober"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1149 ...hiphol-oost-nacht-van-26-op-27-oktober"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (11.52832pt too wide) in paragraph at lines 1146--1149
\T1/phv/m/n/10 Tedi-tor = edi-tor, title = title, date = date, url = "https://w
ww.onderzoeksraad.nl/nl/page/392/brand-cellencomplex-
 []

! Missing $ inserted.
<inserted text> 
                $
l.1154 ... {"https://www.vpro.nl/argos/speel~POMS_
                                                  VPRO_461907~schadevergoedi...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1154 ...-voor-ex-verdachte-schipholbrand~.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1154 ...-voor-ex-verdachte-schipholbrand~.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1154 ...-voor-ex-verdachte-schipholbrand~.html"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (4.53787pt too wide) in paragraph at lines 1149--1154
[]\T1/phv/m/n/10 , ar-ti-kel met vi-deo her-den-king im-pact op de per-soon her
-den-king @on-li-ne-schip-hol-brand-vi-deoar-gos, ALTau-
 []


Overfull \hbox (111.91402pt too wide) in paragraph at lines 1149--1154
\T1/phv/m/n/10 thor = au-thor, AL-Tedi-tor = edi-tor, title = title, date = dat
e, url = "https://www.vpro.nl/argos/speel POMS$[]\OML/cmm/m/it/10 PRO[]\OT1/cmr
/m/n/10 61907 \OML/cmm/m/it/10 schadevergoeding \OMS/cmsy/m/n/10 ^^@
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1156 ...icht-schipholbrand-en-rechtszaken.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1156 ...icht-schipholbrand-en-rechtszaken.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (0.91476pt too wide) in paragraph at lines 1154--1156
\T1/phv/m/n/10 date = date, url = "https://www.nu.nl/binnenland/3355935/feiteno
verzicht-schipholbrand-en-rechtszaken.html 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1158 ...uitgeverijen.nl/isbn/de-schipholbrand/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1158 ...uitgeverijen.nl/isbn/de-schipholbrand/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (98.94075pt too wide) in paragraph at lines 1156--1158
[]\T1/phv/m/n/10 , tijd-lijn @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = ed
i-tor, title = title, date = date, url = "https://www.singeluitgeverijen.nl/isb
n/de-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1161 ...schipholbrand-niet-ontstaan-in-cel-11/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1161 ...schipholbrand-niet-ontstaan-in-cel-11/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1179 ...9353000/1/j9vvij5epmj1ey0/vi3aof7awcxg"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1179 ...9353000/1/j9vvij5epmj1ey0/vi3aof7awcxg"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (100.99883pt too wide) in paragraph at lines 1161--1179
\T1/phv/m/n/10 thor, AL-Tedi-tor = edi-tor, title = title, date = date, url = "
https://www.parlementairemonitor.nl/9353000/1/j9vvij5epmj1ey0/vi3aof7awcxg 
 []

[30]
! Missing $ inserted.
<inserted text> 
                $
l.1185 ...onderzoek-schipholbrand/13-11-2008/POMS_
                                                  NTR_103332"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1185 ...hipholbrand/13-11-2008/POMS_NTR_103332"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1185 ...hipholbrand/13-11-2008/POMS_NTR_103332"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1185 ...hipholbrand/13-11-2008/POMS_NTR_103332"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1187 .../600395/schipholbrand-blijft-schrijnen"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1187 .../600395/schipholbrand-blijft-schrijnen"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1189 ...nl/artikel/schipholbrand-vereist-debat"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1189 ...nl/artikel/schipholbrand-vereist-debat"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (33.87173pt too wide) in paragraph at lines 1187--1189
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.ed.nl/economie/om-
 []


Overfull \hbox (12.29349pt too wide) in paragraph at lines 1187--1189
\T1/phv/m/n/10 geen-schadevergoeding-voor-verdachte-schipholbrand a6c7c51d/6304
2600/?referrer=https@onlineID, ALTau-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1190 ...randweer/brand-cellencomplex-schiphol/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1190 ...randweer/brand-cellencomplex-schiphol/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1196 ...akweb.nl/roofs/2006-10/RH10-P30-31.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1196 ...akweb.nl/roofs/2006-10/RH10-P30-31.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1197 ...udelft.nl/article/dood-door-zuinigheid"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1197 ...udelft.nl/article/dood-door-zuinigheid"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (66.52069pt too wide) in paragraph at lines 1196--1197
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.delta.tudelft.nl/article/dood-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1198 ...hiphol-oost-nacht-van-26-op-27-oktober"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1198 ...hiphol-oost-nacht-van-26-op-27-oktober"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (114.69077pt too wide) in paragraph at lines 1197--1198
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.onderzoeksraad.nl/nl/page/392/brand
-
 []


LaTeX Warning: Citation `oVVSchietongevalOssendrecht' on page 31 undefined on i
nput line 1221.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1225 ...en-bij-schietoefening-ossendrecht.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1225 ...en-bij-schietoefening-ossendrecht.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[31]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1227 ...3/lessen-uit-schietongeval-ossendrecht"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1227 ...3/lessen-uit-schietongeval-ossendrecht"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1229 ...obeerde-zijn-leven-te-redden~afe4c7a0/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1229 ...obeerde-zijn-leven-te-redden~afe4c7a0/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (9.27513pt too wide) in paragraph at lines 1229--1229
\T1/phv/m/n/10 = date, url = "https://www.bndestem.nl/bergen-op-zoom/dood-van-m
ilitair-sander-klap-35-in-ossendrecht-was-
 []


LaTeX Warning: Citation `molukseTreinkaping' on page 32 undefined on input line
 1249.

LaTeX Font Info:    Trying to load font information for TS1+phv on input line 1
263.
(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/psnfss\ts1phv.fd
File: ts1phv.fd 2020/03/25 scalable font definitions for TS1/phv.
)

LaTeX Warning: Citation `jiang16042019TanjinExplosion' on page 32 undefined on 
input line 1267.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1270 ...last-and-death-of-88-firefighters.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1270 ...last-and-death-of-88-firefighters.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (21.27272pt too wide) in paragraph at lines 1269--1270
\T1/phv/m/n/10 url = "https://slate.com/human-interest/2015/08/chinese-explosio
n-aftermath-officials-investigate-causes-behind-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1272 ...ile.com/conversation/tianjin-explosion"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1272 ...ile.com/conversation/tianjin-explosion"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (124.50082pt too wide) in paragraph at lines 1270--1272
[]\T1/phv/m/n/10 , ar-ti-kel @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = ed
i-tor, title = title, date = date, url = "https://www.chinafile.com/conversatio
n/tianjin-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1274 ...n-tianjin-sets-off-an-explosion-online"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1274 ...n-tianjin-sets-off-an-explosion-online"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1275 ...12/explosion-reported-in-tianjin-china"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1275 ...12/explosion-reported-in-tianjin-china"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (102.15073pt too wide) in paragraph at lines 1274--1275
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://america.cgtn.com/2015/08/12/explosion-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1276 ...taken-chinese-city-tianjin-august-2015"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1276 ...taken-chinese-city-tianjin-august-2015"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (19.19188pt too wide) in paragraph at lines 1275--1276
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://factcheck.afp.com/no-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1278 ...he-beirut-explosion-compare-to-tianjin"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1278 ...he-beirut-explosion-compare-to-tianjin"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[32]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1280 ...mmag.net/2015/08/17/tianjin-explosion/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1280 ...mmag.net/2015/08/17/tianjin-explosion/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1282 ...blast-puts-spotlight-chemical-industry"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1282 ...blast-puts-spotlight-chemical-industry"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1283 ...jin-china-explosions/story?id=33057017"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1283 ...jin-china-explosions/story?id=33057017"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (110.69087pt too wide) in paragraph at lines 1282--1283
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://abcnews.go.com/International/apocalypti
c-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1284 ...urham.co.uk/osk/tianjin-explosion-2021"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1284 ...urham.co.uk/osk/tianjin-explosion-2021"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (138.51071pt too wide) in paragraph at lines 1283--1284
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.reachingoutacrossdurham.co.uk/osk/t
ianjin-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1285 ...ry.wiley.com/doi/abs/10.1002/prs.11789"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1285 ...ry.wiley.com/doi/abs/10.1002/prs.11789"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (168.36003pt too wide) in paragraph at lines 1284--1285
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://aiche.onlinelibrary.wiley.com/doi/abs/1
0.1002/prs.11789 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1286 ...-tianjin-port-explosions/13570.article"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1286 ...-tianjin-port-explosions/13570.article"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (112.39098pt too wide) in paragraph at lines 1285--1286
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.automotivelogistics.media/thousands
-
 []

! Missing $ inserted.
<inserted text> 
                $
l.1287 ...uld-be-most-expensive-maritime-disaster_
                                                  20150826.html"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1287 ...ensive-maritime-disaster_20150826.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1287 ...ensive-maritime-disaster_20150826.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1287 ...ensive-maritime-disaster_20150826.html"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (4.25198pt too wide) in paragraph at lines 1286--1287
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.joc.com/port-
 []


Overfull \hbox (11.96112pt too wide) in paragraph at lines 1286--1287
\T1/phv/m/n/10 news/asian-ports/port-tianjin/tianjin-port-explosions-could-be-m
ost-expensive-maritime-disaster$[]\OT1/cmr/m/n/10 0150826\OML/cmm/m/it/10 :html
$ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1288 ...china-shatters-windows-causes-injuries"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1288 ...china-shatters-windows-causes-injuries"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (103.89099pt too wide) in paragraph at lines 1287--1288
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.bloomberg.com/news/articles/2015-
 []

! Missing $ inserted.
<inserted text> 
                $
l.1289 ...eadmin/DAM/env/documents/2016/TEIA/OECD_
                                                  WGCA_24-27_OCT_2016/Sessio...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Double subscript.
l.1289 ...TEIA/OECD_WGCA_24-27_OCT_2016/Session_3_
                                                  Zhao_-__Introduction_of_Ti...
I treat `x_1_2' essentially like `x_1{}_2'.

! Double subscript.
l.1289 ...CD_WGCA_24-27_OCT_2016/Session_3_Zhao_-_
                                                  _Introduction_of_Tianjin_A...
I treat `x_1_2' essentially like `x_1{}_2'.

! Missing { inserted.
<to be read again> 
                   _
l.1289 ...D_WGCA_24-27_OCT_2016/Session_3_Zhao_-__
                                                  Introduction_of_Tianjin_Ac...
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Double subscript.
l.1289 ...o_-__Introduction_of_Tianjin_Accident_-_
                                                  Jinsong_Zhao.pdf"},}
I treat `x_1_2' essentially like `x_1{}_2'.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1289 ...of_Tianjin_Accident_-_Jinsong_Zhao.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1289 ...of_Tianjin_Accident_-_Jinsong_Zhao.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1289 ...of_Tianjin_Accident_-_Jinsong_Zhao.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1289 ...of_Tianjin_Accident_-_Jinsong_Zhao.pdf"}
                                                  ,}
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (235.60625pt too wide) in paragraph at lines 1288--1289
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://unece.org/fileadmin/DAM/env/documents/2
016/TEIA/OECD$[]\OML/cmm/m/it/10 GCA[]\OT1/cmr/m/n/10 4 \OMS/cmsy/m/n/10 ^^@
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1291 ...nce/site-2015-tianjin-port-explosions/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1291 ...nce/site-2015-tianjin-port-explosions/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (10.22209pt too wide) in paragraph at lines 1289--1291
\T1/phv/m/n/10 "https://porteconomicsmanagement.org/pemp/contents/part6/port-re
silience/site-2015-tianjin-port-explosions/ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1292 ...on-aftermath-blast-site-165334778.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1292 ...on-aftermath-blast-site-165334778.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (22.50221pt too wide) in paragraph at lines 1291--1292
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.alamy.com/stock-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1293 ...sive-explosions-china-city-of-tianjin/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1293 ...sive-explosions-china-city-of-tianjin/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (204.70029pt too wide) in paragraph at lines 1292--1293
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.popularmechanics.com/technology/new
s/a16871/massive-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1294 ...s://www.imago-images.com/st/0080815934"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1294 ...s://www.imago-images.com/st/0080815934"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1295 ...cal-blast-at-chinese-port/8857.article"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1295 ...cal-blast-at-chinese-port/8857.article"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (96.2412pt too wide) in paragraph at lines 1294--1295
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.chemistryworld.com/news/deadly-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1296 ...ive-insights-and-backgrounds-a-502381/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1296 ...ive-insights-and-backgrounds-a-502381/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1298 ...-east-53f4206a7f1db0812262a15d22e1e58f"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1298 ...-east-53f4206a7f1db0812262a15d22e1e58f"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (72.12425pt too wide) in paragraph at lines 1296--1298
\T1/phv/m/n/10 date, url = "https://apnews.com/article/lebanon-fires-us-news-ex
plosions-middle-east-53f4206a7f1db0812262a15d22e1e58f 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1300 ...ianjin-port-explosion-shipping-delays/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1300 ...ianjin-port-explosion-shipping-delays/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1302 ...tianjin-explosions-cover-up-exposes-b/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1302 ...tianjin-explosions-cover-up-exposes-b/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1304 ...rance-loss-could-reach-3-5bn-swiss-re/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1304 ...rance-loss-could-reach-3-5bn-swiss-re/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1307 ...jin-explosion-effect-on-supply-chains/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1307 ...jin-explosion-effect-on-supply-chains/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (117.8109pt too wide) in paragraph at lines 1304--1307
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.thechinastory.org/yearbooks/yearboo
k-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1308 ...M-Article-on-Tianjin-Blast-Oct2015.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1308 ...M-Article-on-Tianjin-Blast-Oct2015.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (101.32114pt too wide) in paragraph at lines 1307--1308
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.cicm.org.my/images/articles/CICM-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1310 ...ons-from-the-tianjin-explosion-en.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1310 ...ons-from-the-tianjin-explosion-en.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1311 ...t/ad62904c-44ce-11e5-b3b2-1672f710807b"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1311 ...t/ad62904c-44ce-11e5-b3b2-1672f710807b"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (58.90121pt too wide) in paragraph at lines 1310--1311
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.ft.com/content/ad62904c-
 []

! Missing $ inserted.
<inserted text> 
                $
l.1312 ...china-shocking-footage-caught-on-camera_
                                                  n_7980888.html"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Double subscript.
l.1312 ...ina-shocking-footage-caught-on-camera_n_
                                                  7980888.html"},}
I treat `x_1_2' essentially like `x_1{}_2'.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1312 ...ootage-caught-on-camera_n_7980888.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1312 ...ootage-caught-on-camera_n_7980888.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1312 ...ootage-caught-on-camera_n_7980888.html"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (120.21036pt too wide) in paragraph at lines 1311--1312
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.huffingtonpost.co.uk/2015/08/13/tia
njin-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1313 .../19189/massive-fire-rocks-tianjin-port"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1313 .../19189/massive-fire-rocks-tianjin-port"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (135.18074pt too wide) in paragraph at lines 1312--1313
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.thatsmags.com/china/post/19189/mass
ive-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1315 ...eports/the-jiangsu-yancheng-explosion/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1315 ...eports/the-jiangsu-yancheng-explosion/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[33]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1316 ...anjin-an-outbreak-of-mistrust-in-china"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1316 ...anjin-an-outbreak-of-mistrust-in-china"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (68.07178pt too wide) in paragraph at lines 1315--1316
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.newyorker.com/news/news-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1318 ...framing-of-the-2015s-tianjin-explosion"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1318 ...framing-of-the-2015s-tianjin-explosion"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (20.7444pt too wide) in paragraph at lines 1316--1318
\T1/phv/m/n/10 date, url = "https://www.neliti.com/publications/101997/the-chin
ese-media-framing-of-the-2015s-tianjin-explosion 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1319 ...ttle-1-5-billion-tianjin-blast-claims/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1319 ...ttle-1-5-billion-tianjin-blast-claims/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (64.74173pt too wide) in paragraph at lines 1318--1319
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.reinsurancene.ws/chinese-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1321 ...ter-chinese-chemicals-plant-explosion/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1321 ...ter-chinese-chemicals-plant-explosion/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (176.45027pt too wide) in paragraph at lines 1319--1321
[]\T1/phv/m/n/10 , niews-ar-ti-kel @on-lineID, ALTau-thor = au-thor, AL-Tedi-to
r = edi-tor, title = title, date = date, url = "https://www.thechemicalengineer
.com/news/update-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1322 ...tianjin-warehouse-blast-101006325.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1322 ...tianjin-warehouse-blast-101006325.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (48.3217pt too wide) in paragraph at lines 1321--1322
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.caixinglobal.com/2016-
 []


Overfull \hbox (29.09361pt too wide) in paragraph at lines 1321--1322
\T1/phv/m/n/10 11-10/chinese-executive-receives-suspended-death-sentence-over-2
015-tianjin-warehouse-blast-101006325.html 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1324 ...ow-far-can-i-go-and-how-much-can-i-do/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1324 ...ow-far-can-i-go-and-how-much-can-i-do/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1326 ...-immense-twin-explosions-killed-dozens"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1326 ...-immense-twin-explosions-killed-dozens"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (65.1412pt too wide) in paragraph at lines 1324--1326
[]\T1/phv/m/n/10 , ar-ti-kel @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = ed
i-tor, title = title, date = date, url = "https://www.wnpr.org/post/china-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1327 ...hemical-that-exploded-in-beirut-143979"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1327 ...hemical-that-exploded-in-beirut-143979"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (41.26163pt too wide) in paragraph at lines 1326--1327
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://theconversation.com/what-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1328 ...ions-in-china-follow-tianjin-explosion"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1328 ...ions-in-china-follow-tianjin-explosion"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (93.80118pt too wide) in paragraph at lines 1327--1328
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://chemicalwatch.com/36730/nationwide-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1329 ...sion-as-toll-rises/article34818324.ece"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1329 ...sion-as-toll-rises/article34818324.ece"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (150.75017pt too wide) in paragraph at lines 1328--1329
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.thehindu.com/news/international/inv
estigation-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1330 ...injured-in-china-chemical-plant-blast/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1330 ...injured-in-china-chemical-plant-blast/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (63.81116pt too wide) in paragraph at lines 1329--1330
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://santiagotimes.cl/2019/03/24/64-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1332 ...og/what-caused-the-tianjin-explosions/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1332 ...og/what-caused-the-tianjin-explosions/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (81.17128pt too wide) in paragraph at lines 1330--1332
[]\T1/phv/m/n/10 , oor-za-ken @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = e
di-tor, title = title, date = date, url = "https://klingecorp.com/blog/what-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1334 ...eventionweb.net/educational/view/57235"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1334 ...eventionweb.net/educational/view/57235"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (183.06018pt too wide) in paragraph at lines 1332--1334
[]\T1/phv/m/n/10 , case study @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = e
di-tor, title = title, date = date, url = "https://www.preventionweb.net/educat
ional/view/57235 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1336 .../08/12/explosion-in-tianjin-china.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1336 .../08/12/explosion-in-tianjin-china.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (144.07063pt too wide) in paragraph at lines 1334--1336
[]\T1/phv/m/n/10 , niews-ar-ti-kel @on-lineID, ALTau-thor = au-thor, AL-Tedi-to
r = edi-tor, title = title, date = date, url = "https://www.cnbc.com/2015/08/12
/explosion-
 []

! Missing $ inserted.
<inserted text> 
                $
l.1338 ...pement-durable.gouv.fr/wp-content/files_
                                                  mf/A46803_a46803_fiche_imp...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1338 ...s_mf/A46803_a46803_fiche_impel_006.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1338 ...s_mf/A46803_a46803_fiche_impel_006.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1338 ...s_mf/A46803_a46803_fiche_impel_006.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1340 ...ed-regulations-and-reaped-profits.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1340 ...ed-regulations-and-reaped-profits.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (179.83984pt too wide) in paragraph at lines 1338--1340
[]\T1/phv/m/n/10 , cor-rup-tie @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = 
edi-tor, title = title, date = date, url = "https://www.nytimes.com/2015/08/31/
world/asia/behind-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1342 ...sult-of-mismanagement-china-finds.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1342 ...sult-of-mismanagement-china-finds.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (14.51292pt too wide) in paragraph at lines 1340--1342
\T1/phv/m/n/10 url = "https://www.nytimes.com/2016/02/06/world/asia/tianjin-exp
losions-were-result-of-mismanagement-china-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1343 ...estigators-Identify-Cause-Tianjin.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1343 ...estigators-Identify-Cause-Tianjin.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (125.24043pt too wide) in paragraph at lines 1342--1343
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://cen.acs.org/articles/94/web/2016/02/Chi
nese-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1345 ...estigators-Identify-Cause-Tianjin.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1345 ...estigators-Identify-Cause-Tianjin.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1347 ...ve-explosions-in-tianjin-china/401228/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1347 ...ve-explosions-in-tianjin-china/401228/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1348 ...ia/china-tianjin-explosions/index.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1348 ...ia/china-tianjin-explosions/index.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (96.20067pt too wide) in paragraph at lines 1347--1348
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://edition.cnn.com/2015/08/13/asia/china-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1350 ...orld/china-explosion-tianjin-1.3189455"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1350 ...orld/china-explosion-tianjin-1.3189455"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (123.18085pt too wide) in paragraph at lines 1348--1350
[]\T1/phv/m/n/10 , ni-uwesar-tie-kel @on-lineID, ALTau-thor = au-thor, AL-Tedi-
tor = edi-tor, title = title, date = date, url = "https://www.cbc.ca/news/world
/china-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1352 ...ce-over-tianjin-explosion-in-2015.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1352 ...ce-over-tianjin-explosion-in-2015.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (19.45285pt too wide) in paragraph at lines 1350--1352
\T1/phv/m/n/10 "https://www.thestar.com/news/world/2016/11/09/chinese-executive
-gets-death-sentence-over-tianjin-explosion-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1354 ...s-of-tianjin-port-explosion-china.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1354 ...s-of-tianjin-port-explosion-china.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1356 ...survivor-tianjin-explosion-viral-post/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1356 ...survivor-tianjin-explosion-viral-post/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (136.47055pt too wide) in paragraph at lines 1354--1356
[]\T1/phv/m/n/10 , cen-suur @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi
-tor, title = title, date = date, url = "https://foreignpolicy.com/2015/09/10/c
ensored-
 []

[34]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1358 ...-about-it-are-still-censored-in-china/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1358 ...-about-it-are-still-censored-in-china/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (39.9517pt too wide) in paragraph at lines 1356--1358
[]\T1/phv/m/n/10 , cen-suur @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi
-tor, title = title, date = date, url = "https://qz.com/756872/a-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1360 ...opics/tianjin-warehouse-explosion-2015"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1360 ...opics/tianjin-warehouse-explosion-2015"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1361 ...ps://www.wsj.com/articles/BL-CJB-27664"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1361 ...ps://www.wsj.com/articles/BL-CJB-27664"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (35.36171pt too wide) in paragraph at lines 1360--1361
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.wsj.com/articles/BL-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1362 ...s-filmed-dramatic-china-blasts-n409701"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1362 ...s-filmed-dramatic-china-blasts-n409701"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (91.71127pt too wide) in paragraph at lines 1361--1362
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.nbcnews.com/news/world/tianjin-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1363 ...d.edu/abs/2016AGUFM.S13D..06P/abstract"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1363 ...d.edu/abs/2016AGUFM.S13D..06P/abstract"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (189.47975pt too wide) in paragraph at lines 1362--1363
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://ui.adsabs.harvard.edu/abs/2016AGUFM.S13
D..06P/abstract 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1365 ...-one-year-after-the-tianjin-explosion/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1365 ...-one-year-after-the-tianjin-explosion/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1366 ...e-tianjin-explosion-looked-like-space/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1366 ...e-tianjin-explosion-looked-like-space/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (65.5514pt too wide) in paragraph at lines 1365--1366
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.wired.com/2015/08/chinas-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1367 ...h-chinese-city-of-tianjin/6693336?nw=0"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1367 ...h-chinese-city-of-tianjin/6693336?nw=0"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (47.0315pt too wide) in paragraph at lines 1366--1367
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.abc.net.au/news/2015-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1369 ...gation-for-role-in-tianjin-explosions/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1369 ...gation-for-role-in-tianjin-explosions/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (45.75258pt too wide) in paragraph at lines 1367--1369
\T1/phv/m/n/10 "https://thediplomat.com/2015/08/23-executives-government-offici
als-under-investigation-for-role-in-tianjin-explosions/ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1370 ...ed-in-chinese-warehouse-explosion.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1370 ...ed-in-chinese-warehouse-explosion.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (114.26031pt too wide) in paragraph at lines 1369--1370
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "http://america.aljazeera.com/articles/2015/8/13
/at-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1372 ...//www.mdpi.com/2071-1050/12/3/1169/htm"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1372 ...//www.mdpi.com/2071-1050/12/3/1169/htm"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1373 ...//www.mdpi.com/2071-1050/12/3/1169/htm"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1373 ...//www.mdpi.com/2071-1050/12/3/1169/htm"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (17.752pt too wide) in paragraph at lines 1372--1373
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.mdpi.com/2071-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1374 ...na-massive-explosion-hundreds-injured/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1374 ...na-massive-explosion-hundreds-injured/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (64.43178pt too wide) in paragraph at lines 1373--1374
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.cbsnews.com/news/tianjin-
 []

! Missing $ inserted.
<inserted text> 
                $
l.1375 ...pri.org.hk/download/casestudies/Tianjin_
                                                  CASE.pdf"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1375 .../download/casestudies/Tianjin_CASE.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1375 .../download/casestudies/Tianjin_CASE.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1375 .../download/casestudies/Tianjin_CASE.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (190.68266pt too wide) in paragraph at lines 1374--1375
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.hkjcdpri.org.hk/download/casestudie
s/Tianjin$[]\OML/cmm/m/it/10 ASE:pdf$ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1376 ...6168/tianjin-explosion-china-pictures/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1376 ...6168/tianjin-explosion-china-pictures/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (36.56155pt too wide) in paragraph at lines 1375--1376
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://time.com/3996168/tianjin-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1378 ...com/Tianjin-Port-explosion-August-2015"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1378 ...com/Tianjin-Port-explosion-August-2015"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1379 ...-expert-calls-china-ensure-transparent"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1379 ...-expert-calls-china-ensure-transparent"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (93.38072pt too wide) in paragraph at lines 1378--1379
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://news.un.org/en/story/2015/08/506912-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1380 ...e-explosions-rock-chinese-city-tianjin"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1380 ...e-explosions-rock-chinese-city-tianjin"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (71.03125pt too wide) in paragraph at lines 1379--1380
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.france24.com/en/20150812-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1381 ...-warehouse-explosions-in-tianjin-china"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1381 ...-warehouse-explosions-in-tianjin-china"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (286.88794pt too wide) in paragraph at lines 1380--1381
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://choice.npr.org/index.html?origin=https:
//www.npr.org/2015/08/14/432280627/what-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1383 ...bbc.com/news/world-asia-china-35506311"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1383 ...bbc.com/news/world-asia-china-35506311"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1384 ...w.washingtonpost.com/gdpr-consent/?next_
                                                  url=https%3a%2f%2fwww.wash...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1386 ...ion-is-unreal-2015-8?international=true&
                                                  r=US&IR=T"},}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1386 ...s-unreal-2015-8?international=true&r=US&
                                                  IR=T"},}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1386 ...al-2015-8?international=true&r=US&IR=T"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1386 ...al-2015-8?international=true&r=US&IR=T"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1386 ...al-2015-8?international=true&r=US&IR=T"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1386 ...al-2015-8?international=true&r=US&IR=T"}
                                                  ,}
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1386 ...al-2015-8?international=true&r=US&IR=T"}
                                                  ,}
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (63.18153pt too wide) in paragraph at lines 1383--1386
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.washingtonpost.com/gdpr-
 []


Overfull \hbox (989.2335pt too wide) in paragraph at lines 1383--1386
\T1/phv/m/n/10 consent/?next$[]\OML/cmm/m/it/10 rl \OT1/cmr/m/n/10 = \OML/cmm/m
/it/10 httpslangartiekel\OT1/cmr/m/n/10 @\OML/cmm/m/it/10 online[]$ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1387 ...ps://pubmed.ncbi.nlm.nih.gov/27311537/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1387 ...ps://pubmed.ncbi.nlm.nih.gov/27311537/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (83.27101pt too wide) in paragraph at lines 1386--1387
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://pubmed.ncbi.nlm.nih.gov/27311537/ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1388 ...-blast-insurance-idUSKCN0QM0N220150817"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1388 ...-blast-insurance-idUSKCN0QM0N220150817"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (45.22156pt too wide) in paragraph at lines 1387--1388
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.reuters.com/article/us-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1389 ...ence/article/abs/pii/S0305417916300079"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1389 ...ence/article/abs/pii/S0305417916300079"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (222.69954pt too wide) in paragraph at lines 1388--1389
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.sciencedirect.com/science/article/a
bs/pii/S0305417916300079 
 []

! Missing $ inserted.
<inserted text> 
                $
l.1390 ... = {"https://en.wikipedia.org/wiki/2015_
                                                  Tianjin_explosions"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1390 ...pedia.org/wiki/2015_Tianjin_explosions"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1390 ...pedia.org/wiki/2015_Tianjin_explosions"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1390 ...pedia.org/wiki/2015_Tianjin_explosions"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (120.8407pt too wide) in paragraph at lines 1389--1390
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://en.wikipedia.org/wiki/2015$[]\OML/cmm/m
/it/10 ianjin[]xplosions$ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1391 ...bbc.com/news/world-asia-china-33844084"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1391 ...bbc.com/news/world-asia-china-33844084"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (39.72179pt too wide) in paragraph at lines 1390--1391
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.bbc.com/news/world-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1392 ...accident-crater-revealed-a7199591.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1392 ...accident-crater-revealed-a7199591.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (133.37039pt too wide) in paragraph at lines 1391--1392
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.independent.co.uk/news/world/asia/t
ianjin-
 []

! Missing $ inserted.
<inserted text> 
                $
l.1395 ...legacy/english/protection/safework/ctrl_
                                                  banding/toolkit/main_guide...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1395 ...rk/ctrl_banding/toolkit/main_guide.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1395 ...rk/ctrl_banding/toolkit/main_guide.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1395 ...rk/ctrl_banding/toolkit/main_guide.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

[35]
! Missing $ inserted.
<inserted text> 
                $
l.1396 ...uropa.eu/documents/10162/21332507/guide_
                                                  chemical_safety_sme_en.pdf...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1396 ...32507/guide_chemical_safety_sme_en.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1396 ...32507/guide_chemical_safety_sme_en.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1396 ...32507/guide_chemical_safety_sme_en.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (261.82355pt too wide) in paragraph at lines 1395--1396
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://echa.europa.eu/documents/10162/21332507
/guide$[]\OML/cmm/m/it/10 hemical[]afety[]me[]n:pdf$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.1397 ...,	url = {"https://ec.europa.eu/taxation_
                                                  customs/dds2/SAMANCTA/EN/S...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1397 ...s2/SAMANCTA/EN/Safety/AppendixD_EN.htm"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1397 ...s2/SAMANCTA/EN/Safety/AppendixD_EN.htm"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1397 ...s2/SAMANCTA/EN/Safety/AppendixD_EN.htm"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (298.43185pt too wide) in paragraph at lines 1396--1397
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://ec.europa.eu/taxation$[]\OML/cmm/m/it/1
0 ustoms=dds\OT1/cmr/m/n/10 2\OML/cmm/m/it/10 =SAMANCTA=EN=Safety=AppendixD[]N:
htm$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.1398 ...ilo.org/safework/info/publications/WCMS_
                                                  113134/lang--en/index.htm"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1398 ...cations/WCMS_113134/lang--en/index.htm"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1398 ...cations/WCMS_113134/lang--en/index.htm"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1398 ...cations/WCMS_113134/lang--en/index.htm"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (185.51205pt too wide) in paragraph at lines 1397--1398
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.ilo.org/safework/info/publications/
WCMS$[]\OT1/cmr/m/n/10 13134\OML/cmm/m/it/10 =lang \OMS/cmsy/m/n/10 ^^@
 []


LaTeX Warning: Citation `hrw03082021investigateBeirutBlast' on page 36 undefine
d on input line 1414.

! Missing $ inserted.
<inserted text> 
                $
l.1415 ....researchgate.net/publication/348325979_
                                                  Beirut_Explosion_the_full_...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


LaTeX Warning: Citation `souaibyElHussein112020Beirutstory' on page 36 undefine
d on input line 1416.


LaTeX Warning: Citation `ifrc2020chemicalexplosionBeirutPort' on page 36 undefi
ned on input line 1418.

! Missing $ inserted.
<inserted text> 
                $
l.1419 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (368.4803pt too wide) in paragraph at lines 1413--1419
[]\T1/phv/m/n/10 https://www.hrw.org/report/2021/08/03/they-killed-us-inside/in
vestigation-august-4-beirut-blast [[]] https://www.researchgate.net/publication
/348325979$[]\OML/cmm/m/it/10 eirut[]xplosion[]he[]ull[]tory\OT1/cmr/m/n/10 [[]
]\OML/cmm/m/it/10 https \OT1/cmr/m/n/10 :
 []


Overfull \hbox (11.60094pt too wide) in paragraph at lines 1413--1419
\OML/cmm/m/it/10 ==reliefweb:int=sites=reliefweb:int=files=resources=CaseStudy[
]eirutExplosion[]echBioHazardsweb:pdf\OT1/cmr/m/n/10 [[]]$ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1420 ...om/articles/10.1186/s12913-020-05906-y"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1420 ...om/articles/10.1186/s12913-020-05906-y"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1421 ...explosion-devastated-hospital-12047452"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1421 ...explosion-devastated-hospital-12047452"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (39.68163pt too wide) in paragraph at lines 1420--1421
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://news.sky.com/story/beirut-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1422 ...h-of-the-port-of-beirut-explosion.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1422 ...h-of-the-port-of-beirut-explosion.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (189.53947pt too wide) in paragraph at lines 1421--1422
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.unodc.org/unodc/en/frontpage/2020/S
eptember/unodc-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1423 .../LEB201-Lebanon-Emergency-Response.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1423 .../LEB201-Lebanon-Emergency-Response.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (162.96996pt too wide) in paragraph at lines 1422--1423
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://reliefweb.int/sites/reliefweb.int/files
/resources/LEB201-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1424 ...handling-of-explosives-chemicals-72707"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1424 ...handling-of-explosives-chemicals-72707"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1425 ...roots-and-impacts-of-the-beirut-blast/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1425 ...roots-and-impacts-of-the-beirut-blast/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1426 ...-of-beirut-explosion-a-timely-reminder"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1426 ...-of-beirut-explosion-a-timely-reminder"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1427 ...look-like-in-canadian-cities-1.5053932"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1427 ...look-like-in-canadian-cities-1.5053932"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1431 ..."https://permanent.fdlp.gov/gpo45474/AN_
                                                  advisory.pdf"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1431 ...nent.fdlp.gov/gpo45474/AN_advisory.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1431 ...nent.fdlp.gov/gpo45474/AN_advisory.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1431 ...nent.fdlp.gov/gpo45474/AN_advisory.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (161.99744pt too wide) in paragraph at lines 1430--1431
[]\T1/phv/m/n/10 secyrity: @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-
tor, title = title, date = date, url = "https://permanent.fdlp.gov/gpo45474/AN$
[]\OML/cmm/m/it/10 dvisory:pdf$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.1435 ..."https://permanent.fdlp.gov/gpo45474/AN_
                                                  advisory.pdf"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1435 ...nent.fdlp.gov/gpo45474/AN_advisory.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1435 ...nent.fdlp.gov/gpo45474/AN_advisory.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1435 ...nent.fdlp.gov/gpo45474/AN_advisory.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (161.99744pt too wide) in paragraph at lines 1434--1435
[]\T1/phv/m/n/10 secyrity: @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-
tor, title = title, date = date, url = "https://permanent.fdlp.gov/gpo45474/AN$
[]\OML/cmm/m/it/10 dvisory:pdf$ 
 []

[36]

LaTeX Warning: Citation `caliskan09112013747boeingkalman' on page 37 undefined 
on input line 1457.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1461 ...at-led-to-boeings-737-max-crisis-a-qa/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1461 ...at-led-to-boeings-737-max-crisis-a-qa/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1462 ...ier.com/blog/archives/2019/04/excellent_
                                                  analy.html"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1462 .../archives/2019/04/excellent_analy.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1462 .../archives/2019/04/excellent_analy.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1462 .../archives/2019/04/excellent_analy.html"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1464 ...ane-software-security/?sh=4d26f7052a9e"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1464 ...ane-software-security/?sh=4d26f7052a9e"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1466 ...-to-national-security/?sh=2128ea552018"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1466 ...-to-national-security/?sh=2128ea552018"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (24.91971pt too wide) in paragraph at lines 1464--1466
\T1/phv/m/n/10 thor, AL-Tedi-tor = edi-tor, title = title, date = date, url = "
https://www.forbes.com/sites/lorenthompson/2020/11/23/five-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1468 ...stem-implicated-in-the-lion-air-crash/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1468 ...stem-implicated-in-the-lion-air-crash/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1470 ...= {"https://www.faa.gov/foia/electronic_
                                                  reading_room/boeing_readin...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1470 ...reading_room/media/737_RTS_Summary.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1470 ...reading_room/media/737_RTS_Summary.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1470 ...reading_room/media/737_RTS_Summary.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (58.29323pt too wide) in paragraph at lines 1468--1470
\T1/phv/m/n/10 title, date = date, url = "https://www.faa.gov/foia/electronic$[
]\OML/cmm/m/it/10 eading[]oom=boeing[]eading[]oom=media=\OT1/cmr/m/n/10 737[]\O
ML/cmm/m/it/10 TS[]ummary:pdf$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.1471 ... {"https://en.wikipedia.org/wiki/Boeing_
                                                  737_MAX_groundings"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1471 ...dia.org/wiki/Boeing_737_MAX_groundings"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1471 ...dia.org/wiki/Boeing_737_MAX_groundings"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1471 ...dia.org/wiki/Boeing_737_MAX_groundings"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1474 ...ax-crash-problems-human-error-mcas-faa"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1474 ...ax-crash-problems-human-error-mcas-faa"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (5.49983pt too wide) in paragraph at lines 1471--1474
\T1/phv/m/n/10 au-thor, AL-Tedi-tor = edi-tor, title = title, date = date, url 
= "https://www.theverge.com/2019/5/2/18518176/boeing-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1476 ...roblems-info-details-explained-reasons"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1476 ...roblems-info-details-explained-reasons"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1478 ...-max-will-one-safest-aircraft-history/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1478 ...-max-will-one-safest-aircraft-history/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (2.1165pt too wide) in paragraph at lines 1476--1478
\T1/phv/m/n/10 title, date = date, url = "https://www.airlineratings.com/news/b
oeings-737-max-will-one-safest-aircraft-history/ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1480 ...l/737max/737-max-software-updates.page"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1480 ...l/737max/737-max-software-updates.page"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1482 ...24/boeing-737-max-changes-beyond-mcas/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1482 ...24/boeing-737-max-changes-beyond-mcas/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[37]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1484 ...disaster-looks-to-a-software-developer"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1484 ...disaster-looks-to-a-software-developer"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1487 ...s.org/do/10.1287/orms.2019.05.05/full/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1487 ...s.org/do/10.1287/orms.2019.05.05/full/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (46.56908pt too wide) in paragraph at lines 1484--1487
\T1/phv/m/n/10 au-thor, AL-Tedi-tor = edi-tor, title = title, date = date, url 
= "https://pubsonline.informs.org/do/10.1287/orms.2019.05.05/full/ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1489 ...ing-737-max-safe-return-service-europe"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1489 ...ing-737-max-safe-return-service-europe"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1491 ...19-03-boeing-max-safety-tragedies.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1491 ...19-03-boeing-max-safety-tragedies.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1493 ...eries-two-years-to-2023/142245.article"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1493 ...eries-two-years-to-2023/142245.article"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1496 ...sight-following-boeing-737-max-review/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1496 ...sight-following-boeing-737-max-review/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (27.18504pt too wide) in paragraph at lines 1493--1496
[]\T1/phv/m/n/10 , goed-keu-ring van eu-ro-pese lucht-vaart au-to-ri-tei-ten ad
-vies aan de faa @on-li-ne-bielby27022021faaimprovesafety,
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1497 ...ht-kicks-off-massive-software-upgrade/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1497 ...ht-kicks-off-massive-software-upgrade/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (24.7233pt too wide) in paragraph at lines 1496--1497
\T1/phv/m/n/10 url = "https://www.geekwire.com/2020/faas-go-ahead-737-maxs-retu
rn-flight-kicks-off-massive-software-upgrade/ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.1498 ....researchgate.net/publication/338420944_
                                                  A_Promise_Theoretic_Accoun...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Double subscript.
l.1498 ...esearchgate.net/publication/338420944_A_
                                                  Promise_Theoretic_Account_...
I treat `x_1_2' essentially like `x_1{}_2'.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1498 ...e_Boeing_737_Max_MCAS_Algorithm_Affair"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1498 ...e_Boeing_737_Max_MCAS_Algorithm_Affair"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1498 ...e_Boeing_737_Max_MCAS_Algorithm_Affair"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (178.22008pt too wide) in paragraph at lines 1497--1498
\T1/phv/m/n/10 title, date = date, url = "https://www.researchgate.net/publicat
ion/338420944$[][]\OML/cmm/m/it/10 romise[]heoretic[]ccount[]f[]he[]oeing[]\OT1
/cmr/m/n/10 37[]\OML/cmm/m/it/10 ax[]CAS[]lgorithm[]ffair$ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1500 ...rl = {"http://www.b737.org.uk/mcas.htm"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1500 ...rl = {"http://www.b737.org.uk/mcas.htm"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1502 ...know-about-boeings-737-max-crisis.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1502 ...know-about-boeings-737-max-crisis.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1505 ...nd-thats-just-one-of-boeings-problems/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1505 ...nd-thats-just-one-of-boeings-problems/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (35.0794pt too wide) in paragraph at lines 1502--1505
\T1/phv/m/n/10 au-thor, AL-Tedi-tor = edi-tor, title = title, date = date, url 
= "https://arstechnica.com/information-technology/2020/01/737-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1507 ...ircraft-flight-ban-and-investigations/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1507 ...ircraft-flight-ban-and-investigations/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (6.70557pt too wide) in paragraph at lines 1505--1507
[]\T1/phv/m/n/10 , uit-ge-breid ar-ti-kel over de on-der-zoe-ken en het vlieg-v
er-bod @on-li-ne-ger-man190620217372yaftergrounded,
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1510 .../5-lessons-learn-boeing-737-max-fiasco"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1510 .../5-lessons-learn-boeing-737-max-fiasco"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1511 ...-aircraft-and-boeing-737-max-grounding"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1511 ...-aircraft-and-boeing-737-max-grounding"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (9.83275pt too wide) in paragraph at lines 1510--1511
\T1/phv/m/n/10 "https://www.eurocontrol.int/publication/effects-network-extra-s
tandby-aircraft-and-boeing-737-max-grounding 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1513 ...-the-boeing-737-max-crash-in-ethiopia/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1513 ...-the-boeing-737-max-crash-in-ethiopia/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (33.22261pt too wide) in paragraph at lines 1511--1513
\T1/phv/m/n/10 "https://dmd.solutions/blog/2019/04/05/how-a-single-point-of-fai
lure-spof-in-the-mcas-software-could-have-caused-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1514 ...oeings-737-max-and-the-fear-of-flying/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1514 ...oeings-737-max-and-the-fear-of-flying/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1516 ...mers/Guide-to-aviation/Boeing-737-MAX/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1516 ...mers/Guide-to-aviation/Boeing-737-MAX/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1517 ...ercial-aircraft-orders-and-deliveries/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1517 ...ercial-aircraft-orders-and-deliveries/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1519 ...y/boeing-787-code-leak-security-flaws/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1519 ...y/boeing-787-code-leak-security-flaws/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1520 ...return-backlog-risks-remain-16-09-2020"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1520 ...return-backlog-risks-remain-16-09-2020"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[38]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1522 ...m/features/what-broke-the-737-max.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1522 ...m/features/what-broke-the-737-max.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1524 ...s-plot-more-changes-after-jets-return/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1524 ...s-plot-more-changes-after-jets-return/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1527 ...as-dangerous-and-kept-it-flying-anyway"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1527 ...as-dangerous-and-kept-it-flying-anyway"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (105.51468pt too wide) in paragraph at lines 1524--1527
[]\T1/phv/m/n/10 , wat ging er mis een ana-lyse van een ex-iloot De uto-ri-tei-
ten wa-ren op de hoogte @on-li-nehruska13122019faaknown737crashrate,
 []


Overfull \hbox (29.45985pt too wide) in paragraph at lines 1524--1527
\T1/phv/m/n/10 ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, title = title, date
 = date, url = "https://www.extremetech.com/extreme/303373-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1529 ...e.com/5687473/boeing-737-alarm-system/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1529 ...e.com/5687473/boeing-737-alarm-system/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1530 ...w.-what-it-means-for-boeing-stock-2020"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1530 ...w.-what-it-means-for-boeing-stock-2020"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1531 ...hlight-a-worsening-reliability-crisis/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1531 ...hlight-a-worsening-reliability-crisis/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1533 .../2019-12-11/faa-boeing-737-max-crashes"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1533 .../2019-12-11/faa-boeing-737-max-crashes"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1535 ...03/15/boeing-737-max-grounding-1223072"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1535 ...03/15/boeing-737-max-grounding-1223072"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1537 ...rsight-the-faa-boeing-and-the-737-max/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1537 ...rsight-the-faa-boeing-and-the-737-max/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1538 ...te},	url = {"https://www.afacwa.org/the_
                                                  inside_story_of_mcas_seatt...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1538 ...the_inside_story_of_mcas_seattle_times"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1538 ...the_inside_story_of_mcas_seattle_times"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1538 ...the_inside_story_of_mcas_seattle_times"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1540 ...eing-putting-profits-before-safety.htm"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1540 ...eing-putting-profits-before-safety.htm"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Misplaced alignment tab character &.
l.1541 ...-boeing-737-035817682.html?guccounter=1&
                                                  guce_referrer=aHR0cHM6Ly93...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1541 ...ng-737-035817682.html?guccounter=1&guce_
                                                  referrer=aHR0cHM6Ly93d3cuZ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1541 ...eferrer=aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8&
                                                  guce_referrer_sig=AQAAAHZC...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1541 ...zG4xPJnWCd8-G3VLlPTY8h3H31eQ1i8hY9AIyy"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1541 ...zG4xPJnWCd8-G3VLlPTY8h3H31eQ1i8hY9AIyy"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1541 ...zG4xPJnWCd8-G3VLlPTY8h3H31eQ1i8hY9AIyy"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (36.58621pt too wide) in paragraph at lines 1540--1541
\T1/phv/m/n/10 url = "https://finance.yahoo.com/news/australia-lifts-ban-boeing
-737-035817682.html?guccounter=1guce$[]\OML/cmm/m/it/10 eferrer \OT1/cmr/m/n/10
 =
 []


Overfull \hbox (121.97855pt too wide) in paragraph at lines 1540--1541
\OML/cmm/m/it/10 aHR\OT1/cmr/m/n/10 0\OML/cmm/m/it/10 cHM\OT1/cmr/m/n/10 6\OML/
cmm/m/it/10 Ly\OT1/cmr/m/n/10 93\OML/cmm/m/it/10 d\OT1/cmr/m/n/10 3\OML/cmm/m/i
t/10 cuZ\OT1/cmr/m/n/10 29\OML/cmm/m/it/10 vZ\OT1/cmr/m/n/10 2\OML/cmm/m/it/10 
xlLmNvbS\OT1/cmr/m/n/10 8\OML/cmm/m/it/10 guce[]eferrer[]ig \OT1/cmr/m/n/10 = \
OML/cmm/m/it/10 AQAAAHZCJYy[]A\OT1/cmr/m/n/10 5\OML/cmm/m/it/10 VS\OT1/cmr/m/n/
10 2\OML/cmm/m/it/10 WiPoCvH\OT1/cmr/m/n/10 4\OML/cmm/m/it/10 xdrRNkmkdsv\OT1/c
mr/m/n/10 5\OML/cmm/m/it/10 EWJ\OT1/cmr/m/n/10 2\OML/cmm/m/it/10 RLIz[]S \OMS/c
msy/m/n/10 ^^@
 []


Overfull \hbox (137.0993pt too wide) in paragraph at lines 1540--1541
\OML/cmm/m/it/10 rxsTty\OT1/cmr/m/n/10 6\OML/cmm/m/it/10 AF\OT1/cmr/m/n/10 1[]\
OML/cmm/m/it/10 lmJiRyWYqCXDi\OT1/cmr/m/n/10 4\OML/cmm/m/it/10 p\OT1/cmr/m/n/10
 0\OML/cmm/m/it/10 Xs\OT1/cmr/m/n/10 4\OML/cmm/m/it/10 isYkNkCq\OT1/cmr/m/n/10 
2\OML/cmm/m/it/10 Pfo \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 pQ\OT1/cmr/m/n/10 6
0\OML/cmm/m/it/10 Xz[]fTNjm\OT1/cmr/m/n/10 4\OML/cmm/m/it/10 FgoZiBMC\OT1/cmr/m
/n/10 4\OML/cmm/m/it/10 zpZlB\OT1/cmr/m/n/10 6\OML/cmm/m/it/10 F\OT1/cmr/m/n/10
 0\OML/cmm/m/it/10 fwecrjE[]jAXZzG\OT1/cmr/m/n/10 4\OML/cmm/m/it/10 xPJnWCd\OT1
/cmr/m/n/10 8 \OMS/cmsy/m/n/10 ^^@
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1543 ...eers-should-pay-attention-a041290994bd"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1543 ...eers-should-pay-attention-a041290994bd"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1544 .../news.ycombinator.com/item?id=19414775"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1544 .../news.ycombinator.com/item?id=19414775"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1545 ... = {"https://www.bbc.com/news/55366320"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1545 ... = {"https://www.bbc.com/news/55366320"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1546 ...ty-concerns-fully-addressed--32569125/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1546 ...ty-concerns-fully-addressed--32569125/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (34.41609pt too wide) in paragraph at lines 1545--1546
\T1/phv/m/n/10 title, date = date, url = "https://www.marketscreener.com/news/l
atest/China-studies-Boeing-737-MAX-recertification-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1548 ...boeing-grounds-777s-after-engine-fire/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1548 ...boeing-grounds-777s-after-engine-fire/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1549 ...turn-of-boeing-737-max-1.1613627548923"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1549 ...turn-of-boeing-737-max-1.1613627548923"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (15.33286pt too wide) in paragraph at lines 1548--1549
\T1/phv/m/n/10 url = "https://gulfnews.com/business/aviation/uae-airspace-to-se
e-return-of-boeing-737-max-1.1613627548923 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1551 ...21-02-boeing-urges-grounding-777s.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1551 ...21-02-boeing-urges-grounding-777s.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (1.6384pt too wide) in paragraph at lines 1549--1551
\T1/phv/m/n/10 edi-tor, title = title, date = date, url = "https://techxplore.c
om/news/2021-02-boeing-urges-grounding-777s.html 
 []

[39]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1552 ...-after-pratt-whitney-engine-incidents/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1552 ...-after-pratt-whitney-engine-incidents/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (37.20152pt too wide) in paragraph at lines 1551--1552
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.politico.eu/article/uk-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1553 ...e-consistent-with-metal-fatigue--ntsb/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1553 ...e-consistent-with-metal-fatigue--ntsb/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (22.62453pt too wide) in paragraph at lines 1552--1553
\T1/phv/m/n/10 date, url = "https://www.timeslive.co.za/news/world/2021-02-23-d
amage-to-united-boeing-777-engine-consistent-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1555 ...-faa-over-certification-of-boeing-jet/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1555 ...-faa-over-certification-of-boeing-jet/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Citation `humanTechpersuasiveTech' on page 40 undefined on input
 line 1567.


LaTeX Warning: Citation `rezenfeld01012018persuasiveTecgHabits' on page 40 unde
fined on input line 1571.


LaTeX Warning: Citation `aldenaini28042020persuasiveTechTrends' on page 40 unde
fined on input line 1573.


LaTeX Warning: Citation `larson14062017persuasivetechmanipulates' on page 40 un
defined on input line 1575.


LaTeX Warning: Citation `tanzem22012022persuasivetechchanginglives' on page 40 
undefined on input line 1577.


LaTeX Warning: Citation `tikkakuddonenpersuasiveTechnology' on page 40 undefine
d on input line 1580.


Overfull \hbox (120.56189pt too wide) in paragraph at lines 1565--1581
[]\T1/phv/m/n/10 persuasive tech-no-logy https://www.humanetech.com/youth/persu
asive-technology [[]] https://www.minddistrict.com/blog/persuasive-
 []


Overfull \hbox (26.71327pt too wide) in paragraph at lines 1565--1581
\T1/phv/m/n/10 technology-new-insights-in-behavioural-change https://www.scienc
edirect.com/book/9781558606432/persuasive-
 []


Overfull \hbox (212.0397pt too wide) in paragraph at lines 1565--1581
\T1/phv/m/n/10 technology https://spectrum.ieee.org/how-persuasive-technology-c
an-change-your-habits [[]] https://www.frontiersin.org/articles/10.3389/frai.20
20.00007/full
 []


Overfull \hbox (10.27342pt too wide) in paragraph at lines 1565--1581
\T1/phv/m/n/10 [[]] https://psmag.com/environment/captology-fogg-invisible-mani
pulative-power-persuasive-technology-81301
 []


Overfull \hbox (17.39218pt too wide) in paragraph at lines 1565--1581
\T1/phv/m/n/10 [[]] https://www.makeuseof.com/what-is-persuasive-technology/ [[
]] https://lib.ugent.be/catalog/rug01:001235489
 []


LaTeX Warning: Citation `sprongken19032018CourtProcedureDigital' on page 40 und
efined on input line 1594.

! Missing $ inserted.
<inserted text> 
                $
l.1595 ...ds/2018/03/Procesreglement-e-Court-2017_
                                                  20180201.pdf
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


LaTeX Warning: Citation `PROCESREGLEMENTEcourt' on page 40 undefined on input l
ine 1596.

! Missing $ inserted.
<inserted text> 
                $
l.1597 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (173.58008pt too wide) in paragraph at lines 1592--1597
\T1/phv/m/n/10 niet od-ner-zocht https://www.njb.nl/blogs/a-court-with-no-face-
and-no-place/ [[]] http://www.e-court.nl/wp-content/uploads/2018/03/Procesregle
ment-
 []


LaTeX Warning: Citation `noauthor_2022-nm' on page 40 undefined on input line 1
612.

! Missing $ inserted.
<inserted text> 
                $
l.1616 ...url = {"https://na.eventscloud.com/file_
                                                  uploads/aed4bc20e84d2839b8...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1616 ...c20e84d2839b83c18bcba7e2876_Owens1.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1616 ...c20e84d2839b83c18bcba7e2876_Owens1.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1616 ...c20e84d2839b83c18bcba7e2876_Owens1.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1617 ...rt.gov/ics/alerts/IR-ALERT-H-16-056-01"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1617 ...rt.gov/ics/alerts/IR-ALERT-H-16-056-01"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1619 ...-war-frontline-russia-malware-attacks/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1619 ...-war-frontline-russia-malware-attacks/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[40]
! Missing $ inserted.
<inserted text> 
                $
l.1620 ..."https://en.wikipedia.org/wiki/December_
                                                  2015_Ukraine_power_grid_cy...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1620 ...er_2015_Ukraine_power_grid_cyberattack"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1620 ...er_2015_Ukraine_power_grid_cyberattack"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1620 ...er_2015_Ukraine_power_grid_cyberattack"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (213.56819pt too wide) in paragraph at lines 1619--1620
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://en.wikipedia.org/wiki/December$[]\OT1/c
mr/m/n/10 015[]\OML/cmm/m/it/10 kraine[]ower[]rid[]yberattack$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.1621 ....researchgate.net/publication/333671061_
                                                  Attacking_IEC-60870-5-104_...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1621 ...ttacking_IEC-60870-5-104_SCADA_Systems"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1621 ...ttacking_IEC-60870-5-104_SCADA_Systems"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1621 ...ttacking_IEC-60870-5-104_SCADA_Systems"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (23.7767pt too wide) in paragraph at lines 1620--1621
\T1/phv/m/n/10 = date, url = "https://www.researchgate.net/publication/33367106
1$[]\OML/cmm/m/it/10 ttacking[]EC \OMS/cmsy/m/n/10 ^^@ \OT1/cmr/m/n/10 60870 \O
MS/cmsy/m/n/10 ^^@ \OT1/cmr/m/n/10 5 \OMS/cmsy/m/n/10 ^^@ \OT1/cmr/m/n/10 104[]
\OML/cmm/m/it/10 CADA[]ystems$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.1622 ...://ris.utwente.nl/ws/files/6028066/3-s2_
                                                  0-B9780128015957000227.pdf...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1622 ...028066/3-s2_0-B9780128015957000227.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1622 ...028066/3-s2_0-B9780128015957000227.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1622 ...028066/3-s2_0-B9780128015957000227.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (69.81111pt too wide) in paragraph at lines 1621--1622
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://ris.utwente.nl/ws/files/6028066/3-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1623 ...smash/get/diva2:1046339/FULLTEXT01.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1623 ...smash/get/diva2:1046339/FULLTEXT01.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1624 ...a7c12551ebe7b24da8d806e87e946051a57cb9"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1624 ...a7c12551ebe7b24da8d806e87e946051a57cb9"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (130.76071pt too wide) in paragraph at lines 1623--1624
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.semanticscholar.org/paper/Cybersecu
rity-
 []

! Missing $ inserted.
<inserted text> 
                $
l.1625 ...ris.tut.fi/portal/files/16294332/jafary_
                                                  1534.pdf"},}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1625 .../portal/files/16294332/jafary_1534.pdf"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1625 .../portal/files/16294332/jafary_1534.pdf"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1625 .../portal/files/16294332/jafary_1534.pdf"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (130.61598pt too wide) in paragraph at lines 1624--1625
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://tutcris.tut.fi/portal/files/16294332/ja
fary$[]\OT1/cmr/m/n/10 534\OML/cmm/m/it/10 :pdf$ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1626 ...http://blog.nettedautomation.com/2017/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1626 ...http://blog.nettedautomation.com/2017/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (65.4409pt too wide) in paragraph at lines 1625--1626
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "http://blog.nettedautomation.com/2017/ 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1627 .../www.us-cert.gov/ncas/alerts/TA17-163A"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1627 .../www.us-cert.gov/ncas/alerts/TA17-163A"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1628 ...{date},	url = {"https://www.vice.com/en_
                                                  us/article/zmeyg8/ukraine-...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1628 ...grid-malware-crashoverride-industroyer"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1628 ...grid-malware-crashoverride-industroyer"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Missing $ inserted.
<inserted text> 
                $
l.1628 ...grid-malware-crashoverride-industroyer"}
                                                  ,}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1629 ...allix.com/ics-security-russian-hacking"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1629 ...allix.com/ics-security-russian-hacking"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1630 ...tructure/energy-sector-cybersecurity-0"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1630 ...tructure/energy-sector-cybersecurity-0"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (171.92259pt too wide) in paragraph at lines 1629--1630
[]\T1/phv/m/n/10 , @on-li-neus-g-ovC2M2, ALTau-thor = au-thor, AL-Tedi-tor = ed
i-tor, title = title, date = date, url = "https://www.energy.gov/ceser/activiti
es/cybersecurity-
 []


LaTeX Warning: Citation `ovvMortierOngevalMaliVideo' on page 41 undefined on in
put line 1677.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1683 ...baarheid-van-mali-missie-twijfelachtig"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1683 ...baarheid-van-mali-missie-twijfelachtig"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[41]
! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1684 ...-31-january-2023-and-mandate-adjusted/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1684 ...-31-january-2023-and-mandate-adjusted/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1685 .../650637-kamer-bezorgd-over-mali-missie"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1685 .../650637-kamer-bezorgd-over-mali-missie"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1686 ...sitief-tegenover-verlening-mali-missie"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1686 ...sitief-tegenover-verlening-mali-missie"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (132.79277pt too wide) in paragraph at lines 1685--1686
[]\T1/phv/m/n/10 , @on-li-ne-meijn-ders, ALTau-thor = au-thor, AL-Tedi-tor = ed
i-tor, title = title, date = date, url = "https://www.bnr.nl/nieuws/10015679/ko
enders-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1687 ...mali-missie-stoppen-verrassend-besluit"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1687 ...mali-missie-stoppen-verrassend-besluit"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (182.92184pt too wide) in paragraph at lines 1686--1687
[]\T1/phv/m/n/10 , @on-li-nebn-r-we-b-re-dac-tie, ALTau-thor = au-thor, AL-Tedi
-tor = edi-tor, title = title, date = date, url = "https://www.bnr.nl/nieuws/po
litiek/10345553/kabinet-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1688 ...issie-dreigt-binnen-coalitie~a4151d4f/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1688 ...issie-dreigt-binnen-coalitie~a4151d4f/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1689 .../536861/boek-kijkje-bij-de-mali-missie"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1689 .../536861/boek-kijkje-bij-de-mali-missie"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1690 ...://www.youtube.com/watch?v=jmZ6uSbpCvg"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1690 ...://www.youtube.com/watch?v=jmZ6uSbpCvg"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (111.46144pt too wide) in paragraph at lines 1689--1690
[]\T1/phv/m/n/10 , @on-lineID, ALTau-thor = au-thor, AL-Tedi-tor = edi-tor, tit
le = title, date = date, url = "https://www.youtube.com/watch?v=jmZ6uSbpCvg 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1691 ...-dood-bij-oefening-mali-missie-325226/"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1691 ...-dood-bij-oefening-mali-missie-325226/"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (19.43242pt too wide) in paragraph at lines 1690--1691
\T1/phv/m/n/10 "https://www.ewmagazine.nl/nederland/achtergrond/2016/07/twee-ne
derlanse-militairen-dood-bij-oefening-mali-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1692 ...hte-openhartigheid-over-missie-in-mali"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1692 ...hte-openhartigheid-over-missie-in-mali"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (8.99275pt too wide) in paragraph at lines 1691--1692
\T1/phv/m/n/10 url = "https://www.nporadio1.nl/nieuws/cultuur-media/9e3b076e-54
01-4630-bf39-f925213c5b6b/onverwachte-
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1693 ...epmj1ey0/vjfm5p0nujzw?ctx=vj2mc67lofnr"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1693 ...epmj1ey0/vjfm5p0nujzw?ctx=vj2mc67lofnr"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (53.87592pt too wide) in paragraph at lines 1692--1693
\T1/phv/m/n/10 title, date = date, url = "https://www.parlementairemonitor.nl/9
353000/1/j9vvij5epmj1ey0/vjfm5p0nujzw?ctx=vj2mc67lofnr 
 []

! Argument of \language@active@arg" has an extra }.
<inserted text> 
                \par 
l.1706 ...s/series/2doc/2016/juli/de-missie.html"}
                                                  ,}
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \language@active@arg" was complete.
<to be read again> 
                   \par 
l.1706 ...s/series/2doc/2016/juli/de-missie.html"}
                                                  ,}
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[42]
Overfull \hbox (53.4846pt too wide) in paragraph at lines 1739--1747
\T1/phv/m/n/10 schroe-ven, maar deze maat-re-ge-len zijn nog on-vol-doende door
-ge-voerd. https://www.nu.nl/internet/5814282/rekenkamer-
 []


Overfull \hbox (18.47154pt too wide) in paragraph at lines 1739--1747
\T1/phv/m/n/10 het SOC be-ter moe-ten wor-den ge-screend. https://www.rekenkame
r.nl/publicaties/rapporten/2019/03/28/digitale-
 []


Overfull \hbox (12.17374pt too wide) in paragraph at lines 1763--1765
[]\T1/phv/m/n/10 deltawerken https://www.magazinesrijkswaterstaat.nl/bereikbaar
zeeland/2021/01/krammersluizencomplex-
 []

[43]
! Missing $ inserted.
<inserted text> 
                $
l.1770 ...nw-31400-7-3715235/nieuws/cybersecurity_
                                                  vitale_waterwerken_niet_wa...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1771 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (14.41768pt too wide) in paragraph at lines 1767--1771
\T1/phv/m/n/10 https://www.watersport-tv.nl/nw-31400-7-3715235/nieuws/cybersecu
rity$[]\OML/cmm/m/it/10 itale[]aterwerken[]iet[]aterdicht:html$ 
 []


Overfull \hbox (30.6726pt too wide) in paragraph at lines 1773--1775
\T1/phv/m/n/10 door bij-zon-der slechte wacht-woor-den. https://www.rtlnieuws.n
l/nieuws/nederland/artikel/3758966/cyberbeveiliging-
 []


Overfull \hbox (99.39145pt too wide) in paragraph at lines 1776--1778
[]\T1/phv/m/n/10 Rittal doet on-der-zoek naarop af-stand besdien-bare slui-zen 
https://expert.rittal.nl/wp-content/uploads/2017/05/Referentieverhaal-
 []

[44]
! Undefined control sequence.
l.1794 \chapter
               {Uppaal source}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

<2_Body/Figures//sluismodel.jpg, id=199, 432.61626pt x 234.8775pt>
File: 2_Body/Figures//sluismodel.jpg Graphic file (type jpg)
<use 2_Body/Figures//sluismodel.jpg>
Package pdftex.def Info: 2_Body/Figures//sluismodel.jpg  used on input line 180
3.
(pdftex.def)             Requested size: 281.19724pt x 152.66856pt.

Underfull \hbox (badness 10000) in paragraph at lines 1817--1829

 []


Underfull \hbox (badness 10000) in paragraph at lines 1817--1829

 []


Underfull \hbox (badness 10000) in paragraph at lines 1817--1829

 []


Underfull \hbox (badness 10000) in paragraph at lines 1817--1829

 []

[45 <./2_Body/Figures//sluismodel.jpg>] [46]
Underfull \hbox (badness 4429) in paragraph at lines 2139--2139
[]|\T1/phv/m/n/10 When the en-gine is re-
 []


Underfull \hbox (badness 2435) in paragraph at lines 2139--2139
\T1/phv/m/n/10 chro-nous speed over the
 []


Underfull \hbox (badness 2409) in paragraph at lines 2139--2139
[]|\T1/phv/m/n/10 It does not re-quest zero
 []


Underfull \hbox (badness 1565) in paragraph at lines 2139--2139
\T1/phv/m/n/10 when chan-ging to neu-tral
 []


Underfull \hbox (badness 6300) in paragraph at lines 2139--2139
[]|\T1/phv/m/n/10 Een sluis-kolk waarin de
 []


Underfull \hbox (badness 1005) in paragraph at lines 2139--2139
\T1/phv/m/n/10 sluis op het ge-wenste ni-
 []


Underfull \hbox (badness 6876) in paragraph at lines 2139--2139
\T1/phv/m/n/10 ten van de sluis-be-heer-
 []


Underfull \hbox (badness 1748) in paragraph at lines 2139--2139
\T1/phv/m/n/10 de sleus-deu-ren open zijn
 []


Underfull \hbox (badness 3514) in paragraph at lines 2139--2139
[]|\T1/phv/m/n/10 Er wordt ge-ke-ken of de
 []


Underfull \hbox (badness 3679) in paragraph at lines 2139--2139
[]|\T1/phv/m/n/10 Voorrang tus-sen sche-pen
 []


Underfull \hbox (badness 1466) in paragraph at lines 2139--2139
[]|\T1/phv/m/n/10 Hoe lang mag een schip
 []


Underfull \hbox (badness 1281) in paragraph at lines 2139--2139
[]|\T1/phv/m/n/10 Ik wil ze-ker zijn dat mijn
 []


Underfull \hbox (badness 1052) in paragraph at lines 2139--2139
\T1/phv/m/n/10 laag wa-ter-peil bin-nen-vaart
 []


Underfull \hbox (badness 1371) in paragraph at lines 2139--2139
\T1/phv/m/n/10 staan en een schip komt
 []


Underfull \hbox (badness 2269) in paragraph at lines 2139--2139
[]|\T1/phv/m/n/10 Ik wil dat de deu-ren al-
 []


Underfull \hbox (badness 7012) in paragraph at lines 2139--2139
[]|\T1/phv/m/n/10 Ik wil dat sen-so-ren al-
 []

[47] [48] [49] [50] [51] [52] [53] [54]
LaTeX Font Info:    Trying to load font information for TS1+ptm on input line 2
213.

(C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/psnfss\ts1ptm.fd
File: ts1ptm.fd 2001/06/04 font definitions for TS1/ptm.
)
[55]
! Undefined control sequence.
l.2223 \chapter
               {Formal description of the system}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

<2_Body/Figures//sluispassage.png, id=235, 490.83376pt x 689.57625pt>
File: 2_Body/Figures//sluispassage.png Graphic file (type png)
<use 2_Body/Figures//sluispassage.png>
Package pdftex.def Info: 2_Body/Figures//sluispassage.png  used on input line 2
225.
(pdftex.def)             Requested size: 319.03815pt x 448.21924pt.
! Undefined control sequence.
l.2264 	\invaren
                 verboden
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.2265 	\deuren
                gesloten
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Overfull \hbox (93.63797pt too wide) in paragraph at lines 2229--2267
[]$[]$ $[]$ $[]$ 
 []

[56 <./2_Body/Figures//sluispassage.png>] [57]
! Undefined control sequence.
l.2321 \chapter
               {Formal validation and verification aan de hand van Kripke mo...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing $ inserted.
<inserted text> 
                $
l.2379 F C Q = sluiskolk_
                         afgesloten
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.2383 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

[58]) [59]
\openout2 = `4_Conclusions/conclusions.aux'.

 (4_Conclusions/conclusions.tex
! Undefined control sequence.
l.1 \chapter
            {Conclusions}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

[60




] [61]
! Undefined control sequence.
l.27 \chapter
             {Discussie}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

) [62]

! LaTeX Error: Environment appendices undefined.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.141 	\begin{appendices}
                         
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

\openout2 = `Appendix/Appendix.aux'.

(Appendix/Appendix.tex
! Missing $ inserted.
<inserted text> 
                $
l.8 https://na.eventscloud.com/file_
                                    uploads/aed4bc20e84d2839b83c18bcba7e2876...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.18 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (114.958pt too wide) in paragraph at lines 8--18
[]\T1/phv/m/n/10 https://na.eventscloud.com/file$[]\OML/cmm/m/it/10 ploads=aed\
OT1/cmr/m/n/10 4\OML/cmm/m/it/10 bc\OT1/cmr/m/n/10 20\OML/cmm/m/it/10 e\OT1/cmr
/m/n/10 84\OML/cmm/m/it/10 d\OT1/cmr/m/n/10 2839\OML/cmm/m/it/10 b\OT1/cmr/m/n/
10 83\OML/cmm/m/it/10 c\OT1/cmr/m/n/10 18\OML/cmm/m/it/10 bcba\OT1/cmr/m/n/10 7
\OML/cmm/m/it/10 e\OT1/cmr/m/n/10 2876[]\OML/cmm/m/it/10 wens\OT1/cmr/m/n/10 1\
OML/cmm/m/it/10 :pdfhttps \OT1/cmr/m/n/10 : \OML/cmm/m/it/10 ==www:wired:com=\O
T1/cmr/m/n/10 2016\OML/cmm/m/it/10 =\OT1/cmr/m/n/10 03\OML/cmm/m/it/10 =inside 
\OMS/cmsy/m/n/10 ^^@
 []


Overfull \hbox (157.31pt too wide) in paragraph at lines 8--18
\OML/cmm/m/it/10 cunning \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 unprecedented \O
MS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 hack \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 
ukraines \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 power \OMS/cmsy/m/n/10 ^^@ \OML/
cmm/m/it/10 grid=https \OT1/cmr/m/n/10 : \OML/cmm/m/it/10 ==www:boozallen:com=c
ontent=dam=boozallen=documents=\OT1/cmr/m/n/10 2016\OML/cmm/m/it/10 =\OT1/cmr/m
/n/10 09\OML/cmm/m/it/10 =ukraine \OMS/cmsy/m/n/10 ^^@
 []


Overfull \hbox (135.04651pt too wide) in paragraph at lines 8--18
\OML/cmm/m/it/10 sandworm \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 teamhttps \OT1/
cmr/m/n/10 : \OML/cmm/m/it/10 ==www:ifri:org=sites=default=files=atoms=files=de
sarnaud[]yber[]ttacks[]nergy[]nfrastructures[]\OT1/cmr/m/n/10 017[]\OML/cmm/m/i
t/10 :pdfhttps \OT1/cmr/m/n/10 :
 []


Overfull \hbox (199.49449pt too wide) in paragraph at lines 8--18
\OML/cmm/m/it/10 ==ris:utwente:nl=ws=files=\OT1/cmr/m/n/10 6028066\OML/cmm/m/it
/10 =\OT1/cmr/m/n/10 3 \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 s\OT1/cmr/m/n/10 2
[] \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 B\OT1/cmr/m/n/10 9780128015957000227\O
ML/cmm/m/it/10 :pdfhttps \OT1/cmr/m/n/10 : \OML/cmm/m/it/10 ==repositorio \OMS/
cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 aberto:up:pt=bitstream=\OT1/cmr/m/n/10 10216\O
ML/cmm/m/it/10 =\OT1/cmr/m/n/10 119066\OML/cmm/m/it/10 =\OT1/cmr/m/n/10 2\OML/c
mm/m/it/10 =\OT1/cmr/m/n/10 315683\OML/cmm/m/it/10 :pdfhttps \OT1/cmr/m/n/10 :
 []


Overfull \hbox (94.01382pt too wide) in paragraph at lines 8--18
\OML/cmm/m/it/10 ==www:diva \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 portal:org=sm
ash=get=diva\OT1/cmr/m/n/10 2 : 1046339\OML/cmm/m/it/10 =FULLTEXT\OT1/cmr/m/n/1
0 01\OML/cmm/m/it/10 :pdfhttps \OT1/cmr/m/n/10 : \OML/cmm/m/it/10 ==www:vice:co
m=en=article=zmeyg\OT1/cmr/m/n/10 8\OML/cmm/m/it/10 =ukraine \OMS/cmsy/m/n/10 ^
^@
 []


Overfull \hbox (292.12929pt too wide) in paragraph at lines 30--37
\T1/phv/m/n/10 Oekraine wijst naar de rus-sen [[]] https://www.wired.com/story/
russian-hackers-attack-ukraine/ https://www.boozallen.com/content/dam/boozallen
/documents/2016/09/ukraine-
 []


Overfull \hbox (3.68271pt too wide) in paragraph at lines 30--37
\T1/phv/m/n/10 report-when-the-lights-went-out.pdf https://www.reuters.com/arti
cle/us-ukraine-cybersecurity-sandworm/u-s-
 []


Overfull \hbox (72.74298pt too wide) in paragraph at lines 30--37
\T1/phv/m/n/10 firm-blames-russian-sandworm-hackers-for-ukraine-outage-idUSKBN0
UM00N20160108 https://www.reuters.com/article/us-
 []


Overfull \hbox (30.14293pt too wide) in paragraph at lines 30--37
\T1/phv/m/n/10 it-worked-and-perhaps-why-it-was-done-52802 https://jsis.washing
ton.edu/news/cyberattack-critical-infrastructure-
 []


Overfull \hbox (125.6713pt too wide) in paragraph at lines 38--40
\T1/phv/m/n/10 https://www.dragos.com/wp-content/uploads/CrashOverride-01.pdf h
ttps://www.dragos.com/wp-content/uploads/CRASHOVERRIDE.pdf 
 []

! Missing $ inserted.
<inserted text> 
                $
l.42 ...sites/default/files/atoms/files/desarnaud_
                                                  cyber_attacks_energy_infra...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.44 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (373.5785pt too wide) in paragraph at lines 41--44
\T1/phv/m/n/10 https://www.politico.eu/article/ukraine-cyber-war-frontline-russ
ia-malware-attacks/ https://www.ifri.org/sites/default/files/atoms/files/desarn
aud$[]\OML/cmm/m/it/10 yber[]ttacks[]nergy[]nfrastructures[]\OT1/cmr/m/n/10 017
[]\OML/cmm/m/it/10 :pdfhttps \OT1/cmr/m/n/10 :
 []


Overfull \hbox (94.02158pt too wide) in paragraph at lines 48--52
\T1/phv/m/n/10 https://www.sans.org/blog/confirmation-of-a-coordinated-attack-o
n-the-ukrainian-power-grid/ https://arstechnica.com/information-
 []


Overfull \hbox (94.56169pt too wide) in paragraph at lines 48--52
\T1/phv/m/n/10 technology/2017/06/crash-override-malware-may-sabotage-electric-
grids-but-its-no-stuxnet/ https://www.darkreading.com/threat-
 []


Overfull \hbox (43.46294pt too wide) in paragraph at lines 48--52
\T1/phv/m/n/10 intelligence/first-malware-designed-solely-for-electric-grids-ca
used-2016-ukraine-outage https://www.dragos.com/wp-
 []

[63




]
! Missing $ inserted.
<inserted text> 
                $
l.53 https://en.wikipedia.org/wiki/2015_
                                        Ukraine_power_grid_hack
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.56 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (103.17892pt too wide) in paragraph at lines 53--56
\T1/phv/m/n/10 https://en.wikipedia.org/wiki/2015$[]\OML/cmm/m/it/10 kraine[]ow
er[]rid[]ackhttps \OT1/cmr/m/n/10 : \OML/cmm/m/it/10 ==www:cisa:gov=news \OMS/c
msy/m/n/10 ^^@ \OML/cmm/m/it/10 events=alerts=\OT1/cmr/m/n/10 2017\OML/cmm/m/it
/10 =\OT1/cmr/m/n/10 06\OML/cmm/m/it/10 =\OT1/cmr/m/n/10 12\OML/cmm/m/it/10 =cr
ashoverride \OMS/cmsy/m/n/10 ^^@
 []

! Missing $ inserted.
<inserted text> 
                $
l.59 https://na.eventscloud.com/file_
                                     uploads/aed4bc20e84d2839b83c18bcba7e287...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.61 \subsubsection
                   {Oplossingen}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (285.35196pt too wide) in paragraph at lines 59--61
\T1/phv/m/n/10 https://na.eventscloud.com/file$[]\OML/cmm/m/it/10 ploads=aed\OT
1/cmr/m/n/10 4\OML/cmm/m/it/10 bc\OT1/cmr/m/n/10 20\OML/cmm/m/it/10 e\OT1/cmr/m
/n/10 84\OML/cmm/m/it/10 d\OT1/cmr/m/n/10 2839\OML/cmm/m/it/10 b\OT1/cmr/m/n/10
 83\OML/cmm/m/it/10 c\OT1/cmr/m/n/10 18\OML/cmm/m/it/10 bcba\OT1/cmr/m/n/10 7\O
ML/cmm/m/it/10 e\OT1/cmr/m/n/10 2876[]\OML/cmm/m/it/10 wens\OT1/cmr/m/n/10 1\OM
L/cmm/m/it/10 :pdfhttps \OT1/cmr/m/n/10 : \OML/cmm/m/it/10 ==www:boozallen:com=
content=dam=boozallen=documents=\OT1/cmr/m/n/10 2016\OML/cmm/m/it/10 =\OT1/cmr/
m/n/10 09\OML/cmm/m/it/10 =ukraine \OMS/cmsy/m/n/10 ^^@
 []

! Missing $ inserted.
<inserted text> 
                $
l.62 https://na.eventscloud.com/file_
                                     uploads/aed4bc20e84d2839b83c18bcba7e287...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.64 \subsubsection
                   {Aanbevelingen}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (44.73997pt too wide) in paragraph at lines 62--64
\T1/phv/m/n/10 https://na.eventscloud.com/file$[]\OML/cmm/m/it/10 ploads=aed\OT
1/cmr/m/n/10 4\OML/cmm/m/it/10 bc\OT1/cmr/m/n/10 20\OML/cmm/m/it/10 e\OT1/cmr/m
/n/10 84\OML/cmm/m/it/10 d\OT1/cmr/m/n/10 2839\OML/cmm/m/it/10 b\OT1/cmr/m/n/10
 83\OML/cmm/m/it/10 c\OT1/cmr/m/n/10 18\OML/cmm/m/it/10 bcba\OT1/cmr/m/n/10 7\O
ML/cmm/m/it/10 e\OT1/cmr/m/n/10 2876[]\OML/cmm/m/it/10 wens\OT1/cmr/m/n/10 1\OM
L/cmm/m/it/10 :pdfhttps \OT1/cmr/m/n/10 : \OML/cmm/m/it/10 ==www:cisa:gov=news 
\OMS/cmsy/m/n/10 ^^@
 []

! Missing $ inserted.
<inserted text> 
                $
l.109 https://na.eventscloud.com/file_
                                      uploads/aed4bc20e84d2839b83c18bcba7e28...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.111 \subsubsection
                    {spearfishing}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

[64]
! Misplaced alignment tab character &.
l.127 ...FDAD1BD940260EF12B11?doi=10.1.1.548.7490&
                                                  amp;rep=rep1&amp;type=pdf
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.127 ...EF12B11?doi=10.1.1.548.7490&amp;rep=rep1&
                                                  amp;type=pdf
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.129 ...w.researchgate.net/publication/333671061_
                                                  Attacking_IEC-60870-5-104_...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in math mode.
l.140 ...w.blackhat.com/us-17/briefings/schedule/#
                                                  industroyercrashoverride-z...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Misplaced alignment tab character &.
l.141 ...Download.aspx?DocumentID=9AKK107045A1003&
                                                  amp;LanguageCode=en&amp;Do...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.141 ...ntID=9AKK107045A1003&amp;LanguageCode=en&
                                                  amp;DocumentPartId=&amp;Ac...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.141 ...&amp;LanguageCode=en&amp;DocumentPartId=&
                                                  amp;Action=Launch
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.155 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (198.12102pt too wide) in paragraph at lines 127--155
\T1/phv/m/n/10 https://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=0513EE
D48102FDAD1BD940260EF12B11?doi=10.1.1.548.7490amp;rep=rep1amp;type=pdf
 []


Overfull \hbox (51.08655pt too wide) in paragraph at lines 127--155
\T1/phv/m/n/10 https://scialert.net/fulltext/?doi=tasr.2014.396.405 https://www
.researchgate.net/publication/333671061$[]\OML/cmm/m/it/10 ttacking[]EC \OMS/cm
sy/m/n/10 ^^@
 []


Overfull \hbox (86.84352pt too wide) in paragraph at lines 127--155
\OT1/cmr/m/n/10 60870 \OMS/cmsy/m/n/10 ^^@ \OT1/cmr/m/n/10 5 \OMS/cmsy/m/n/10 ^
^@ \OT1/cmr/m/n/10 104[]\OML/cmm/m/it/10 CADA[]ystemshttps \OT1/cmr/m/n/10 : \O
ML/cmm/m/it/10 ==www:welivesecurity:com=wp \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/1
0 content=uploads=\OT1/cmr/m/n/10 2017\OML/cmm/m/it/10 =\OT1/cmr/m/n/10 06\OML/
cmm/m/it/10 =Win\OT1/cmr/m/n/10 32[]\OML/cmm/m/it/10 ndustroyer:pdfhttps \OT1/c
mr/m/n/10 :
 []


Overfull \hbox (121.19295pt too wide) in paragraph at lines 127--155
\OML/cmm/m/it/10 ==blog:nettedautomation:com=\OT1/cmr/m/n/10 2017\OML/cmm/m/it/
10 =https \OT1/cmr/m/n/10 : \OML/cmm/m/it/10 ==arxiv:org=pdf=\OT1/cmr/m/n/10 20
01\OML/cmm/m/it/10 :\OT1/cmr/m/n/10 02925\OML/cmm/m/it/10 :pdfhttps \OT1/cmr/m/
n/10 : \OML/cmm/m/it/10 ==dl:acm:org=doi=fullHtml=\OT1/cmr/m/n/10 10\OML/cmm/m/
it/10 :\OT1/cmr/m/n/10 1145\OML/cmm/m/it/10 =\OT1/cmr/m/n/10 3381038\OML/cmm/m/
it/10 https \OT1/cmr/m/n/10 :
 []


Overfull \hbox (17.26054pt too wide) in paragraph at lines 127--155
\OML/cmm/m/it/10 ==www:win:tue:nl= setalle=\OT1/cmr/m/n/10 2017[]\OML/cmm/m/it/
10 auri[]ncryption:pdfhttp \OT1/cmr/m/n/10 : \OML/cmm/m/it/10 ==www:connectivit
y\OT1/cmr/m/n/10 4\OML/cmm/m/it/10 ir:co:uk=article=\OT1/cmr/m/n/10 175490\OML/
cmm/m/it/10 =IEC \OMS/cmsy/m/n/10 ^^@
 []


Overfull \hbox (48.34326pt too wide) in paragraph at lines 127--155
\OT1/cmr/m/n/10 62351 \OMS/cmsy/m/n/10 ^^@ ^^@\OML/cmm/m/it/10 Secure \OMS/cmsy
/m/n/10 ^^@ \OML/cmm/m/it/10 communication \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/1
0 in \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 the \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/
it/10 energy \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 industry:aspxhttps \OT1/cmr/
m/n/10 : \OML/cmm/m/it/10 ==www:virsec:com=resources=blog=virsec \OMS/cmsy/m/n/
10 ^^@
 []


Overfull \hbox (46.52142pt too wide) in paragraph at lines 127--155
\OML/cmm/m/it/10 hack \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 analysis \OMS/cmsy/
m/n/10 ^^@ \OML/cmm/m/it/10 deep \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 dive \OM
S/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 into \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 i
ndustroyer \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 aka \OMS/cmsy/m/n/10 ^^@ \OML/
cmm/m/it/10 crash \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 overridehttps \OT1/cmr/
m/n/10 : \OML/cmm/m/it/10 ==dreamlab:net=en=blog=post=fuzzing \OMS/cmsy/m/n/10 
^^@
 []


Overfull \hbox (26.98177pt too wide) in paragraph at lines 127--155
\OML/cmm/m/it/10 Attacking \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 Wind \OMS/cmsy
/m/n/10 ^^@ \OML/cmm/m/it/10 Farm \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 Control
 \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 Networks:pdfhttps \OT1/cmr/m/n/10 : \OML
/cmm/m/it/10 ==blog:checkpoint:com=research=crashoverride=https \OT1/cmr/m/n/10
 :
 []


Overfull \hbox (55.28256pt too wide) in paragraph at lines 127--155
\OML/cmm/m/it/10 a \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 threat \OMS/cmsy/m/n/1
0 ^^@ \OML/cmm/m/it/10 group \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 targeting \O
MS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 the \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 p
ower \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 grid \OMS/cmsy/m/n/10 ^^@ \OT1/cmr/m
/n/10 6159\OML/cmm/m/it/10 https \OT1/cmr/m/n/10 : \OML/cmm/m/it/10 ==search:ab
b:com=library=Download:aspx\OT1/cmr/m/n/10 ?\OML/cmm/m/it/10 DocumentID \OT1/cm
r/m/n/10 =
 []


Overfull \hbox (10.4474pt too wide) in paragraph at lines 127--155
\OT1/cmr/m/n/10 9\OML/cmm/m/it/10 AKK\OT1/cmr/m/n/10 107045\OML/cmm/m/it/10 A\O
T1/cmr/m/n/10 1003\OML/cmm/m/it/10 amp\OT1/cmr/m/n/10 ; \OML/cmm/m/it/10 Langua
geCode \OT1/cmr/m/n/10 = \OML/cmm/m/it/10 enamp\OT1/cmr/m/n/10 ; \OML/cmm/m/it/
10 DocumentPartId \OT1/cmr/m/n/10 = \OML/cmm/m/it/10 amp\OT1/cmr/m/n/10 ; \OML/
cmm/m/it/10 Action \OT1/cmr/m/n/10 = \OML/cmm/m/it/10 Launchhttps \OT1/cmr/m/n/
10 : \OML/cmm/m/it/10 ==iiot \OMS/cmsy/m/n/10 ^^@
 []


Overfull \hbox (9.04834pt too wide) in paragraph at lines 127--155
\OML/cmm/m/it/10 ==www:paloaltonetworks:com=blog=\OT1/cmr/m/n/10 2017\OML/cmm/m
/it/10 =\OT1/cmr/m/n/10 06\OML/cmm/m/it/10 =crashoverrideindustroyer \OMS/cmsy/
m/n/10 ^^@ \OML/cmm/m/it/10 protections \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 p
alo \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 alto \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/
it/10 networks \OMS/cmsy/m/n/10 ^^@
 []


Overfull \hbox (122.44545pt too wide) in paragraph at lines 127--155
\OML/cmm/m/it/10 ==www:nixu:com=blog=crashoverride \OMS/cmsy/m/n/10 ^^@ \OML/cm
m/m/it/10 threat \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 electricity \OMS/cmsy/m/
n/10 ^^@ \OML/cmm/m/it/10 networkshttps \OT1/cmr/m/n/10 : \OML/cmm/m/it/10 ==ww
w:virusbulletin:com=virusbulletin=\OT1/cmr/m/n/10 2019\OML/cmm/m/it/10 =\OT1/cm
r/m/n/10 03\OML/cmm/m/it/10 =vb\OT1/cmr/m/n/10 2018 \OMS/cmsy/m/n/10 ^^@
 []


Overfull \hbox (114.63635pt too wide) in paragraph at lines 127--155
\OML/cmm/m/it/10 paper \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 anatomy \OMS/cmsy/
m/n/10 ^^@ \OML/cmm/m/it/10 attack \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 detect
ing \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 and \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/i
t/10 defeating \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 crashoverride=https \OT1/c
mr/m/n/10 : \OML/cmm/m/it/10 ==en:wikipedia:org=wiki=Crash[]verride[]etworkhttp
s \OT1/cmr/m/n/10 :
 []


Overfull \hbox (6.36018pt too wide) in paragraph at lines 127--155
\OML/cmm/m/it/10 hackinghttps \OT1/cmr/m/n/10 : \OML/cmm/m/it/10 ==www:nixu:com
=fi=node=\OT1/cmr/m/n/10 53\OML/cmm/m/it/10 https \OT1/cmr/m/n/10 : \OML/cmm/m/
it/10 ==control:com=forums=threads=comparison \OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/i
t/10 between \OMS/cmsy/m/n/10 ^^@
 []


! LaTeX Error: Can be used only in preamble.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.160 \usepackage
                 {pgf}
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

[65]
Overfull \hbox (2.46695pt too wide) in paragraph at lines 231--231
[]|[]\T1/phv/m/n/10 Bermerkungen|  
 []


Overfull \hbox (2.46695pt too wide) in paragraph at lines 231--231
[]|[]\T1/phv/m/n/10 Bermerkungen|  
 []

[66]
! Undefined control sequence.
l.272 \setform
              {field1 = G. Wales,
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Underfull \hbox (badness 10000) in paragraph at lines 274--274
[][][][]
 []


Overfull \hbox (21.79999pt too wide) in paragraph at lines 274--274
[][] 
 []


Overfull \hbox (21.79999pt too wide) in paragraph at lines 274--274
[][] 
 []


Overfull \hbox (21.79999pt too wide) in paragraph at lines 274--275
[][] 
 []

[67]
LaTeX Font Info:    Trying to load font information for T1+pcr on input line 29
1.
 (C:\Users\gally\AppData\Local\Programs\MiKTeX\tex/latex/psnfss\t1pcr.fd
File: t1pcr.fd 2001/06/04 font definitions for T1/pcr.
)
Overfull \hbox (439.96877pt too wide) in paragraph at lines 295--295
[] \T1/pcr/m/n/10 A[] not (Stoplicht.Green && not (Deuren.hoog_open||Deuren.laa
g_open||Deuren.stopgaplow1||Deuren.stopgaplow2||Deuren.stopgaphigh1||Deuren.sto
pgaphigh2))[] 
 []


Overfull \hbox (721.96877pt too wide) in paragraph at lines 296--296
[] \T1/pcr/m/n/10 A[] not ((Deuren.hoog_open||Deuren.laag_open||Deuren.Opening_
laag||Deuren.Opening_hoog||Deuren.Closing_hoog||Deuren.Closing_laag) && (Sluis.
Draining||Sluis.Filling||Sluis.draining2||Sluis.Filling2))[] 
 []

[68] [69]
! Missing $ inserted.
<inserted text> 
                $
l.365 ...ate(0).open||gate(1).open) -> (main.pomp_
                                                  idle || main.pomp2_idle)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


! LaTeX Error: Command \item invalid in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.366 \item
             b) Als de deur is gesloten dan bevind de maincontroller zich in...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Something's wrong--perhaps a missing \item.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.366 \item  b
              ) Als de deur is gesloten dan bevind de maincontroller zich in...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Something's wrong--perhaps a missing \item.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.366 \item  b
              ) Als de deur is gesloten dan bevind de maincontroller zich in...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Command \item invalid in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.368 \item
             p15
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Missing $ inserted.
<inserted text> 
                $
l.368 \item  p
              15
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.368 \item  p
              15
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (348.6457pt too wide) in paragraph at lines 364--368
\T1/phv/m/n/10 state (un-de-fi-ned) A[] (gate(0).open||gate(1).open) -> (main.p
omp$[]\OML/cmm/m/it/10 dle\OMS/cmsy/m/n/10 jj\OML/cmm/m/it/10 main:pomp\OT1/cmr
/m/n/10 2[]\OML/cmm/m/it/10 dle\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 b\OT1/cmr/m/n/
10 )\OML/cmm/m/it/10 Alsdedeurisgeslotendanbevinddemaincontrollerzichineenprede
finedstateA\OT1/cmr/m/n/10 []\OML/cmm/m/it/10 gate:closed\OMS/cmsy/m/n/10 ^^@ \
OML/cmm/m/it/10 >
 []

! Extra }, or forgotten \endgroup.
\par ...m \@noitemerr {\@@par }\fi \else {\@@par }
                                                  \fi 
l.368 \item  p
              15
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.


Overfull \hbox (14.7152pt too wide) in paragraph at lines 369--371
[]\T1/phv/m/n/10 p16 If en-gine re-gu-la-tion is on tor-que, then the clutch is
 clo-sed (un-de-fi-ned) A[](Engine.Torque im-ply Clutch.closed 
 []

! Missing $ inserted.
<inserted text> 
                $
l.372  A[] main.s5 -> main.waterlevel_
                                      laag && idle_pomp1 && gate(0).open && ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.372  A[] main.s5 -> main.waterlevel_laag &
                                            & idle_pomp1 && gate(0).open && ...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.372  A[] main.s5 -> main.waterlevel_laag &&
                                              idle_pomp1 && gate(0).open && ...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.372 ...5 -> main.waterlevel_laag && idle_pomp1 &
                                                  & gate(0).open && gate(1)....
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.372 ... -> main.waterlevel_laag && idle_pomp1 &&
                                                   gate(0).open && gate(1).o...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.372 ...evel_laag && idle_pomp1 && gate(0).open &
                                                  & gate(1).open && (stoplig...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.372 ...vel_laag && idle_pomp1 && gate(0).open &&
                                                   gate(1).open && (stopligh...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.372 ...e_pomp1 && gate(0).open && gate(1).open &
                                                  & (stoplight(0).green && s...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.372 ..._pomp1 && gate(0).open && gate(1).open &&
                                                   (stoplight(0).green && st...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.372 ... && gate(1).open && (stoplight(0).green &
                                                  & stoplight(1).green || st...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.372 ...&& gate(1).open && (stoplight(0).green &&
                                                   stoplight(1).green || sto...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.372 ...toplight(1).green || stoplight(2).green &
                                                  & stoplight(3).green )
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.372 ...oplight(1).green || stoplight(2).green &&
                                                   stoplight(3).green )
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


! LaTeX Error: Command \item invalid in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.373 \item
             p18 Als een schip van rechts binnen komt en sluisdeuren zijn di...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Something's wrong--perhaps a missing \item.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.373 \item  p
              18 Als een schip van rechts binnen komt en sluisdeuren zijn di...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Something's wrong--perhaps a missing \item.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.373 \item  p
              18 Als een schip van rechts binnen komt en sluisdeuren zijn di...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Misplaced alignment tab character &.
l.374 ...(i:id_d) forall (j:id_s) gate(i).closed &
                                                  & stoplight.rood && main.rd_1
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.374 ...i:id_d) forall (j:id_s) gate(i).closed &&
                                                   stoplight.rood && main.rd_1
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.374 ...:id_s) gate(i).closed && stoplight.rood &
                                                  & main.rd_1
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.374 ...id_s) gate(i).closed && stoplight.rood &&
                                                   main.rd_1
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.376 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.376 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (839.32051pt too wide) in paragraph at lines 371--376
\T1/phv/m/n/10 main.waterlevel$[]\OML/cmm/m/it/10 aagidle[]omp\OT1/cmr/m/n/10 1
\OML/cmm/m/it/10 gate\OT1/cmr/m/n/10 (0)\OML/cmm/m/it/10 :opengate\OT1/cmr/m/n/
10 (1)\OML/cmm/m/it/10 :open\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 stoplight\OT1/cmr
/m/n/10 (0)\OML/cmm/m/it/10 :greenstoplight\OT1/cmr/m/n/10 (1)\OML/cmm/m/it/10 
:green\OMS/cmsy/m/n/10 jj\OML/cmm/m/it/10 stoplight\OT1/cmr/m/n/10 (2)\OML/cmm/
m/it/10 :greenstoplight\OT1/cmr/m/n/10 (3)\OML/cmm/m/it/10 :green\OT1/cmr/m/n/1
0 )\OML/cmm/m/it/10 p\OT1/cmr/m/n/10 18\OML/cmm/m/it/10 Alseenschipvanrechtsbin
nenkomtensluisdeurenzijndichtdanmoethetstoplichtoprood; depomnpintransitievanla
agnaarhoogennietandersomA\OT1/cmr/m/n/10 []!\OML/cmm/m/it/10 main:direction\OMS
/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 >
 []


Overfull \hbox (7.71498pt too wide) in paragraph at lines 371--376
\OML/cmm/m/it/10 forall\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 i \OT1/cmr/m/n/10 : \O
ML/cmm/m/it/10 id[]\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 forall\OT1/cmr/m/n/10 (\OM
L/cmm/m/it/10 j \OT1/cmr/m/n/10 : \OML/cmm/m/it/10 id[]\OT1/cmr/m/n/10 )\OML/cm
m/m/it/10 gate\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 i\OT1/cmr/m/n/10 )\OML/cmm/m/it
/10 :closedstoplight:roodmain:rd[]p\OT1/cmr/m/n/10 19\OML/cmm/m/it/10 uitvarend
enhebbenvoorangopinvarenden[]$ 
 []

! Extra }, or forgotten \endgroup.
\par ...m \@noitemerr {\@@par }\fi \else {\@@par }
                                                  \fi 
l.376 
      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.378  A[] main.s6 -> gate(0).open &
                                    & gate(1).open && stoplight(0).groen && ...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.378  A[] main.s6 -> gate(0).open &&
                                      gate(1).open && stoplight(0).groen && ...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.378 ...main.s6 -> gate(0).open && gate(1).open &
                                                  & stoplight(0).groen && st...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.378 ...ain.s6 -> gate(0).open && gate(1).open &&
                                                   stoplight(0).groen && sto...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.378 ...n && gate(1).open && stoplight(0).groen &
                                                  & stoplight(1).groen
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.378 ... && gate(1).open && stoplight(0).groen &&
                                                   stoplight(1).groen
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.380  A[] (main.rn1 || main.rn2) -> forall (i:id_
                                                  d) forall(j:id_s )gate(i)....
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


! LaTeX Error: Command \item invalid in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.381 \item
             p22 Als een schip vertrekt dan zijn altijd, sleusdeuren open, w...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Something's wrong--perhaps a missing \item.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.381 \item  p
              22 Als een schip vertrekt dan zijn altijd, sleusdeuren open, w...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Something's wrong--perhaps a missing \item.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.381 \item  p
              22 Als een schip vertrekt dan zijn altijd, sleusdeuren open, w...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Command \item invalid in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.383 \item
             p23 urgent locations; het is niet mogelijk om hier te wachten
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Missing $ inserted.
<inserted text> 
                $
l.383 \item  p
              23 urgent locations; het is niet mogelijk om hier te wachten
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.383 \item  p
              23 urgent locations; het is niet mogelijk om hier te wachten
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (396.6854pt too wide) in paragraph at lines 379--383
\T1/phv/m/n/10 main.rn2) -> fo-rall (i:id$[]\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 f
orall\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 j \OT1/cmr/m/n/10 : \OML/cmm/m/it/10 id[
]\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 gate\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 i\OT1/
cmr/m/n/10 )\OML/cmm/m/it/10 :closedstoplight\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 
j\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 :roodp\OT1/cmr/m/n/10 22\OML/cmm/m/it/10 Als
eenschipvertrektdanzijnaltijd; sleusdeurenopen; waterlevelgereedopniveau\OT1/cm
r/m/n/10 5\OML/cmm/m/it/10 of\OT1/cmr/m/n/10 0\OML/cmm/m/it/10 enstoplichtdirec
topgroenA\OT1/cmr/m/n/10 []\OML/cmm/m/it/10 main:s\OT1/cmr/m/n/10 12\OMS/cmsy/m
/n/10 ^^@ \OML/cmm/m/it/10 >
 []

! Extra }, or forgotten \endgroup.
\par ...m \@noitemerr {\@@par }\fi \else {\@@par }
                                                  \fi 
l.383 \item  p
              23 urgent locations; het is niet mogelijk om hier te wachten
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.395  A[]  main.s6 &
                     & schip.varen ->  Queue.list[N-1] <2
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.395  A[]  main.s6 &&
                       schip.varen ->  Queue.list[N-1] <2
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.399   A[] schip.varen &
                         & main.s12 || main.s13 -> (!main.rn1 && !main.rn2)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.399   A[] schip.varen &&
                           main.s12 || main.s13 -> (!main.rn1 && !main.rn2)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.399 ...n && main.s12 || main.s13 -> (!main.rn1 &
                                                  & !main.rn2)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.399 ... && main.s12 || main.s13 -> (!main.rn1 &&
                                                   !main.rn2)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

[70]
! Missing $ inserted.
<inserted text> 
                $
l.407   A[] pomp.pomp_
                      active -> main.s6 && forall(i:id_d) gate(i).closed
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.407   A[] pomp.pomp_active -> main.s6 &
                                         & forall(i:id_d) gate(i).closed
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.407   A[] pomp.pomp_active -> main.s6 &&
                                           forall(i:id_d) gate(i).closed
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


! LaTeX Error: Command \item invalid in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.408 \item
             p38 Geen deadlock
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Something's wrong--perhaps a missing \item.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.408 \item  p
              38 Geen deadlock
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Something's wrong--perhaps a missing \item.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.408 \item  p
              38 Geen deadlock
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Command \item invalid in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.409 \item
             p39 Voor geen enkel pad geldt dat als  de deuren gesloten zijn ...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Missing $ inserted.
<inserted text> 
                $
l.409 \item  p
              39 Voor geen enkel pad geldt dat als  de deuren gesloten zijn ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.409 \item  p
              39 Voor geen enkel pad geldt dat als  de deuren gesloten zijn ...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (72.24745pt too wide) in paragraph at lines 406--409
\T1/phv/m/n/10 naal aan de pomp als de sleu-deu-ren dicht-zijn A[] pomp.pomp$[]
\OML/cmm/m/it/10 ctive\OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 > main:s\OT1/cmr/m/
n/10 6\OML/cmm/m/it/10 forall\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 i \OT1/cmr/m/n/1
0 : \OML/cmm/m/it/10 id[]\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 gate\OT1/cmr/m/n/10 
(\OML/cmm/m/it/10 i\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 :closedp\OT1/cmr/m/n/10 38
\OML/cmm/m/it/10 Geendeadlock[][]$ 
 []

! Extra }, or forgotten \endgroup.
\par ...m \@noitemerr {\@@par }\fi \else {\@@par }
                                                  \fi 
l.409 \item  p
              39 Voor geen enkel pad geldt dat als  de deuren gesloten zijn ...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.410  A[] not forall(i:id_
                           d) gate.closed ->(main.s12||main.s13)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


! LaTeX Error: Command \item invalid in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.411 \item
             p40 Voor alle paden geld dat als een sluis aan het voorbereiden...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Something's wrong--perhaps a missing \item.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.411 \item  p
              40 Voor alle paden geld dat als een sluis aan het voorbereiden...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Something's wrong--perhaps a missing \item.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.411 \item  p
              40 Voor alle paden geld dat als een sluis aan het voorbereiden...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Command \item invalid in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.413 \item
              p41 Voor alle paden geld dat als een deur dicht is het aantal ...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Missing $ inserted.
<inserted text> 
                $
l.413 \item   p
               41 Voor alle paden geld dat als een deur dicht is het aantal ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.413 \item   p
               41 Voor alle paden geld dat als een deur dicht is het aantal ...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (337.92502pt too wide) in paragraph at lines 409--413
\T1/phv/m/n/10 een schip naar bui-ten te la-ten. A[] not forall(i:id$[]\OT1/cmr
/m/n/10 )\OML/cmm/m/it/10 gate:closed\OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 > \O
T1/cmr/m/n/10 (\OML/cmm/m/it/10 main:s\OT1/cmr/m/n/10 12\OMS/cmsy/m/n/10 jj\OML
/cmm/m/it/10 main:s\OT1/cmr/m/n/10 13)\OML/cmm/m/it/10 p\OT1/cmr/m/n/10 40\OML/
cmm/m/it/10 Voorallepadengelddatalseensluisaanhetvoorbereidenis; danzijnalledeu
rendcht:A\OT1/cmr/m/n/10 []\OML/cmm/m/it/10 main:s\OT1/cmr/m/n/10 6\OMS/cmsy/m/
n/10 ^^@ \OML/cmm/m/it/10 >
 []

! Extra }, or forgotten \endgroup.
\par ...m \@noitemerr {\@@par }\fi \else {\@@par }
                                                  \fi 
l.413 \item   p
               41 Voor alle paden geld dat als een deur dicht is het aantal ...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.


Overfull \hbox (16.3131pt too wide) in paragraph at lines 417--419
[]\T1/phv/m/n/10 p43 Voor alle pa-den geldt dat de glo-bale tijd lan-ger is dan
 30 tijds-een-he-den A[] main.s13-> main.processtime>30 
 []

! Missing $ inserted.
<inserted text> 
                $
l.430  A[] forall(i:id_
                       s) stoplight.groen -> gate(0).open && gate(1).open &&...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.430 ...i:id_s) stoplight.groen -> gate(0).open &
                                                  & gate(1).open && (main.po...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.430 ...:id_s) stoplight.groen -> gate(0).open &&
                                                   gate(1).open && (main.pom...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.430 ...t.groen -> gate(0).open && gate(1).open &
                                                  & (main.pomp1_idle || main...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.430 ....groen -> gate(0).open && gate(1).open &&
                                                   (main.pomp1_idle || main....
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


! LaTeX Error: Command \item invalid in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.431 \item
             p50 In geen enkele staat van de sluis behalve tussen de lowerga...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Something's wrong--perhaps a missing \item.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.431 \item  p
              50 In geen enkele staat van de sluis behalve tussen de lowerga...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Something's wrong--perhaps a missing \item.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.431 \item  p
              50 In geen enkele staat van de sluis behalve tussen de lowerga...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Command \item invalid in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.433 \item
             p51 Voor alle paden in een pomp geldt dat als water level lager...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Missing $ inserted.
<inserted text> 
                $
l.433 \item  p
              51 Voor alle paden in een pomp geldt dat als water level lager...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.433 \item  p
              51 Voor alle paden in een pomp geldt dat als water level lager...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (60.11536pt too wide) in paragraph at lines 429--433
[]\T1/phv/m/n/10 p49 EEn stop-lich staat al-tijd op groen als de deu-ren open s
taan en de pomp niet be-zig is. A[] forall(i:id$[]\OT1/cmr/m/n/10 )\OML/cmm/m/i
t/10 stoplight:groen\OMS/cmsy/m/n/10 ^^@ \OML/cmm/m/it/10 >
 []


Overfull \hbox (620.92093pt too wide) in paragraph at lines 429--433
\OML/cmm/m/it/10 gate\OT1/cmr/m/n/10 (0)\OML/cmm/m/it/10 :opengate\OT1/cmr/m/n/
10 (1)\OML/cmm/m/it/10 :open\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 main:pomp\OT1/cmr
/m/n/10 1[]\OML/cmm/m/it/10 dle\OMS/cmsy/m/n/10 jj\OML/cmm/m/it/10 main:pomp\OT
1/cmr/m/n/10 2[]\OML/cmm/m/it/10 dle\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 p\OT1/cmr
/m/n/10 50\OML/cmm/m/it/10 Ingeenenkelestaatvandesluisbehalvetussendelowergatee
nuppergateenuppergateenlowergateendestatenAtArrivalLowenAtEnteringHighisdewacht
tijdlangerdan\OT1/cmr/m/n/10 5\OML/cmm/m/it/10 tijdseenhedenA\OT1/cmr/m/n/10 []
\OML/cmm/m/it/10 not[][]$ 
 []

! Extra }, or forgotten \endgroup.
\par ...m \@noitemerr {\@@par }\fi \else {\@@par }
                                                  \fi 
l.433 \item  p
              51 Voor alle paden in een pomp geldt dat als water level lager...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.438 ...ot main.rn1 || main.rn2 -> gate(0).open &
                                                  & gate(1).open && Queue.li...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.438 ...t main.rn1 || main.rn2 -> gate(0).open &&
                                                   gate(1).open && Queue.lis...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.438 ...ain.rn2 -> gate(0).open && gate(1).open &
                                                  & Queue.list[N-1] == 0 && ...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.438 ...in.rn2 -> gate(0).open && gate(1).open &&
                                                   Queue.list[N-1] == 0 && (...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.438 ...&& gate(1).open && Queue.list[N-1] == 0 &
                                                  & ((stoplight(0).groen||st...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.438 ...& gate(1).open && Queue.list[N-1] == 0 &&
                                                   ((stoplight(0).groen||sto...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.438 ...oplight(1).groen) ||(stoplight(3).groen &
                                                  &stoplight(4).groen))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.438 ...plight(1).groen) ||(stoplight(3).groen &&
                                                  stoplight(4).groen))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.440 ...|| main.blocked2) -> Queue.list[N-1] >0 &
                                                  & gate(0).closed && gate(1...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.440 ...| main.blocked2) -> Queue.list[N-1] >0 &&
                                                   gate(0).closed && gate(1)...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.440 ...-> Queue.list[N-1] >0 && gate(0).closed &
                                                  & gate(1).closed && main.w...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.440 ...> Queue.list[N-1] >0 && gate(0).closed &&
                                                   gate(1).closed && main.wa...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.440 ... >0 && gate(0).closed && gate(1).closed &
                                                  & main.waterlevel==main.wa...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.440 ...>0 && gate(0).closed && gate(1).closed &&
                                                   main.waterlevel==main.wat...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.440 ...osed && main.waterlevel==main.waterlevel_
                                                  laag
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


! LaTeX Error: Command \item invalid in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.441 \item
             p55 Er is een mogelijkheid  dat vanuit pomp get stoplicht op ro...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Something's wrong--perhaps a missing \item.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.441 \item  p
              55 Er is een mogelijkheid  dat vanuit pomp get stoplicht op ro...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! LaTeX Error: Something's wrong--perhaps a missing \item.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.441 \item  p
              55 Er is een mogelijkheid  dat vanuit pomp get stoplicht op ro...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Misplaced alignment tab character &.
l.442  E<> main.rn1||main.rn2 -> gate(0).closed &
                                                 &main.waterlevel==waterlaag
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.442  E<> main.rn1||main.rn2 -> gate(0).closed &&
                                                  main.waterlevel==waterlaag
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


! LaTeX Error: Command \item invalid in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.443 \item
             p56 Het kan voorkomen dat bij state pompaan het waterniveau gel...

Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Missing $ inserted.
<inserted text> 
                $
l.443 \item  p
              56 Het kan voorkomen dat bij state pompaan het waterniveau gel...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.443 \item  p
              56 Het kan voorkomen dat bij state pompaan het waterniveau gel...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (251.51665pt too wide) in paragraph at lines 439--443
\T1/phv/m/n/10 gate(1).closed  main.waterlevel==main.waterlevel$[]\OML/cmm/m/it
/10 aagp\OT1/cmr/m/n/10 55\OML/cmm/m/it/10 Eriseenmogelijkheiddatvanuitpompgets
toplichtoproodwordtgezetenwaterlevelgelijkisaanwaterlaagE <>
 []

! Extra }, or forgotten \endgroup.
\par ...m \@noitemerr {\@@par }\fi \else {\@@par }
                                                  \fi 
l.443 \item  p
              56 Het kan voorkomen dat bij state pompaan het waterniveau gel...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.


Overfull \hbox (4.09344pt too wide) in paragraph at lines 443--445
[]\T1/phv/m/n/10 p56 Het kan voor-ko-men dat bij state pompaan het wa-ter-ni-ve
au ge-lijk is aan wa-ter-laag E<> main.rn1||main.rn2
 []

! Misplaced alignment tab character &.
l.446  A[] gate(0).open &
                         & ()main.direction ==0||main.direction==1)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.446  A[] gate(0).open &&
                           ()main.direction ==0||main.direction==1)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

[71]

LaTeX Warning: Citation `locke_2020' on page 72 undefined on input line 469.


LaTeX Warning: Citation `gnsguides' on page 72 undefined on input line 474.

[72]
! Undefined control sequence.
l.537  \chapter
               {Testresultaten CTL logica}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

[73]
! Undefined control sequence.
<argument>  D=\Set 
                   {x\in \nat }{1\le x\le 100}\\ D=\Set [\big ]{x\in \nat }{...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument>  D=\Set {x\in \nat 
                              }{1\le x\le 100}\\ D=\Set [\big ]{x\in \nat }{...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...x\in \nat }{1\le x\le 100}\\ D=\Set 
                                                  [\big ]{x\in \nat }{1\le x...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...\le 100}\\ D=\Set [\big ]{x\in \nat 
                                                  }{1\le x\le 100}\\ D=\Set ...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...x\in \nat }{1\le x\le 100}\\ D=\Set 
                                                  [\Big ]{x\in \nat }{1\le x...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...\le 100}\\ D=\Set [\Big ]{x\in \nat 
                                                  }{1\le x\le 100}\\ D=\Set ...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...x\in \nat }{1\le x\le 100}\\ D=\Set 
                                                  [\bigg ]{x\in \nat }{1\le ...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...le 100}\\ D=\Set [\bigg ]{x\in \nat 
                                                  }{1\le x\le 100}\\ D=\Set ...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...x\in \nat }{1\le x\le 100}\\ D=\Set 
                                                  [\Bigg ]{x\in \nat }{1\le ...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...le 100}\\ D=\Set [\Bigg ]{x\in \nat 
                                                  }{1\le x\le 100}\\ D=\Set ...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...x\in \nat }{1\le x\le 100}\\ D=\Set 
                                                  *{x\in \nat }{1\le x\le \f...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...1\le x\le 100}\\ D=\Set *{x\in \nat 
                                                  }{1\le x\le \frac {200}{2}} 
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument>  D=\Set 
                   {x\in \nat }{1\le x\le 100}\\ D=\Set [\big ]{x\in \nat }{...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument>  D=\Set {x\in \nat 
                              }{1\le x\le 100}\\ D=\Set [\big ]{x\in \nat }{...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...x\in \nat }{1\le x\le 100}\\ D=\Set 
                                                  [\big ]{x\in \nat }{1\le x...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...\le 100}\\ D=\Set [\big ]{x\in \nat 
                                                  }{1\le x\le 100}\\ D=\Set ...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...x\in \nat }{1\le x\le 100}\\ D=\Set 
                                                  [\Big ]{x\in \nat }{1\le x...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...\le 100}\\ D=\Set [\Big ]{x\in \nat 
                                                  }{1\le x\le 100}\\ D=\Set ...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...x\in \nat }{1\le x\le 100}\\ D=\Set 
                                                  [\bigg ]{x\in \nat }{1\le ...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...le 100}\\ D=\Set [\bigg ]{x\in \nat 
                                                  }{1\le x\le 100}\\ D=\Set ...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...x\in \nat }{1\le x\le 100}\\ D=\Set 
                                                  [\Bigg ]{x\in \nat }{1\le ...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...le 100}\\ D=\Set [\Bigg ]{x\in \nat 
                                                  }{1\le x\le 100}\\ D=\Set ...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...x\in \nat }{1\le x\le 100}\\ D=\Set 
                                                  *{x\in \nat }{1\le x\le \f...
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...1\le x\le 100}\\ D=\Set *{x\in \nat 
                                                  }{1\le x\le \frac {200}{2}} 
l.549  	\end{gather*}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.559  $L\stock
                a$
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Overfull \hbox (33.02544pt too wide) in paragraph at lines 556--560
\OML/cmm/m/it/10 S\OT1/cmr/m/n/10 0 \OMS/cmsy/m/n/10 ^^R \OML/cmm/m/it/10 SxSis
eentransitierelatiedietotaalmoetzij; datbetekent; datvoorelkestates \OMS/cmsy/m
/n/10 2 \OML/cmm/m/it/10 Sereenstatsiss[] \OMS/cmsy/m/n/10 2 \OML/cmm/m/it/10 S
zodatR\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 s; s[]\OT1/cmr/m/n/10 )$
 []

! Undefined control sequence.
<recently read> \mtproforall 
                             
l.563  $\mtproforall
                     x\,\mtproexists y \cap \subset \in \vee \diamondsuit \d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.563  $\mtproforall x\,\mtproexists
                                     y \cap \subset \in \vee \diamondsuit \d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.608  \chapter
               {Time bound derivation}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


LaTeX Info: File `mydata.csv' already exists on the system.
            Not generating it from this source.


Overfull \hbox (265.96877pt too wide) in paragraph at lines 639--639
[]  \T1/pcr/m/n/10 In welke staat de automaat zich ook bevindt, in alle richtin
gen kom je vroeg of laat een state tegen, waarin p geldig is. 
 []

[74]
! Undefined control sequence.
l.650  \VerbatimInput
                     {mydata.csv}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Underfull \hbox (badness 1924) in paragraph at lines 674--674
[]|\T1/phv/m/n/10 It is the ve-ge-ta-ble, which is
 []


Underfull \hbox (badness 1783) in paragraph at lines 674--674
\T1/phv/m/n/10 high in fi-ber and B-Vitamins.
 []


Underfull \hbox (badness 3758) in paragraph at lines 674--674
\T1/phv/m/n/10 It also pro-vi-des an-ti-oxi-dants,
 []

[75]
Overfull \hbox (445.96877pt too wide) in paragraph at lines 721--721
[]  \T1/pcr/m/n/10 A[] not (Stoplicht.Green && not (Deuren.hoog_open||Deuren.la
ag_open||Deuren.stopgaplow1||Deuren.stopgaplow2||Deuren.stopgaphigh1||Deuren.st
opgaphigh2))[] 
 []


Overfull \hbox (727.96877pt too wide) in paragraph at lines 722--722
[]  \T1/pcr/m/n/10 A[] not ((Deuren.hoog_open||Deuren.laag_open||Deuren.Opening
_laag||Deuren.Opening_hoog||Deuren.Closing_hoog||Deuren.Closing_laag) && (Sluis
.Draining||Sluis.Filling||Sluis.draining2||Sluis.Filling2))[] 
 []


Package scrlayer-scrpage Warning: \headheight to low.
(scrlayer-scrpage)                At least 24.0pt needed,
(scrlayer-scrpage)                but only 12.0pt found.
(scrlayer-scrpage)                I'll enlarge \headheight, for further
(scrlayer-scrpage)                processing, but you should do this yourself,
(scrlayer-scrpage)                e.g., setting geometry's option
(scrlayer-scrpage)                `head=24.0pt'.
(scrlayer-scrpage)                I'll also decrease \topmargin on input line 7
41.


Overfull \vbox (12.0pt too high) has occurred while \output is active []

 [76]
Overfull \hbox (445.96877pt too wide) in paragraph at lines 778--778
[]  \T1/pcr/m/n/10 Als het schip boven is, dan is waterlvel gelijk aan hoog, fi
lling valve is dicht, lower gates zijn gesloten, uppergates zijn open,empty val
ve is dicht.[] 
 []


Overfull \hbox (325.96877pt too wide) in paragraph at lines 779--779
[]  \T1/pcr/m/n/10 Schip is in waterlock, waterlevel is hoog, filling valve is 
dicht, lower gates gesloten, upper gates gesloten, empty valve is open.[] 
 []


Overfull \hbox (361.96877pt too wide) in paragraph at lines 780--780
[]  \T1/pcr/m/n/10 Schip is dan laag, waterlevel gelijk aan laag, filling valve
 is dicht, lowergates zijn open, uppergates zijn dicht, empty valve is dicht.[]
 
 []


Overfull \hbox (421.96877pt too wide) in paragraph at lines 784--784
[]  \T1/pcr/m/n/10 Als schip beneden is dan is waterlevel gelijk aan laag, fill
ing valve is dicht, lower gates zijn open, upper gates zijn dicht, empty valve 
is open.[] 
 []


Overfull \hbox (397.96877pt too wide) in paragraph at lines 785--785
[]  \T1/pcr/m/n/10 Schip is in water lock, waterlevel is laag, flilling valve i
s open, lower gates zijn gesloten, upper gates zij gesloten, empty valve is dic
ht,.[] 
 []


Overfull \hbox (385.96877pt too wide) in paragraph at lines 786--786
[]  \T1/pcr/m/n/10 Schip is dan hoog, waterlevel is gelijk aan hoog, filling va
lve is dicht, uppergates zijn open, lowergates zijn dicht, filling valve is dic
ht[] 
 []

[77] [78] [79] [80]
Overfull \hbox (445.96877pt too wide) in paragraph at lines 966--966
[]  \T1/pcr/m/n/10 Als het schip boven is, dan is waterlvel gelijk aan hoog, fi
lling valve is dicht, lower gates zijn gesloten, uppergates zijn open,empty val
ve is dicht.[] 
 []


Overfull \hbox (325.96877pt too wide) in paragraph at lines 967--967
[]  \T1/pcr/m/n/10 Schip is in waterlock, waterlevel is hoog, filling valve is 
dicht, lower gates gesloten, upper gates gesloten, empty valve is open.[] 
 []


Overfull \hbox (361.96877pt too wide) in paragraph at lines 968--968
[]  \T1/pcr/m/n/10 Schip is dan laag, waterlevel gelijk aan laag, filling valve
 is dicht, lowergates zijn open, uppergates zijn dicht, empty valve is dicht.[]
 
 []


Overfull \hbox (421.96877pt too wide) in paragraph at lines 972--972
[]  \T1/pcr/m/n/10 Als schip beneden is dan is waterlevel gelijk aan laag, fill
ing valve is dicht, lower gates zijn open, upper gates zijn dicht, empty valve 
is open.[] 
 []


Overfull \hbox (397.96877pt too wide) in paragraph at lines 973--973
[]  \T1/pcr/m/n/10 Schip is in water lock, waterlevel is laag, flilling valve i
s open, lower gates zijn gesloten, upper gates zij gesloten, empty valve is dic
ht,.[] 
 []


Overfull \hbox (385.96877pt too wide) in paragraph at lines 974--974
[]  \T1/pcr/m/n/10 Schip is dan hoog, waterlevel is gelijk aan hoog, filling va
lve is dicht, uppergates zijn open, lowergates zijn dicht, filling valve is dic
ht[] 
 []


! LaTeX Error: Can be used only in preamble.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.996  \usepackage
                  {pgf}
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


! LaTeX Error: Command \myform already defined.
               Or name \end... illegal, see p.192 of the manual.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1045  }
         
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

[81]

! Package xcolor Error: Undefined color `Strength'.

See the xcolor package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1057  	\tcbitem[header = Strength]
                                    
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! Package xcolor Error: Undefined color `Weakness'.

See the xcolor package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1059  	\tcbitem[header = Weakness]
                                    
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! Package xcolor Error: Undefined color `Opportunity'.

See the xcolor package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1071  	\tcbitem[header = Opportunity]
                                       
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.


! Package xcolor Error: Undefined color `threat'.

See the xcolor package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1073  	\tcbitem[header = threat]
                                  
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

[82]
! Undefined control sequence.
l.1092 \cheading
                {Fake Course Evaluation Summary for \textsc{course
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Overfull \hbox (117.75238pt too wide) in alignment at lines 1095--1116
 [] [] [] [] [] [] [] [] [] [] [] [] [] 
 []

! Undefined control sequence.
l.1120 	(14.29) & \highest
                          {12} & \highest{(42.86)} & 4
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1120 	(14.29) & \highest{12} & \highest
                                         {(42.86)} & 4
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1123 	\myrowcolour
                    %
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1125 	\highest
                {15} & \highest{(53.57)} & 5 & (17.86) & 5 & (17.86) & 0 &
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1125 	\highest{15} & \highest
                               {(53.57)} & 5 & (17.86) & 5 & (17.86) & 0 &
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1129 	(28.57) & \highest
                          {15}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1130 	& \highest
                  {(53.57)} & 1 & (3.57) & 0 & (0.00) & 0 & (0.00) \\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1132 	\myrowcolour
                    %
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1134 	(28.57) & \highest
                          {10} & \highest{(35.71)}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1134 	(28.57) & \highest{10} & \highest
                                         {(35.71)}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1138 	\highest
                {9} & \highest{(32.14)}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1138 	\highest{9} & \highest
                              {(32.14)}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1139 	& 4 & (14.29) & \highest
                                {9} & \highest{(32.14)} & 0 & (0.00) & 0 & (...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1139 	& 4 & (14.29) & \highest{9} & \highest
                                              {(32.14)} & 0 & (0.00) & 0 & (...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1141 	\myrowcolour
                    %
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1142 ...bout the Instructor or Course & \highest
                                                  {10} &
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1143 	\highest
                {(35.71)} & \highest{10} & \highest{(35.71)}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1143 	\highest{(35.71)} & \highest
                                    {10} & \highest{(35.71)}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1143 ...ghest{(35.71)} & \highest{10} & \highest
                                                  {(35.71)}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1146 ...bout the Instructor or Course & \highest
                                                  {12} &
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1147 	\highest
                {(42.86)} & \highest{12} & \highest{(42.86)} & 3
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1147 	\highest{(42.86)} & \highest
                                    {12} & \highest{(42.86)} & 3
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1147 ...ghest{(42.86)} & \highest{12} & \highest
                                                  {(42.86)} & 3
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1150 	\myrowcolour
                    %
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1151 ...bout the Instructor or Course & \highest
                                                  {12} &
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1152 	\highest
                {(42.86)} & 3 & (10.71) & 7
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1155 ...bout the Instructor or Course & \highest
                                                  {10} &
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1156 	\highest
                {(35.71)} & 6 & (21.43) & 6 & (21.43) & 6 & (21.43)
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1159 	\myrowcolour
                    %
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1161 	(17.86) & \highest
                          {12} & \highest{(42.86)} & 2 & (7.14)
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1161 	(17.86) & \highest{12} & \highest
                                         {(42.86)} & 2 & (7.14)
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1165 	(28.57) & \highest
                          {11} & \highest{(39.29)} & 3 & (10.71) & 3 & (10.71)
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1165 	(28.57) & \highest{11} & \highest
                                         {(39.29)} & 3 & (10.71) & 3 & (10.71)
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1168 	\myrowcolour
                    %
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1169 ...bout the Instructor or Course & \highest
                                                  {18} &
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1170 	\highest
                {(64.29)}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1173 ...bout the Instructor or Course & \highest
                                                  {15} &
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1174 	\highest
                {(53.57)}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1177 	\myrowcolour
                    %
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1179 	\highest
                {13} & \highest{(46.43)} & 4 & (14.29) & 6 & (21.43) & 2
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.1179 	\highest{13} & \highest
                               {(46.43)} & 4 & (14.29) & 6 & (21.43) & 2
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Overfull \hbox (117.75238pt too wide) in alignment at lines 1116--1184
 [] [] [] [] [] [] [] [] [] [] [] [] [] 
 []

) [83]

! LaTeX Error: \begin{document} ended by \end{appendices}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.143 	\end{appendices}
                       
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

(verslag.bbl) [84


] (verslag.aux (1_Intro/intro.aux) (2_Body/body.aux)
(4_Conclusions/conclusions.aux) (Appendix/Appendix.aux))

LaTeX Warning: There were undefined references.

 )
(\end occurred inside a group at level 9)

### simple group (level 9) entered at line 1305 ({)
### simple group (level 8) entered at line 1195 ({)
### simple group (level 7) entered at line 1195 ({)
### simple group (level 6) entered at line 1188 ({)
### simple group (level 5) entered at line 1188 ({)
### simple group (level 4) entered at line 1182 ({)
### simple group (level 3) entered at line 1182 ({)
### simple group (level 2) entered at line 1094 ({)
### simple group (level 1) entered at line 1094 ({)
### bottom level 
Here is how much of TeX's memory you used:
 25812 strings out of 475385
 572971 string characters out of 2776908
 1631581 words of memory out of 3000000
 46659 multiletter control sequences out of 15000+600000
 513063 words of font info for 69 fonts, out of 8000000 for 9000
 1141 hyphenation exceptions out of 8191
 123i,21n,120p,1253b,1576s stack positions out of 10000i,1000n,20000p,200000b,80000s
{C:/Users/gally/AppData/Local/Programs/MiKTeX/fonts/enc/dvips/b
ase/8r.enc}<C:/Users/gally/AppData/Local/Programs/MiKTeX/fonts/type1/public/ams
fonts/cm/cmex10.pfb><C:/Users/gally/AppData/Local/Programs/MiKTeX/fonts/type1/p
ublic/amsfonts/cm/cmmi10.pfb><C:/Users/gally/AppData/Local/Programs/MiKTeX/font
s/type1/public/amsfonts/cm/cmmi5.pfb><C:/Users/gally/AppData/Local/Programs/MiK
TeX/fonts/type1/public/amsfonts/cm/cmmi7.pfb><C:/Users/gally/AppData/Local/Prog
rams/MiKTeX/fonts/type1/public/amsfonts/cm/cmr10.pfb><C:/Users/gally/AppData/Lo
cal/Programs/MiKTeX/fonts/type1/public/amsfonts/cm/cmr7.pfb><C:/Users/gally/App
Data/Local/Programs/MiKTeX/fonts/type1/public/amsfonts/cm/cmsy10.pfb><C:/Users/
gally/AppData/Local/Programs/MiKTeX/fonts/type1/public/amsfonts/cm/cmsy5.pfb><C
:/Users/gally/AppData/Local/Programs/MiKTeX/fonts/type1/public/amsfonts/cm/cmsy
7.pfb><C:/Users/gally/AppData/Local/Programs/MiKTeX/fonts/type1/urw/courier/ucr
r8a.pfb><C:/Users/gally/AppData/Local/Programs/MiKTeX/fonts/type1/urw/helvetic/
uhvb8a.pfb><C:/Users/gally/AppData/Local/Programs/MiKTeX/fonts/type1/urw/helvet
ic/uhvr8a.pfb><C:/Users/gally/AppData/Local/Programs/MiKTeX/fonts/type1/urw/tim
es/utmb8a.pfb><C:/Users/gally/AppData/Local/Programs/MiKTeX/fonts/type1/urw/tim
es/utmr8a.pfb><C:/Users/gally/AppData/Local/Programs/MiKTeX/fonts/type1/urw/tim
es/utmr8a.pfb>
Output written on verslag.pdf (85 pages, 523176 bytes).
PDF statistics:
 397 PDF objects out of 1000 (max. 8388607)
 0 named destinations out of 1000 (max. 500000)
 172 words of extra memory for PDF output out of 10000 (max. 10000000)

